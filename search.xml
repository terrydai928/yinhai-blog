<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>工控安全与传统安全的区别</title>
      <link href="/post/3883376956.html"/>
      <url>/post/3883376956.html</url>
      
        <content type="html"><![CDATA[<p>在当代，全球制造业正在经历一场前所未有的技术变革。工业4.0不仅代表着自动化和数据交换的进步，它还揭示了工业自动化、智能制造与系统集成的融合。这种集成为企业带来了效率和质量的双重提升，但同时也暴露出新的安全隐患。工控系统成为了这一转型的中心，而确保其安全运行则成为了一个日益凸显的问题。相对于传统的网络安全，工控安全面临着一系列独特的挑战和需求。</p><h2 id="工业自动化和智能制造的崛起"><a href="#工业自动化和智能制造的崛起" class="headerlink" title="工业自动化和智能制造的崛起"></a>工业自动化和智能制造的崛起</h2><p>随着科技的持续进步，工业生产过程正逐步转向自动化和智能化。工业4.0为制造业引入了众多先进技术，如智能传感器、机器人技术、大数据分析和人工智能算法。这些技术的融合带来了更高的生产效率、质量和定制化能力。产品的研发和上市时间得到了显著缩短，同时也为资源的优化配置提供了可能。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202404022027232.png" alt="img"></p><h2 id="工控安全与网络安全的重要性"><a href="#工控安全与网络安全的重要性" class="headerlink" title="工控安全与网络安全的重要性"></a>工控安全与网络安全的重要性</h2><p>在此背景下，工控系统的安全成为了企业关注的焦点。这些系统在满足实时、稳定工作要求的同时，也暴露于各种网络威胁之下。与传统的IT系统相比，工控系统的安全更为关键，因为它们直接影响到生产线的稳定运行，甚至有时会关乎到工作人员的生命安全。在网络安全中，我们更多地关注数据的机密性、完整性和可用性，而在工控安全中，我们更加强调系统的稳定性和对外部干扰的抵御力。因此，理解这两者的差异并采取适当的安全措施是至关重要的。</p><h2 id="工控安全的特殊性"><a href="#工控安全的特殊性" class="headerlink" title="工控安全的特殊性"></a>工控安全的特殊性</h2><blockquote><p>网络通讯协议不同：大量的工控系统采用私有协议</p><p>系统稳定性要求高：网络安全造成误报等同于攻击</p><p>系统运行环境不同：工控系统运行环境相对落后</p><p>网络结构和行为相对稳定：不能频繁变动调整</p><p>安全防护要求高：无法通过补丁来解决安全问题</p></blockquote><h2 id="工控安全与网络安全的异同"><a href="#工控安全与网络安全的异同" class="headerlink" title="工控安全与网络安全的异同"></a>工控安全与网络安全的异同</h2><p>工控系统（ICS）与传统的IT系统在多个层面存在明显的差异，这些差异不仅反映在它们的应用领域和设计目的上，还体现在各自面临的安全威胁和保护要求上。理解这些差异对于确保工控系统的安全至关重要。</p><div class="table-container"><table><thead><tr><th>属性</th><th>工控安全</th><th>传统安全</th></tr></thead><tbody><tr><td>应用领域</td><td>主要用于制造业、能源、交通等实体行业</td><td>涵盖所有需要网络连接的领域</td></tr><tr><td>安全目标</td><td>确保生产过程的连续性和稳定性</td><td>保护数据的完整性、机密性和可用性</td></tr><tr><td>威胁模型</td><td>主要面临物理和网络双重威胁</td><td>主要面临网络和数据层面的威胁</td></tr><tr><td>系统寿命与更新</td><td>长寿命，更新周期长、费时费力</td><td>相对短寿命，更新频繁、快速</td></tr><tr><td>连通性特点</td><td>传统上是封闭系统，现逐渐与外界连接</td><td>通常与外界互联，易受到外部威胁</td></tr></tbody></table></div><h3 id="网络架构区别"><a href="#网络架构区别" class="headerlink" title="网络架构区别"></a>网络架构区别</h3><div class="table-container"><table><thead><tr><th></th><th>工控安全</th><th>传统安全</th></tr></thead><tbody><tr><td>网络类型</td><td>多种网络混合，包含有线、无线、卫星通信、无线电通信、移动通讯等</td><td>网络相对简单，多为有线、无线</td></tr><tr><td>通信协议</td><td>包含很多专用通讯协议及私有协议</td><td>标准TCP/IP通信协议</td></tr><tr><td>设备类型</td><td>网络设备、主机设备、防护设备、控制设备、现场设备种类繁多</td><td>设备类型相对简单，网络设备、主机设备、防护设备为主</td></tr></tbody></table></div><h3 id="数据传输区别"><a href="#数据传输区别" class="headerlink" title="数据传输区别"></a>数据传输区别</h3><div class="table-container"><table><thead><tr><th>工控安全</th><th>传统安全</th></tr></thead><tbody><tr><td>实时性要求高，不允许延迟</td><td>实时性要求不高，允许延迟</td></tr><tr><td>基本无加密认证机制</td><td>加密认证防护</td></tr><tr><td>指令、组态、采集数据为主</td><td>文件、邮件、即时消息为主</td></tr><tr><td>流向明确基本无交叉</td><td>数据交叉传输</td></tr></tbody></table></div><h3 id="物理环境区别"><a href="#物理环境区别" class="headerlink" title="物理环境区别"></a>物理环境区别</h3><div class="table-container"><table><thead><tr><th>工控安全</th><th>传统安全</th></tr></thead><tbody><tr><td>一般无机房，直接部署在生产环境</td><td>配有专用机房，统一放置设备</td></tr><tr><td>无专用散热装备</td><td>配有空调</td></tr><tr><td>环境条件恶劣，高温、高湿、粉尘大、振动、酸碱腐蚀等</td><td>环境条件优良，温湿度基本恒定，灰尘小，无振动，无腐蚀性</td></tr><tr><td>基本无监控、登记管理措施</td><td>配有防盗门、视频监控、出入登记等</td></tr></tbody></table></div><h3 id="防护硬件区别"><a href="#防护硬件区别" class="headerlink" title="防护硬件区别"></a>防护硬件区别</h3><div class="table-container"><table><thead><tr><th>工控安全</th><th>传统安全</th></tr></thead><tbody><tr><td>工业级设计，全密封</td><td>基本无三防设计</td></tr><tr><td>RISC架构，功耗低</td><td>X86架构，功耗高</td></tr><tr><td>自身散热，宽温工作</td><td>风扇散热，温度范围有限</td></tr><tr><td>时延100us以下</td><td>时延毫秒级以上</td></tr><tr><td>标配Bypass机制</td><td>Bypass机制非标配</td></tr><tr><td>深度识别工业协议</td><td>基本不支持工业协议</td></tr><tr><td>使用寿命15—20年</td><td>使用寿命5—8年</td></tr></tbody></table></div><h3 id="运行环境区别"><a href="#运行环境区别" class="headerlink" title="运行环境区别"></a>运行环境区别</h3><div class="table-container"><table><thead><tr><th>工控安全</th><th>传统安全</th></tr></thead><tbody><tr><td>网络相对隔离，不联互联网</td><td>网络与互联网相通</td></tr><tr><td>操作系统老旧，很少更新补丁</td><td>操作系统新，频繁更新补丁</td></tr><tr><td>基本不安装杀毒软件</td><td>杀毒软件是标配</td></tr><tr><td>专用软件为主，类型数量不多</td><td>办公软件为主，类型数量繁多</td></tr><tr><td>信息交互通过多通过U盘实现</td><td>信息交互多通过网络实现</td></tr><tr><td>安全漏洞较多，易受攻击</td><td>安全漏洞较少，防护措施完善</td></tr></tbody></table></div><h3 id="防护软件区别"><a href="#防护软件区别" class="headerlink" title="防护软件区别"></a>防护软件区别</h3><div class="table-container"><table><thead><tr><th>工控安全</th><th>传统安全</th></tr></thead><tbody><tr><td>白名单机制</td><td>黑名单机制</td></tr><tr><td>不需要升级库和补丁</td><td>需频繁升级库和补丁</td></tr><tr><td>操作系统加固</td><td>不加固操作系统</td></tr><tr><td>抵御已知未知病毒</td><td>防范已知病毒</td></tr><tr><td>具备自我保护能力</td><td>缺少自我保护</td></tr><tr><td>运行占用资源少</td><td>支持新版系统</td></tr><tr><td>支持老旧系统</td><td>运行比较耗资源</td></tr></tbody></table></div><p>通过对比，我们可以看到工控安全与网络安全之间存在许多显著的差异。例如，工控系统往往有更长的使用寿命，而且它们的更新很可能会影响到整个生产线的稳定运行。因此，与网络安全相比，工控安全更为注重确保系统的稳定性和连续性。</p><p>然而，随着工控系统逐渐与互联网和其他IT系统融合，它们也开始面临来自网络的威胁。这使得工控安全与网络安全之间的界限逐渐模糊，也意味着在保护工控系统时，我们需要同时考虑到网络安全的各种挑战和策略。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202404022027499.png" alt="img"></p><p>这一趋势也反映了一个更广泛的现象：在当今的数字化世界中，各种系统和设备都在不断地相互连接和交互。因此，无论是工控安全还是网络安全，都需要我们采取一种综合性、多层次的安全策略，以确保各种威胁得到有效的防范和应对。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202404022046947.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全，工控安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息安全 </tag>
            
            <tag> 工控安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动将完整桌面池虚拟机加入到指定OU脚本说明</title>
      <link href="/post/1557300456.html"/>
      <url>/post/1557300456.html</url>
      
        <content type="html"><![CDATA[<h2 id="需求目的"><a href="#需求目的" class="headerlink" title="需求目的"></a>需求目的</h2><p>当我们在配置VMWare Horizon桌面池的时候，自动桌面池，可以在创建的时候，手动指定想要生成的新桌面加入到自定义的OU当中。但是完整桌面池，并不能去手工指定OU，生成的虚拟机不会自动加入到想要指定的OU当中去，而是默认在Computer的OU中，每次都需要手动去调整，非常麻烦。那么如何实现使用Powershell脚本的方式，让虚拟机自动加域并放入到指定的OU当中呢</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>实现的办法可以参考VMware社区里的这份帖子</p><p><a href="https://communities.vmware.com/t5/Horizon-Desktops-and-Apps/Automatically-Move-Full-Clone-VM-into-specific-OU/td-p/2852864">https://communities.vmware.com/t5/Horizon-Desktops-and-Apps/Automatically-Move-Full-Clone-VM-into-specific-OU/td-p/2852864</a></p><h2 id="修改步骤"><a href="#修改步骤" class="headerlink" title="修改步骤"></a>修改步骤</h2><p>我针对这份做了一些修改：使用脚本自动加域后到指定OU，然后删除所有脚本文件，原因是Powershell脚本里，使用了明文存储密码，在加入域后删除脚本文件。</p><p>首先，我们需要创建一份批处理bat文件，让它去自动执行powershell脚本，因为VMware自定义规范不能直接运行ps文件</p><h3 id="创建批处理文件"><a href="#创建批处理文件" class="headerlink" title="创建批处理文件"></a>创建批处理文件</h3><p><strong>批处理bat文件如下</strong></p><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">::设置脚本批处理bat和Powershell路径及文件名，请将两个文件保存在同一个文件夹中，并且bat和ps1的文件使用相同命名。</span><br><span class="line"><span class="built_in">set</span> scriptFileName=%~n0</span><br><span class="line"><span class="built_in">set</span> scriptFolderPath=%~dp0</span><br><span class="line"><span class="built_in">set</span> powershellScriptFileName=<span class="variable">%scriptFileName%</span>.ps1</span><br><span class="line"></span><br><span class="line">::执行Powershell自动加域脚本</span><br><span class="line">powershell -Command &quot;<span class="built_in">Start</span>-Process powershell \&quot;-ExecutionPolicy Bypass -NoProfile -NoExit -Command `\&quot;<span class="built_in">cd</span> \`\&quot;<span class="variable">%scriptFolderPath%</span>`\&quot;; &amp; \`\&quot;.\<span class="variable">%powershellScriptFileName%</span>\`\&quot;`\&quot;\&quot; -Verb RunAs&quot;</span><br><span class="line"></span><br><span class="line">::设置等待时间，让Powershell脚本执行完毕</span><br><span class="line">timeout <span class="number">60</span></span><br><span class="line"></span><br><span class="line">::设置强制重启虚拟Windows系统，预设<span class="number">60</span>秒后重启。</span><br><span class="line">shutdown -r -f -t <span class="number">60</span></span><br><span class="line"></span><br><span class="line">::在执行完强制重启操作系统等待时，删除所有脚本文件。注意，路径C:\Windows\Setup\Join 为存放bat和ps1的文件的具体路径</span><br><span class="line">timeout <span class="number">5</span></span><br><span class="line"><span class="built_in">del</span> C:\Windows\Setup\Join\ *. * / Q</span><br></pre></td></tr></table></figure><h3 id="创建Powershell文件"><a href="#创建Powershell文件" class="headerlink" title="创建Powershell文件"></a>创建Powershell文件</h3><p><strong>Powershell脚本文件如下</strong></p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建凭据对象</span></span><br><span class="line"><span class="variable">$cred</span> = <span class="built_in">New-Object</span> System.Management.Automation.PSCredential(<span class="string">&quot;domain.com\domainadmin&quot;</span>, (<span class="built_in">ConvertTo-SecureString</span> <span class="string">&quot;P@<span class="variable">$</span><span class="variable">$w0rd</span>&quot;</span> <span class="literal">-AsPlainText</span> <span class="literal">-Force</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将计算机添加到域</span></span><br><span class="line"><span class="built_in">Add-Computer</span> <span class="literal">-DomainName</span> <span class="string">&quot;domain.com&quot;</span> <span class="literal">-OUPath</span> <span class="string">&quot;OU=ZH-VDI,OU=VDI-WIN10,OU=VMware-View,DC=domain,DC=com&quot;</span> <span class="literal">-Credential</span> <span class="variable">$cred</span> <span class="literal">-Force</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#自己把PS1脚本里的ou，domain.com，domain\domainadmin，DC，P@$$w0rd改成自己的域对应的，批处理bat和PS1文件名要相同，双击批处理bat就可以了</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="新建虚拟机自定义规范文件"><a href="#新建虚拟机自定义规范文件" class="headerlink" title="新建虚拟机自定义规范文件"></a>新建虚拟机自定义规范文件</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403192306812.png" alt="image-20240319230602772"></p><p>新建或者编辑现有的自定义规范</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403192307401.png" alt="image-20240319230700368"></p><h3 id="修改自动登录方式"><a href="#修改自动登录方式" class="headerlink" title="修改自动登录方式"></a>修改自动登录方式</h3><p>让系统以管理员(Administrator账号)身份自动登陆，输入管理员的密码</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403192307290.png" alt="image-20240319230751257"></p><h3 id="设置自动执行一次的命令路径"><a href="#设置自动执行一次的命令路径" class="headerlink" title="设置自动执行一次的命令路径"></a>设置自动执行一次的命令路径</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403192308437.png" alt="image-20240319230818406"></p><h3 id="设置为工作组"><a href="#设置为工作组" class="headerlink" title="设置为工作组"></a>设置为工作组</h3><p>让系统登陆后由Powershell脚本执行加域的动作。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403201553656.png" alt="image-20240320155307612"></p><h3 id="桌面池生成的新虚拟机系统，自动登陆并执行脚本加入域"><a href="#桌面池生成的新虚拟机系统，自动登陆并执行脚本加入域" class="headerlink" title="桌面池生成的新虚拟机系统，自动登陆并执行脚本加入域"></a>桌面池生成的新虚拟机系统，自动登陆并执行脚本加入域</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403201552684.png" alt="image-20240320155251636"></p><h3 id="自动加入指定OU成功"><a href="#自动加入指定OU成功" class="headerlink" title="自动加入指定OU成功"></a>自动加入指定OU成功</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403192309444.jpg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Horizon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> Horizon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESXI 添加利旧的硬盘时提示无法创建 VMFS 数据存储及无法更新磁盘分区的解决办法</title>
      <link href="/post/fa31a270.html"/>
      <url>/post/fa31a270.html</url>
      
        <content type="html"><![CDATA[<h2 id="故障现象"><a href="#故障现象" class="headerlink" title="故障现象"></a>故障现象</h2><p>在ESXi的Web界面，新建存储时，可以看到这个虚拟卷的磁盘，但是在创建点完成时，却提示无法创建VMFS 数据存储data -无法更新/vmfsldevicesidisks/naa.6b8ca3a0e87576002d40a0305156b98d的磁盘分区。<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/%E6%95%85%E9%9A%9C%E7%8E%B0%E8%B1%A1.png" alt="输入图片说明"><br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/%E6%95%85%E9%9A%9C%E7%8E%B0%E8%B1%A11.png" alt="输入图片说明"></p><h2 id="故障原因"><a href="#故障原因" class="headerlink" title="故障原因"></a>故障原因</h2><p>出现这个问题可能的原因是，这个磁盘阵列上的磁盘，之前被使用过或者安装过其他操作系统。使用利旧硬盘，添加数据存储后提示：无法创建VMFS数据存储，不管是SSD还是HDD。</p><p>这是由于磁盘原有分区导致不能格式化，</p><h2 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h2><h3 id="1-打开ESXI的SSH"><a href="#1-打开ESXI的SSH" class="headerlink" title="1.打开ESXI的SSH"></a>1.打开ESXI的SSH</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/打开ESXI的SSH.png" alt="输入图片说明"></p><h3 id="2-找到不能添加的硬盘路径"><a href="#2-找到不能添加的硬盘路径" class="headerlink" title="2.找到不能添加的硬盘路径"></a>2.找到不能添加的硬盘路径</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/硬盘路径.png" alt="输入图片说明"></p><p>使用SSH工具登陆到ESXi主机操作</p><h3 id="3-列出磁盘命令："><a href="#3-列出磁盘命令：" class="headerlink" title="3.列出磁盘命令："></a>3.列出磁盘命令：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -lha /vmfs/devices/disks/</span><br></pre></td></tr></table></figure><p>这时发现，居然没有这个虚拟磁盘卷。<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/未发现虚拟磁盘卷.png" alt="输入图片说明"></p><h3 id="4-检查磁盘卷是否故障"><a href="#4-检查磁盘卷是否故障" class="headerlink" title="4.检查磁盘卷是否故障"></a>4.检查磁盘卷是否故障</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">partedUtil getptbl /vmfs/devices/disks/ naa.****</span><br></pre></td></tr></table></figure><p>比如本案例中的磁盘卷名为naa.6b8ca3a0e87576002d40a0305156b98d，使用改卷名代替<em>**</em></p><p>提示错误：主 GPT 表指出备份 GPT 位于磁盘末尾之外。如果磁盘缩小或分区表损坏，则可能会发生这种情况。通过在最后写入备份表来修复<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/检查磁盘卷是否故障.png" alt="输入图片说明"></p><p>所以，需要重建分区表</p><h3 id="5-重建分区表"><a href="#5-重建分区表" class="headerlink" title="5.重建分区表"></a>5.重建分区表</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">partedUtil setptbl /vmfs/devices/disks/naa.6b8ca3a0e87576002d40a0305156b98d msdos</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/查询磁盘卷.png" alt="输入图片说明"></p><h3 id="6-再次用Web新建存储时，成功创建完成。"><a href="#6-再次用Web新建存储时，成功创建完成。" class="headerlink" title="6.再次用Web新建存储时，成功创建完成。"></a>6.再次用Web新建存储时，成功创建完成。</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/再次用Web新建存储.png" alt="输入图片说明"></p><p>也可以将磁盘卷naa.6b8ca3a0e87576002d40a0305156b98d，通过增加容量的方式添加到其他volume，比如我将它增加到253-R720-SAS这storage中。如下图，在Volume 名为253-R720-SAS中，已经挂载了两个不同的Device。<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/增加2个不同磁盘卷.png" alt="输入图片说明"></p><h3 id="7-登陆ESXi主机，查看存储设备，有两个不同的磁盘卷，再查看Volume总容量为两个磁盘卷的和。"><a href="#7-登陆ESXi主机，查看存储设备，有两个不同的磁盘卷，再查看Volume总容量为两个磁盘卷的和。" class="headerlink" title="7.登陆ESXi主机，查看存储设备，有两个不同的磁盘卷，再查看Volume总容量为两个磁盘卷的和。"></a>7.登陆ESXi主机，查看存储设备，有两个不同的磁盘卷，再查看Volume总容量为两个磁盘卷的和。</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/查看存储设备.png" alt="输入图片说明"><br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/查看存储设备1.png" alt="输入图片说明"></p><p> <strong>但是不太建议使用这种方式扩容Volume，后续出问题维护比较麻烦。</strong> </p><h3 id="8-从ESX主机删除磁盘卷"><a href="#8-从ESX主机删除磁盘卷" class="headerlink" title="8.从ESX主机删除磁盘卷"></a>8.从ESX主机删除磁盘卷</h3><p>如果想将其中一个磁盘卷从Volume中删除，会发现不能删。提示Volume处于Busy状态，尝试直接删除磁盘卷，也提示Read-only<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/删除卷错误.png" alt="输入图片说明"></p><p>要向删除这个磁盘卷，需要将整个Volume中的文件全部迁移走，不然会提示上图中的错误，不能删除。</p><p>迁移完成后，先取消挂载Volume。可以使用esxcli storage vmfs extent list名获取volume的 UUID，或者登陆ESXi主机查看对应volume的UUID<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/查看对应volume的UUID.png" alt="输入图片说明"></p><p>删除磁盘卷</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">partedUtil delete /vmfs/devices/disks/naa.6b8ca3a0e87576002d40a0305156b98d 1</span><br></pre></td></tr></table></figure><p>查询磁盘卷</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">partedUtil getptbl /vmfs/devices/disks/naa.6b8ca3a0e87576002d40a0305156b98d</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/查询磁盘卷1.png" alt="输入图片说明"></p><p>重建磁盘卷的分区表<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/查询磁盘卷.png" alt="输入图片说明"></p><p>再次使用</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">esxcli storage vmfs extent list</span><br></pre></td></tr></table></figure><p>可以看到磁盘卷naa.6b8ca3a0e87576002d40a0305156b98d已经被删除了，只剩下另外一个磁盘卷。重复以上步骤，删除另外一个磁盘卷。<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/删除另外一个磁盘卷.png" alt="输入图片说明"></p><p>登陆ESXi或者vCenter，就可以最该主机上的两个磁盘卷重新分区挂载了<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXI%20Reuse%20HDD/重新挂载分区.png" alt="输入图片说明"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vSphere </tag>
            
            <tag> ESXi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware workstation设置 虚拟机开机启动_vmware自动开启虚拟机</title>
      <link href="/post/2437986504.html"/>
      <url>/post/2437986504.html</url>
      
        <content type="html"><![CDATA[<p><strong>废话不多说，网上教程五花八门，试了几个没几个能用的，所以索性自己写一篇。</strong></p><p><strong>一、VMware workstation 虚拟机开机自启动的原理<br>VMware workstation 虚拟机开机自启动，在 VMware workstation 图形界面是找不到设置方法的，但是图形界面找不到设置方法，不代表它就没有设置方法。<br>要设置开机自启动，首先，我们得了解下 VMware workstation 所提供的命令行工具 vmrun</strong></p><p><strong>1、我们进入到 VMware workstation 的安装目录，找一下 vmrun.exe 文件，如下图， vmrun这个工具，为我们提供了虚拟机的自启动方法。</strong></p><p><strong><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403182107694.png" alt="img"></strong></p><p><strong>2、将 VMware workstation 的安装目录添加到系统的环境变量，如下图，按照途中的顺序，依次操作即可<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403182107288.png" alt="img"></strong></p><p><strong>注意：在第 2 步时，需要找到自己的 VMware workstation 的安装目录，然后添加到系统变量里面。</strong></p><p><strong>3、在 DOS 界面中查看 vmrun 命令的语法格式及参数</strong></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403182107599.png" alt="img"></p><p><strong>4、这里只介绍这么多命令，其他的命令很少用到，就不多做解释。</strong></p><p><strong>言归正传，我们要设置虚拟机开机自启动，就要使用上面 start 命令。那么，此命令如何使用呢，格式是这样的：</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">vmrun <span class="keyword">start</span>  &quot;D:\Vmware\xxxx.vmx&quot;</span><br></pre></td></tr></table></figure><p><strong>“D:\\Vmware\\xxxx.vmx” 该目录为虚拟机的工作目录</strong></p><p><strong>最后，我们将该命令修改为自己的虚拟机工作目录后写到批处理文件中（如下图），添加开机启动脚本或者计划任务。</strong></p><p><strong><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403182108575.png" alt="img"></strong></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403182108502.png" alt="img"></p><p><strong>注意事项：启动路径一定不能有中文，不支持静默启动。</strong></p><p><strong>5.如果你想把一个软件设置为开机启动或关闭一个开机自启动项，则可以按照以下步骤：</strong></p><p><strong>Win + R 快捷键打开运行窗口；输入</strong></p><figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line"><span class="symbol">shell:</span>Common Startup</span><br></pre></td></tr></table></figure><p><strong>点击“确定”即可；</strong></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403182108362.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403182108693.png" alt="img"></p><p><strong>自启动文件保存在以下路径：C:\\用户\\[你的用户名]\\AppData\\Roaming\\Microsoft\\Windows\\「开始」菜单\\程序\\启动</strong></p><p><strong>设置完之后，我们重启主机，再看看虚拟机有没有启动。</strong></p><p><strong>总结</strong></p><p><strong>在日常工作中，我们解决问题的办法可能不止一种，但往往由于我们所学知识的局限性性，导致我们的思路会很单一，因此，我们就要通过不断的学习，来拓宽我们视界，才能更好的提高我们的深获质量。</strong></p><h2 id="VMware17又把开机自启加回来了-建议直接用17版本，-自带开机自启功能"><a href="#VMware17又把开机自启加回来了-建议直接用17版本，-自带开机自启功能" class="headerlink" title="VMware17又把开机自启加回来了**建议直接用17版本，**自带开机自启功能"></a><strong>VMware17又把开机自启加回来了**</strong>建议直接用17版本，<strong>**自带开机自启功能</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403182109847.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403182109766.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> vSphere </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为交换机SSH配置一看就懂_华为交换机配置ssh</title>
      <link href="/post/657905a1.html"/>
      <url>/post/657905a1.html</url>
      
        <content type="html"><![CDATA[<p>在日常交换机运维管理中，已经在逐步放弃使用telnet方式进行登录管理设备，升级为更安全的ssh方式进行管理，下面写一下华为交换机开启ssh登录配置方法</p><h2 id="交换机配置IP（用于SSH）"><a href="#交换机配置IP（用于SSH）" class="headerlink" title="交换机配置IP（用于SSH）"></a>交换机配置IP（用于SSH）</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">vlan 600          //创建管理vlan600        </span><br><span class="line">interface Vlanif 600        //创建vlan600接口        </span><br><span class="line">ip address 10.0.0.10 255.255.255.0   //配置vlan接口的ip地址为10.0.0.10/24  </span><br></pre></td></tr></table></figure><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">rsa local-key-pair create        //生成rsa密钥         </span><br><span class="line">The key name will be: Huawei<span class="emphasis">_Host                  </span></span><br><span class="line"><span class="emphasis">The range of public key size is (512 ~ 2048).      //回车，默认size为512       </span></span><br><span class="line"><span class="emphasis">NOTES: If the key modulus is greater than 512,                 </span></span><br><span class="line"><span class="emphasis">       it will take a few minutes.                   </span></span><br><span class="line"><span class="emphasis">Input the bits in the modulus[default = 512]:                 </span></span><br><span class="line"><span class="emphasis">Generating keys...                      </span></span><br><span class="line"><span class="emphasis">....++++++++++++                     </span></span><br><span class="line"><span class="emphasis">.....++++++++++++                     </span></span><br><span class="line"><span class="emphasis">..++++++++                       </span></span><br><span class="line"><span class="emphasis">...................................++++++++       </span></span><br></pre></td></tr></table></figure><h2 id="启用ssh服务功能"><a href="#启用ssh服务功能" class="headerlink" title="启用ssh服务功能"></a>启用ssh服务功能</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">ssh client first-time enable</span><br><span class="line">stelnet  server enable</span><br></pre></td></tr></table></figure><p><strong>ssh client first-time enable</strong> 这条不配置默认不支持任何服务</p><h2 id="创建SSH-user"><a href="#创建SSH-user" class="headerlink" title="创建SSH user"></a>创建SSH user</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">ssh user admin service-type stelnet </span><br><span class="line">ssh user admin authentication-type password</span><br></pre></td></tr></table></figure><h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">aaa</span><br><span class="line">local-user admin privilege level 15 password cipher admin</span><br><span class="line">local-user admin service-type ssh</span><br></pre></td></tr></table></figure><h2 id="配置vty界面支持的登录协议"><a href="#配置vty界面支持的登录协议" class="headerlink" title="配置vty界面支持的登录协议"></a>配置vty界面支持的登录协议</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">user-interface vty 0 4</span><br><span class="line">authentication-mode aaa</span><br><span class="line">protocol inbound ssh</span><br><span class="line">user pri level 15</span><br></pre></td></tr></table></figure><p>记得save保存配置</p><p><strong>坑华为S5731地方默认情况下，交换机中存在：  </strong><br>undo ssh server-source all-interface（交换机的所有接口拒绝SSH登陆）</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">server-source all-interface（交换机的所有接口SSH登陆）</span><br><span class="line"></span><br><span class="line">ssh server-source -i interface-type interface-number（-i ：表示只允许IPV4接入，注意，只允许特定接口接入SSH时）</span><br></pre></td></tr></table></figure><h3 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h3><p>ssh client first-time enable（不配置默认不支持任何服务）<br>public key local create rsa（老版本）<br>ssh server-source all-interface （比较高版本，不配置默认接口不支持ssh）**</p><h2 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h2><p>使用putty等ssh工具 10.0.0.10</p>]]></content>
      
      
      <categories>
          
          <category> 网络相关 </category>
          
          <category> 华为 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络基础知识 </tag>
            
            <tag> 华为 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置锐捷交换机的SSH登录</title>
      <link href="/post/13022a98.html"/>
      <url>/post/13022a98.html</url>
      
        <content type="html"><![CDATA[<h2 id="组网需求"><a href="#组网需求" class="headerlink" title="组网需求"></a>组网需求</h2><p>通过SSH功能远程管理设备。</p><h2 id="组网拓扑"><a href="#组网拓扑" class="headerlink" title="组网拓扑"></a>组网拓扑</h2><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image001.png" alt=""></p><h2 id="配置要点"><a href="#配置要点" class="headerlink" title="配置要点"></a>配置要点</h2><p>1、需要开启SSH功能</p><p>2、需要手工生成Key</p><p>3、如果PC与<a href="https://www.ruijie.com.cn/cp/jh/">交换机</a>不在同一个网段，需要配置交换机的默认网关</p><h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><p>1、开启交换机的SSH服务功能<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">configure terminal</span><br><span class="line"></span><br><span class="line">       enable service ssh-server</span><br></pre></td></tr></table></figure><br>2、生成加密密钥：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">       crypto key generate dsa             \------&gt;加密方式有两种：DSA和RSA,可以随意选择</span><br><span class="line"></span><br><span class="line">       Choose the size of the key modulus in the range of 360 to 2048 for your</span><br><span class="line"></span><br><span class="line">       Signature Keys. Choosing a key modulus greater than 512 may take</span><br><span class="line"></span><br><span class="line">       a few minutes.</span><br><span class="line"></span><br><span class="line">       How many bits in the modulus \[512\]:                 \------&gt;直接敲回车</span><br><span class="line"></span><br><span class="line">       % Generating 512 bit DSA keys ...\[ok\]</span><br></pre></td></tr></table></figure><br>3、配置交换机的管理IP地址<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">interface vlan 1</span><br><span class="line"></span><br><span class="line">Ruijie(config-if)# ip address 192.168.1.1 255.255.255.0</span><br></pre></td></tr></table></figure></p><h3 id="需求一：SSH时仅使用密码登入交换机"><a href="#需求一：SSH时仅使用密码登入交换机" class="headerlink" title="需求一：SSH时仅使用密码登入交换机"></a>需求一：SSH时仅使用密码登入交换机</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">line vty 0 4                             \------&gt;  进入SSH密码配置模式，0 4表示允许共5个用户同时SSH登入到交换机</span><br><span class="line"></span><br><span class="line">Ruijie(config-line)#login                \------&gt;启用需输入密码才能SSH成功</span><br><span class="line"></span><br><span class="line">Ruijie(config-line)#password ruijie      \------&gt; 将SSH密码设置为ruijie</span><br><span class="line"></span><br><span class="line">Ruijie(config-line)#exit                 \------&gt;  回到全局配置模式</span><br><span class="line"></span><br><span class="line">enable password  ruijie                   \------&gt;配置进入特权模式的密码为ruijie</span><br><span class="line"></span><br><span class="line">end                                       \------&gt;退出到特权模式</span><br><span class="line"></span><br><span class="line">      write                               \------&gt;确认配置正确，保存配置</span><br></pre></td></tr></table></figure><pre><code>   注意事项：如果要限制用户使用telnet登录，只能使用SSH登录，则需要调整配置，默认情况下telnet和SSH均可登录。</code></pre><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">line vty 0 4       </span><br><span class="line"></span><br><span class="line">ransport input ssh</span><br></pre></td></tr></table></figure><p>确认是否配置正确</p><p>1)打开SecureCRT软件（说明：SSH登入交换机需要用支持SSH客户端的软件，windows的CMD模式不支持SSH，这里使用SecureCRT软件作为SSH客户端），选择如下红色圈起来图标：</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image002.png" alt=""></p><p>2)协议选择SSH2，主机名输入交换机IP地址</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image003.png" alt=""></p><p>3)点击连接，在如下选项框选择接受并保存</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image004.png" alt=""></p><p>4)出现输入用户名界面，随便输入一个用户名，我这边输入了xxx作为用户名</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image005.png" alt=""></p><p>5)出现输入用户名和密码界面，输入远程登入密码</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image006.png" alt=""></p><p>6)确认后进入用户模式，即Ruijie&gt;模式</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image007.png" alt=""></p><p>7)在Ruijie&gt;模式下输入enable后，提示输入特权密码，输入正确的密码后回车，进入特权模式</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image008.png" alt=""></p><h3 id="需求二：SSH时使用用户名及密码登入交换机"><a href="#需求二：SSH时使用用户名及密码登入交换机" class="headerlink" title="需求二：SSH时使用用户名及密码登入交换机"></a>需求二：SSH时使用用户名及密码登入交换机</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">line vty 0 4                            \------&gt;进入SSH密码配置模式，0 4表示允许共5个用户同时SSH登入到交换机</span><br><span class="line"></span><br><span class="line">Ruijie(config-line)#login local          \------&gt;启用SSH时使用本地用户和密码功能</span><br><span class="line"></span><br><span class="line">Ruijie(config-line)#exit                 \------&gt;回到全局配置模式</span><br><span class="line"></span><br><span class="line">username admin password ruijie           \------&gt;配置远程登入的用户名为admin，密码为ruijie</span><br><span class="line"></span><br><span class="line">enable password  ruijie                  \------&gt;配置进入特权模式的密码为ruijie</span><br><span class="line"></span><br><span class="line">end                                      \------&gt;退出到特权模式</span><br><span class="line"></span><br><span class="line">write                                    \------&gt;确认配置正确，保存配置</span><br></pre></td></tr></table></figure><p>注意事项：如果要限制用户使用telnet登录，只能使用SSH登录，则需要调整配置，默认情况下telnet和SSH均可登录。<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">line vty 0 4       </span><br><span class="line"></span><br><span class="line">ransport input ssh</span><br></pre></td></tr></table></figure><br>       确认SSH配置是否正确</p><p>1)打开SecureCRT软件，选择如下红色圈起来图标：</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image002.png" alt=""></p><p>2)协议选择SSH2，主机名输入交换机IP地址</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image003.png" alt=""></p><p>3)点击连接，在如下选项框选择接受并保存</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image004.png" alt=""></p><p>4)出现输入用户名界面，输入用户名admin</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image009.png" alt=""></p><p>5)出现输入用户名和密码界面，输入远程登入密码</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image010.png" alt=""></p><p>6)确认后进入用户模式，即Ruijie&gt;模式</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image007.png" alt=""></p><p>7)在Ruijie&gt;模式下输入enable后，提示输入特权密码，输入正确的密码后回车，进入特权模式</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image008.png" alt=""></p><p>五、功能验证</p><pre><code>  用show service命令确认SSH服务功能是否开启</code></pre><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image011.png" alt=""></p><pre><code>  show users查看当前登入的用户</code></pre><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Ruijie%20SSH/image012.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 网络相关 </category>
          
          <category> 锐捷 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络基础知识 </tag>
            
            <tag> 锐捷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建VMware Horizon8私有云桌面虚拟化(八)开始使用云桌面</title>
      <link href="/post/2795962120.html"/>
      <url>/post/2795962120.html</url>
      
        <content type="html"><![CDATA[<p><strong>连接云桌面手机和电脑都有两种方式</strong></p><ul><li>客户端连接</li><li>HTML 网页连接</li><li>电脑客户端：<a href="https://download3.vmware.com/software/view/viewclients/CART22FH2/VMware-Horizon-Client-2111-8.4.0-18968194.exe">https://download3.vmware.com/software/view/viewclients/CART22FH2/VMware-Horizon-Client-2111-8.4.0-18968194.exe</a></li><li>安卓手机客户端：<a href="https://play.google.com/store/apps/details?id=com.vmware.view.client.android&amp;hl=zh&amp;gl=US">https://play.google.com/store/apps/details?id=com.vmware.view.client.android&amp;hl=zh&amp;gl=US</a></li><li>苹果手机客户端：<a href="https://apps.apple.com/cn/app/vmware-horizon-client/id417993697">https://apps.apple.com/cn/app/vmware-horizon-client/id417993697</a></li><li>客户端官网下载地址：<a href="https://customerconnect.vmware.com/en/downloads/info/slug/desktop\_end\_user\_computing/vmware\_horizon\_clients/horizon\_8">https://customerconnect.vmware.com/en/downloads/info/slug/desktop\_end\_user\_computing/vmware\_horizon\_clients/horizon\_8</a></li></ul><p>[</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242347061.png" alt=""></p><p>1、 HTML 网页连接 访问 Horizon web （<a href="https://40.1.0.204）">https://40.1.0.204）</a></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242348104.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242349717.png" alt=""></p><p>点击连接云桌面访问失败，跳转为域名连接了</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242348999.png" alt=""></p><p>进 Horizon 控制台，服务器设置把这两项取消，然后注销 cs 账户重新登入</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242348393.png" alt=""></p><p>再次连接成功</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242348948.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242348767.png" alt=""></p><p>查看连接状态</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242349822.png" alt=""></p><p>2、安装 Horizon Client 客户端软件链接（输入服务器 IP 连接即可）</p><p>电脑客户端版本</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242348966.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242349007.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242349300.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242350541.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242350181.png" alt=""></p><p>安卓客户端版本</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242350664.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Horizon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> Horizon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建VMware Horizon8私有云桌面虚拟化桌面池配置应用域策略</title>
      <link href="/post/2271410173.html"/>
      <url>/post/2271410173.html</url>
      
        <content type="html"><![CDATA[<p>官方解释：<a href="https://docs.vmware.com/cn/VMware-Horizon/2103/horizon-remote-desktop-features/GUID-633FB6A2-206E-40A2-A72B-0FD28823EBCA.html">https://docs.vmware.com/cn/VMware-Horizon/2103/horizon-remote-desktop-features/GUID-633FB6A2-206E-40A2-A72B-0FD28823EBCA.html</a></p><p>使用软件包：VMware-Horizon-Extras-Bundle-2006-8.0.0-16531419.zip</p><p>要将 Horizon 组件组策略设置应用到您的桌面和应用程序，可将其 ADMX 模板文件添加到 GPO。</p><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><ul><li>为 Horizon 组件组策略设置创建 GPO，并将其链接到包含您的 Horizon 虚拟机的组织单位。</li><li>确认您能够以管理员域用户的身份登录到托管 Active Directory 服务器的计算机。</li><li>确认 MMC 和组策略管理插件在您的 Active Directory 服务器上可用。</li></ul><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol><li>从 VMware 下载站点中下载 VMware Horizon GPO 捆绑包 .zip 文件，网址为 <a href="https://my.vmware.com/web/vmware/downloads">https://my.vmware.com/web/vmware/downloads</a>。在 “桌面和最终用户计算” 下，选择 VMware Horizon 下载，其中包含 GPO 捆绑包。该文件名为 VMware-Horizon-Extras-Bundle-YYMM-x.x.x–yyyyyyyy.zip，其中 YYMM 是市场营销版本，x.x.x 是内部的版本，yyyyyyyy 是内部版本号。为 VMware Horizon 提供组策略设置的所有 ADMX 文件均在此文件中提供。</li><li>解压缩 VMware-Horizon-Extras-Bundle-YYMM-x.x.x–yyyyyyyy.zip 文件，并将 ADMX 文件复制到 Active Directory 服务器。<ol><li>将 .admx 文件和 en-US 文件夹复制到 Active Directory 服务器上的 % systemroot%\\PolicyDefinitions 文件夹。</li><li>将语言资源文件 (.adml) 复制到 Active Directory 服务器上 % systemroot%\\PolicyDefinitions\ 中的相应子文件夹。</li></ol></li><li>在 Active Directory 服务器上，打开组策略管理编辑器并在该编辑器中输入模板文件在安装后所在的路径。</li></ol><h2 id="下一步做什么"><a href="#下一步做什么" class="headerlink" title="下一步做什么"></a>下一步做什么</h2><p>为您的 Horizon 计算机配置组策略设置并启用环回处理。</p><p>VMware Horizon8私有云桌面池配置应用域策略</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Horizon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> Horizon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建VMware Horizon8私有云桌面虚拟化(七)Horizon 创建桌面池连接SqlServer数据库</title>
      <link href="/post/1807458936.html"/>
      <url>/post/1807458936.html</url>
      
        <content type="html"><![CDATA[<p>一、创建桌面池</p><p>1、连接Horizon控制台</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242338681.png" alt=""></p><p>2、添加桌面池</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242338820.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242338714.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242338858.png" alt=""></p><p><strong>又是一个细节</strong>：</p><p>即时克隆属于实时复用硬盘和内存的，置备速度快。<br>链接克隆需要把父虚拟机克隆并锁定，然后再进行链接磁盘生成虚拟机，置备速度比较慢。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242339350.png" alt=""></p><p>用户每次登录都从桌面池随机选计算机</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242339629.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242339755.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242339422.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242339874.png" alt=""></p><p>选择刚创建的模板机和快照，最后的数据存储选择本地存储。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242339141.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242340054.png" alt=""></p><p><img src="%E6%90%AD%E5%BB%BAVMware%20Horizon8%E7%A7%81%E6%9C%89%E4%BA%91%E6%A1%8C%E9%9D%A2%E8%99%9A%E6%8B%9F%E5%8C%96(%E4%B8%83" alt="">Horizon%20%E5%88%9B%E5%BB%BA%E6%A1%8C%E9%9D%A2%E6%B1%A0%E8%BF%9E%E6%8E%A5SqlServer%E6%95%B0%E6%8D%AE%E5%BA%93%20%E2%80%93%20DevOps%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E6%A0%88/image-47.png)</p><p>AD 容器选择用于存储计算机的 OU</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242340518.png" alt=""></p><p>授权用户</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242340268.png" alt=""></p><p>这里选择 Domain Users 组，即所有域用户</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242340168.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242341293.png" alt=""></p><p>3、点击创建的桌面池，在下面可以看到当前置备计算机的进度。这个过程第一次比较久，后面置备速度会很快。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242341055.png" alt=""></p><p>4、置备完成后， 置备的计算机可以在左侧的计算机选项卡中看到，状态是可用的，并且根据我们桌面池的设置配置了最少5台。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242341348.png" alt=""></p><p>二、链接SqlServer数据库用于存储事件，包含计算机状态事件各种。(不链接也可以，不影响使用)</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242341702.png" alt=""></p><p>前面安装的 mssql，在这里可以直接链接数据库用于存储事件，包含计算机状态事件各种。</p><p>1、输入数据库信息</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242341163.png" alt=""></p><p>2、已链接数据库</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242342502.png" alt=""></p><p>3、查看数据库事件</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242342514.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Horizon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> Horizon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建VMware Horizon8私有云桌面虚拟化(六)vCenter Server 创建模板虚拟机</title>
      <link href="/post/4203229419.html"/>
      <url>/post/4203229419.html</url>
      
        <content type="html"><![CDATA[<ul><li>使用软件包：VMware-Horizon-Agent-x86_64-8.0.0-16530789.exe</li><li>使用模板机系统：SW_DVD9_WIN_ENT_LTSC_2021_64BIT_ChnSimp_MLF_X22-84402.ISO</li></ul><p><strong>一、登录 vSphere Client，在 Esxi 上创建模板虚拟机</strong></p><p>[</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242329397.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242330545.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242330690.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242330180.png" alt=""></p><p>1、这里要主要网卡适配器一定要选择 VMXNET 3，否则会出现后面的桌面池不可用等现象，适配器驱动装完 VMware Tools 后会装上。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242330660.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242330949.png" alt=""></p><p><strong>二、安装模板机系统与模板机安装 Horizon Agent</strong></p><p>1、使用 VMware Workstation 客户端连接 vCenter Server</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242330422.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242331471.png" alt=""></p><p>2、安装一台 win10 模板机系统，并安装好 VMware Tools（随便选个系统装就行）</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242331360.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242331030.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242331630.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242331462.png" alt=""></p><p>3、安装完 VMware Tools 就有网卡驱动了，然后重启电脑</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242331018.png" alt=""></p><p>4、模板机安装 Horizon Agent使用软件包：VMware-Horizon-Agent-x86_64-8.0.0-16530789.exe</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242332461.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242332024.png" alt=""></p><p>5、功能按需选择</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242332326.png" alt=""></p><p>USB 接入，开启后客户端可以接入 U 盘这类硬件</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242332160.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242332010.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242332875.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242332397.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242333579.png" alt=""></p><p>6、装完成后重启，在关机的状态下打快照，作为模板母机使用</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242333434.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Horizon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> Horizon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Horizon Connection Server 外部登入提示登录失败</title>
      <link href="/post/3677894519.html"/>
      <url>/post/3677894519.html</url>
      
        <content type="html"><![CDATA[<p><strong>原因</strong>：</p><p>自 Horizon 7.6 以来，Horizon 7 中包含的一项安全功能会出现此行为 Horizon 7 中的 View Administration 页面：</p><p>1、检查 Web 请求的源 URL</p><p>2、如果 URL 与预期地址不匹配，则拒绝请求：</p><p>功能 / 预期 URL 的示例如下：</p><ul><li><a href="https://localhost/admin">https://localhost/admin</a></li><li><a href="https://URL\_used\_in\_Secure\_Tunnel\_URL\_Field/admin">https://URL\_used\_in\_Secure\_Tunnel\_URL\_Field/admin</a></li><li><a href="https://ConnectionServerHostname/admin">https://ConnectionServerHostname/admin</a></li></ul><p>官方解释：<a href="https://kb.vmware.com/s/article/2144768">https://kb.vmware.com/s/article/2144768</a>（有问题上此论坛搜）</p><p><strong>解决办法：</strong></p><p>请执行以下选项之一：</p><p>方法一：使用域名访问</p><p>1、在服务器本地使用本地域名 <a href="https://localhost/admin/">https://localhost/admin/</a> 访问</p><p>2、使用连接服务器配置上安全隧道 URL 字段中的 URL</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403251135123.png" alt=""></p><p><strong>方法</strong>二：<strong>使用这些步骤关闭来源检查（从安全角度来看不推荐）</strong>   </p><p>1、 创建或编辑 locked.properties 文件。它位于 c:\\program files\\VMware\\VMware View\\Server\\sslgateway\\conf 中的每个连接服务器上</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403251135650.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403251135529.png" alt=""></p><p>2、这个文件可以用标准的文本编辑器编辑，比如记事本，添加 checkOrigin=false   </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403251135394.png" alt=""></p><p>3、 请验证文件的扩展名以确保它保存为 .properties。如果保存为 .txt 扩展名，则不会读取已编辑的值</p><p>4、 重启服务器，确保设置生效</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403251136838.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Horizon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> Horizon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建VMware Horizon8私有云桌面虚拟化(二)安装SQL数据库与View Composer(可跳过安装Composer步骤)</title>
      <link href="/post/1817709106.html"/>
      <url>/post/1817709106.html</url>
      
        <content type="html"><![CDATA[<p><strong>安装 SqlServer 数据库用来存储事件日志（装不装看自己需求，此步骤可跳过）</strong></p><p>测试环境如下：</p><p>IP 地址：40.1.0.205<br>虚拟机名：Horizon-SqlServer<br>计算机名：Runm-SqlServer<br>系统环境：Windows Server 2019 Standard</p><p><strong>一、服务器环境准备</strong><br>1. 创建虚拟机<br>2. 安装 VMware Tools<br>3. 修改 IP、计算机名等信息，加域域控环境。<br>4. 关闭防火墙</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242240687.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242241590.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242241942.png" alt=""></p><p><strong>二、安装 MSSQL 数据库，登入域管理员账户安装（版本：SQL Server 2019 Enterprise）</strong></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242241307.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242241447.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242242481.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242242570.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242242253.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242247641.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242242578.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242242963.png" alt=""></p><p><strong>三、安装 SSMS 数据库管理工具</strong></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242243620.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242243146.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242243554.png" alt=""></p><p><strong>四、打开 ssms, 连接数据库，创建 “composer” 数据库</strong></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242243866.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242248279.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242243733.png" alt=""></p><p><strong>五、安装 View Composer</strong>（链接克隆）</p><p>软件包为：VMware-viewcomposer-7.9.0-13810618（ 后面 Horizon 8 选择<strong>即时克隆</strong>不需要安装这个跳过即可）</p><h2 id="所以还装个-der，后面不用看了，看下一个步骤吧"><a href="#所以还装个-der，后面不用看了，看下一个步骤吧" class="headerlink" title="所以还装个 der，后面不用看了，看下一个步骤吧"></a><strong>所以还装个 der，后面不用看了，看下一个步骤</strong>吧</h2><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242244971.png" alt=""></p><p>VMware View Composer 安装失败并显示错误 1920</p><p>官方解释：<a href="https://kb.vmware.com/s/article/1009293">https://kb.vmware.com/s/article/1009293</a></p><h2 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h2><ul><li>在 vCenter Server 中安装 IIS 时，会遇到如下问题：</li></ul><ol><li>安装 VMware View Composer 无法完成。</li><li>出现如下错误：</li></ol><p>Error 1920. Service VMware View Composer (svid) fails to start. Verify that you have sufficient privileges to start system services.</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><ul><li>在如下情况下可能会出现此问题：当 HTTP SSL 服务无法启动（而 VMware View Composer 服务依赖于该服务），或者当登录帐户是本地系统之外的帐户。</li></ul><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ul><li>要解决此问题，请执行以下操作：</li></ul><ol><li>确认您拥有足够的特权，可以启动系统服务。VMware View Composer 服务的登录帐户应为本地系统帐户。 有关详细信息，请咨询您的管理员，或参阅您的供应商文档。</li><li>检查 HTTP SSL 服务的依赖关系。 如果在服务器上安装了 IIS，且将该服务设置为手动启动，则 HTTP SSL 服务将无法启动。 移除 IIS，或移除阻止该服务启动的 HTTP SSL 依赖关系。</li></ol><h2 id="相关信息"><a href="#相关信息" class="headerlink" title="相关信息"></a>相关信息</h2><ul><li>由于安装可能会回滚，导致该服务不存在，因此该错误还会阻止重新安装 VMware View Composer。 如果遇到此问题，请勿响应该错误消息，这将阻止回滚发生。 从而允许您重新运行安装程序可执行文件。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Horizon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> Horizon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建VMware Horizon8私有云桌面虚拟化(五)Horizon连接vCenter Server</title>
      <link href="/post/3576033258.html"/>
      <url>/post/3576033258.html</url>
      
        <content type="html"><![CDATA[<p>1、登入 Horizon 控制台</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242319287.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242319274.png" alt=""></p><p>2、添加 vCenter Server 服务器</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242319966.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242319394.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242319776.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242320398.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242320467.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242320774.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242320332.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242320901.png" alt=""></p><p>3、添加即时克隆域管理员（添加这个账户可以使后面批量生成的计算机自动加域）</p><p>即时克隆需要有一个能够加域的域账户，是因为克隆后的计算机需要加入到域控中，配合域账户实现登录以及策略管控</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242320883.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242321229.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Horizon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> Horizon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建VMware Horizon8私有云桌面虚拟化(三)部署设置vCenter Server Appliance</title>
      <link href="/post/1562883640.html"/>
      <url>/post/1562883640.html</url>
      
        <content type="html"><![CDATA[<p>在 Horizon Connection Server 服务器上执行安装 <strong>VMware vCenter Server Appliance</strong> 软件包（以下简称：vCenter Server ）</p><ul><li><p>vCenter Server 服务器 IP：40.1.0.206</p></li><li><p>vCenter Server 服务器管理界面：<a href="https://40.1.0.206:5480">https://40.1.0.206:5480</a></p></li><li>vCenter Server 设备入门界面：<a href="https://40.1.0.206:443">https://40.1.0.206:443</a></li><li>使用软件包为：VMware-VCSA-all-7.0.0-16189094.iso</li></ul><p>将软件复制到服务器，然后进行安装（需要用域管理员登入）</p><p><strong>一、第一阶段部署安装 vCenter Server</strong></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242256333.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242257048.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242257022.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242257397.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242257212.png" alt=""></p><p>1、设置生成 vCenter Server 虚拟机选择配置</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242258204.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242300780.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242301903.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242301032.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242301537.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242301721.png" alt="img"></p><p>2、去打开新生成的 VMware vCenter Server Appliance 虚拟机电源</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242302795.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242302775.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242303883.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242303894.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242303184.png" alt="img"></p><p><strong>二、第二阶段设置 vCenter Server Appliance</strong></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242304909.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242304115.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242304167.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242305184.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242305308.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242305542.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242305281.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242306974.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242306774.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242306088.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Horizon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> Horizon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建VMware Horizon8私有云桌面虚拟化(四)vCenter Server 设置Esxi集群与主机</title>
      <link href="/post/404934634.html"/>
      <url>/post/404934634.html</url>
      
        <content type="html"><![CDATA[<p>1、新建数据中心</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242312540.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242312386.png" alt=""></p><p>2、新建集群，虚拟桌面需要使用集群才可创建，必须要的步骤，即使你就一台 Esxi</p><p>[</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242312342.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242312136.png" alt=""></p><p><strong>重点填坑：这里有个坑，由于配置不够不能打开 vSphere DRS 与 vSphere HA 不然会导致后面模板机开机失败。</strong></p><p>关闭 vSphere DRS</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242313523.png" alt=""></p><p>关闭 vSphere HA</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242313071.png" alt=""></p><p>3、添加主机</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242313871.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242313779.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242313254.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242313183.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242314855.png" alt=""></p><p>4、连接完成，红色感叹号是因为新建集群时勾选了 DRS 和 HA，要去关闭，看上面的重点填坑步骤</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242314027.png" alt=""></p><p>把这两项关闭</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242314245.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Horizon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> Horizon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建VMware Horizon8私有云桌面虚拟化(一)安装Horizon Connection Server8</title>
      <link href="/post/2041350213.html"/>
      <url>/post/2041350213.html</url>
      
        <content type="html"><![CDATA[<p><strong>根据部署过程以图文的方式将 VMware Horizon 云桌面部署简化描述，类似 VSAN 概念不会出现。 搭建案例的存储是在 Esxi 本地，系统的相关设置也只限于能够直接使用到云桌面并没有细化的讲解，主要的服务器就一台 Esxi，其他的域控等服务器都是基于 Esxi 做的虚拟主机。PS：vSphere Server 是一个集合，里面包含有 Horizon 和 vCenter 以及 Esxi。</strong></p><p><strong>一、</strong> <strong>服务器软件包与环境准备</strong></p><ul><li>ESXI 服务器、域控服务器</li><li>vCenter-Server7.0 软件包：VMware-VCSA-all-7.0.0-16189094.iso</li><li>Connection-Server8.0 软件包：VMware-Horizon-Connection-Server-x86_64-8.0.0-16592062.exe</li><li>Horizon-Agent 软件包：VMware-Horizon-Agent-x86_64-8.0.0-16530789.exe</li><li>SqlServer 数据库软件包：cn_sql_server_2019_enterprise_x64_dvd_2bfe815a.iso</li><li>Windows Server ISO 系统：cn_windows_server_2019_x64_dvd_4de40f33.iso</li></ul><p>测试环境如下：</p><p>ESXI IP 地址：40.1.0.125<br>Horizon 服务器 IP 地址：40.1.0.204<br>vCenter Server 服务器 IP 地址：40.1.0.206<br>虚拟机名：Horizon Connection Server<br>计算机名：Runm-Connection<br>系统环境：Windows Server 2019 Standard<br>数据恢复密码：Connection.!#0</p><ol><li>创建虚拟机</li><li>安装 VMware Tools</li><li>修改 IP、计算机名等信息，加域域控环境。</li><li>关闭防火墙</li></ol><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242215917.png" alt="img"></p><p>创建安装 2019Server 虚拟机</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242215611.png" alt="img"></p><p>安装 VMware Tools</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242215948.png" alt="img"></p><p>改计算机名，加域</p><p>二、<strong>安装 Horizon Connection Server8</strong> （需要用域管理员账户登入安装）</p><p>测试软件包：VMware-Horizon-Connection-Server-x86_64-8.0.0-16592062</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242215281.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242215303.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242216415.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242215064.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242216100.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242216537.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242215187.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242215403.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242216017.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242215219.png" alt="img"></p><p>安装完成，在本机登入正常</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242215311.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242215598.png" alt="img"></p><p>在外部登入 <a href="https://40.1.0.204/admin/">https://40.1.0.204/admin/</a> 提示失败：解决办法请 <a href="https://www.linux66.cn/cloud-native/vmware/424.html">点击此链接</a> 访问另一篇文章</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/202403242217210.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> Horizon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
            <tag> Horizon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware磁盘的三种置备模式：精简置备/厚置备置零/厚置备延迟置零</title>
      <link href="/post/b8091e0.html"/>
      <url>/post/b8091e0.html</url>
      
        <content type="html"><![CDATA[<p>在部署虚拟化服务器的过程中，有时候我们可能会遇到这样几种现象：虚拟机置备100G，但是平台上却显示虚拟机使用了500G存储？</p><p>平台上看到所有虚拟机加起来才3T，存储上5T的空间却没了，严重的还导致所有虚拟机宕机。</p><p>为啥？都是”精简置备”惹得货，不，”精简置备”是个好东西，只是你只看到了他的有点，却忘了它的缺点！</p><p>下面来了解一下VMware存储置备的几种方式吧。</p><p>在VMware vSphere中，不管是以前的5.1版本，或者是现在的7.0版本，创建虚拟机时，在创建磁盘时，都会让选择磁盘的置备类型，分为：  </p><p><strong>（1）厚置备延迟置零；<br>（2）厚置备置零；<br>（3）Thin Provision（精简置备）。</strong></p><p>如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.1.png" alt="图片"></p><p><strong>厚置备和精简置备磁盘对比</strong></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.2.png" alt="图片"></p><p>这三种类型的磁盘，每一种类型的磁盘创建的方式和磁盘性能都有所不同，具体解释如下。</p><p><strong>1、厚置备延迟置零</strong></p><p>举例，如下图，本次创建的磁盘为200GB大小，如果选择厚置备延迟置零，VMware会在整个磁盘中划分一个200GB的空间专用于此虚拟机，故会创建一个200GB的vmdk文件，但由于是延迟置零，故假如目前只用到了50G空间，VMware会先zero（置零）这50G空间，后面150G空间会等到用到的时候再zero（置零），这种工作机制会对磁盘性能造成一定的影响。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.3.png" alt="图片"></p><p>创建完虚拟机后VMware创建的200GB vmdk文件，如下图</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.4.png" alt="图片"></p><p>示意图：</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.5.png" alt="图片"></p><p><strong>2、厚置备置零</strong></p><p>举例，如下图，本次创建的磁盘为200GB大小，如果选择厚置备置零，VMware会在整个磁盘中划分一个200GB的空间专用于此虚拟机，故会创建一个200GB的vmdk文件，由于是置零模式，故VMware会将这200GB的空间全部进行zero（置零）工作，故创建磁盘时比其它两种模式花的时间都要长，这种机制的磁盘的性能是最好的，因为这就好像是给虚拟机挂载了一块独立的硬盘，硬盘上的空间也全部属于该虚拟机，且提前也都已经格式化好，后期不管随着数据怎么增长，都可以直接使用这200G的空间，没有zero（置零）的操作了。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.6.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.7.png" alt="图片"><br>示意图：</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.8.png" alt="图片"></p><p><strong>3、Thin Provision（精简置备）</strong></p><p>举例，如下图，本次创建的磁盘为200GB大小，如果选择Thin Provision（精简置备），VMware会在整个磁盘中划分一个200GB的置备空间，但此200GB没有从整个磁盘中真正划出来，它的vmdk文件在虚拟机刚创建时可能为0KB，以后随着虚拟机的使用空间越来越大，再给它划分更多的空间，直至200GB全部给这虚拟机。就好像是给虚拟机挂载了一块空间会不断变化的硬盘，开始很小，后期会根据你的使用情况不断的增长空间。</p><p>故选择精简置备时，有个好处是，可以创建更多的虚拟机，如创建10个虚拟机，每个虚拟机创建（置备）了200GB空间，那就是2000GB，但整个磁盘可能只有1000GB，但也能成功创建，因为置备的2000G，VMware没有真正给每个虚拟机200G，而是在以后不断的使用中慢慢增长至200G，所以选择精简模式，很容易出现整个磁盘卷空间爆满的情况，导致虚拟机运行不正常。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.9.png" alt="图片"><br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.10.png" alt="图片"></p><p>示意图：</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.11.png" alt="图片"></p><p>根据这三种类型的磁盘的了解，磁盘的性能排序应该是：<strong>厚置备置零&gt;厚置备延迟置零&gt;Thic Provision（精简置备）。</strong></p><p>厚置备置零和厚置备延迟置零对磁盘空间的使用最快，Thic Provision（精简置备）最节省磁盘空间，但也容易出现磁盘“爆仓”的危险。</p><p>下面来看看我理解中精简置备是怎么运行的，接入磁盘每个扇区区块是1GB，每次虚拟机写入/删除量也是1GB，我们用10个方格表示存储上10GB空间，一台虚拟机置备空间大小为4GB。</p><p>系统可见数据量为4G，实际存储使用量为6G</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VMware%E2%80%99s%20three%20disk%20provisioning%20modes/640.12.jpg" alt="图片"></p><p>从上边可见，虚拟机系统内部可见使用数据量为4GB，但是存储上使用量为6GB，这一点是由于精简置备的规则决定的。厚置备是给你画了一个圈，只要在圈里面，怎么玩儿，随你。但是精简置备不可能给你画个圈，那样就没有意义了，所以就是你需要写入数据得时候，就给你找多大数据量得空白扇区，而不会主动去覆盖你已经删除数据得扇区，除非你系统内部发送置零清除已删除数据得扇区或者平台主动去统一回收这些扇区。</p><p>VMware这样考虑是有原因的，因为像你电脑硬盘，数据删除了还可以恢复，精简置备也要保留这种特性，所以不会主动去回收这些空间。实际上在vSphere 6.7里面，已经慢慢开始加入了回收的功能，只是回收力度很小，只有在存储空间容量快满时才会触发vSphere去回收空间。</p><p>所以，当环境存储充足时，比如桌面虚拟化，我这台存储空间就是为桌面设计的容量，这时候可以采用厚置备延迟至零(厚置备置零模式在配置虚拟机时等待置零操作会很久，如果不是数据保密要求很高等特殊场景，不建议选择这个)。如果存储空间不足，或存储需要超容量分配，可以选择精简置备，以达到节省存储空间的目的，但是记得定期去回收存储空间。并不是所有存储都可以回收空间，只是一部分存储支持。</p><p>下面是存储空间回收步骤，献给有需要的人：</p><p>1、打开ESXI主机SSH服务，flash客户端在安全配置中，HTML5客户端在服务中；</p><p>2、CRT或者PUTTY等工具SSH连接ESXI主机；</p><p>3、执行命令”ls -l /vmfs/volumes<br>“查看所有存储卷，复制需要回收空间存储的UUID；</p><p>4、执行命令”esxcli storage vmfs unmap -uUUID号”即回收该存储卷上的可用空间;</p><p>5、每台主机上的每个卷均需要执行一次，即所需执行次数=主机数*存储卷数量。每次执行大约在几小时左右，视空间大小决定。</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> vSphere </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用VMware vCenter Converter 6.2进行物理机虚拟化</title>
      <link href="/post/b5331bb6.html"/>
      <url>/post/b5331bb6.html</url>
      
        <content type="html"><![CDATA[<p>在企业发展的过程中，虚拟化是一条无法回避的道路，为了节省原物理服务器的维护成本、减少物理服务器本身对业务的影响等，人们纷纷把物理服务器迁移到虚拟化平台中去。</p><p><strong>VMware Converter</strong>是VMware公司提供一种用于将其他虚拟机和物理机转换为VMware虚拟机的可扩展解决方案，可以迁移Windows,Linux等操作系统。</p><p>下面以一台Windows Server 2016为例，进行虚拟化迁移实验：</p><h2 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h2><p>VMware Converter迁移工具可以在官方网站免费下载，目前最新版本是VMwarevCenter Converter Standalone 6.2，下载链接为：<a href="https://my.vmware.com/group/vmware/downloads/info/slug/infrastructure\_operations\_management/vmware\_vcenter\_converter\_standalone/6\_2\_0">https://my.vmware.com/group/vmware/downloads/info/slug/infrastructure\_operations\_management/vmware\_vcenter\_converter\_standalone/6\_2\_0</a></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.1.png" alt="图片"></p><p>官网下载需要注册账号，想偷懒的也可以用百度网盘链接下载：</p><p>链接：<a href="https://pan.baidu.com/s/1JvDa\_Vq5U4H3M6uXHOC6Yw">https://pan.baidu.com/s/1JvDa\_Vq5U4H3M6uXHOC6Yw</a></p><p>提取码：knh1</p><p>网盘里有2份官方操作手册  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.2.png" alt="图片"></p><p>可以在需要虚拟化的物理机上安装VMware vCenter Converter Standalone、进行迁移操作，也可以在其他客户端安装VMware vCenter ConverterStandalone，远程对目标物理机进行迁移。一般建议在物理机本机操作，可以简化流程，降低风险，提高迁移成功率。</p><p>本次实验在物理机上安装VMware vCenter Converter Standalone工具，安装过程略，安装完毕后系统桌面如下：</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.3.png" alt="图片"></p><h2 id="开始迁移"><a href="#开始迁移" class="headerlink" title="开始迁移"></a>开始迁移</h2><h3 id="打开VMware-ConverterStandalone，选择Connect-to-a-local-server"><a href="#打开VMware-ConverterStandalone，选择Connect-to-a-local-server" class="headerlink" title="打开VMware ConverterStandalone，选择Connect to a local server"></a>打开VMware ConverterStandalone，选择Connect to a local server</h3><p>选择使用本机当做converter服务器</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.4.png" alt="图片"></p><h3 id="选择Convert-machine"><a href="#选择Convert-machine" class="headerlink" title="选择Convert machine"></a>选择Convert machine</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.5.png" alt="图片"></p><h3 id="选择源系统，"><a href="#选择源系统，" class="headerlink" title="选择源系统，"></a>选择源系统，</h3><p>powered on：可以选择远程windows机器、远程linux机器、和本机。<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.6.png" alt="图片"></p><p>powered off：可以VMware虚拟机和Hyper-V虚拟机。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.7.png" alt="图片"></p><h3 id="选择目标系统"><a href="#选择目标系统" class="headerlink" title="选择目标系统"></a>选择目标系统</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.8.png" alt="图片"></p><h3 id="可以选择修改目标虚拟机的名字，与虚拟机存放的位置。"><a href="#可以选择修改目标虚拟机的名字，与虚拟机存放的位置。" class="headerlink" title="可以选择修改目标虚拟机的名字，与虚拟机存放的位置。"></a>可以选择修改目标虚拟机的名字，与虚拟机存放的位置。</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.9.png" alt="图片"></p><p>如果实际环境中有VCSA的话，以VCSA登录后，在P2V的时候，还可以按需求去选择目标主机</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.10.png" alt="图片"></p><h3 id="右边可以选择新虚拟机要放在ESXi住的的哪个Datastore上，请确保有足够的磁盘空间"><a href="#右边可以选择新虚拟机要放在ESXi住的的哪个Datastore上，请确保有足够的磁盘空间" class="headerlink" title="右边可以选择新虚拟机要放在ESXi住的的哪个Datastore上，请确保有足够的磁盘空间"></a>右边可以选择新虚拟机要放在ESXi住的的哪个Datastore上，请确保有足够的磁盘空间</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.11.png" alt="图片"></p><h3 id="进行转换之前，可以对新虚拟机的多方面配置进行调整"><a href="#进行转换之前，可以对新虚拟机的多方面配置进行调整" class="headerlink" title="进行转换之前，可以对新虚拟机的多方面配置进行调整"></a>进行转换之前，可以对新虚拟机的多方面配置进行调整</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.12.png" alt="图片"></p><p>设置目标虚拟机的磁盘和分区，可以看到自动获取的源分区信息，针对新虚拟机磁盘可以进行整体、已用、特定大小等设置；如果切换到advanced设置中，还可以选择thick、thin等磁盘准备方式。  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.13.png" alt="图片"><br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.14.png" alt="图片"></p><p>然后是内存、CPU等设置<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.15.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.16.png" alt="图片"></p><p>然后是网络设置，可以进行虚拟网络分配、修改虚拟网卡的数量、类型和连通性等</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.17.png" alt="图片"></p><p>后面还有本机服务运行状态的修改等，一般使用较少（而且转换成功后直接到虚拟化平台上进行修改或许更方便），一般情况下保持默认即可</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.18.png" alt="图片"></p><p>最后进行配置确认，点击Finish则开始迁移转换过程</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.19.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.20.png" alt="图片"></p><p>等待一段时间后，可以看到转换已完成</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.21.png" alt="图片"></p><h2 id="迁移成功"><a href="#迁移成功" class="headerlink" title="迁移成功"></a>迁移成功</h2><p>登陆到esxi主机，可以看到虚拟机确实已经创建成功，开启电源后运行正常。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.22.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/vCenter%20Converter%206.2/640.23.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> vSphere </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H3C配置经典全面教程，适合初学者！</title>
      <link href="/post/db4a72da.html"/>
      <url>/post/db4a72da.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-H3C-MSR路由器、交换机基本调试步骤（初学级别）："><a href="#1-H3C-MSR路由器、交换机基本调试步骤（初学级别）：" class="headerlink" title="1 H3C MSR路由器、交换机基本调试步骤（初学级别）："></a>1 H3C MSR路由器、交换机基本调试步骤（初学级别）：</h2><h3 id="1-1如何登陆进路由器或交换机"><a href="#1-1如何登陆进路由器或交换机" class="headerlink" title="1.1如何登陆进路由器或交换机"></a>1.1如何登陆进路由器或交换机</h3><p>1.1.1搭建配置环境</p><p>第一次使用H3C系列路由器时，只能通过配置口(Console)进行配置。</p><p>1）将配置电缆的RJ-45一端连到路由器的配置口(Console)上。</p><p>2）将配置电缆的DB-9(或DB-25)孔式插头接到要对路由器进行配置的微机或终端的串口上。 </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.1.png" alt="图片"></p><p>备注：登陆交换机的方法与路由器的一致，现仅用路由器举</p><p>1.1.2设置微机或终端的参数（进入路由器或交换机）</p><p>1）打开微机（笔记本电脑）或终端。如果使用微机进行配置，需要在微机上运行终端仿真程序，如Windows的超级终端。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.2.png" alt="图片"></p><p>2）第二步：设置终端参数</p><p>a、命名此终端  H3C或者自己想命的名</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.3.png" alt="图片"></p><p>b、选择串口  一般选用COM口，常选用COM1</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.4.png" alt="图片"><br>c、设置终端具体参数(此处点击“默认值”即可)</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.5.png" alt="图片"></p><p>d、打开路由器的电源，路由器进行启动 </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.6.jpeg" alt="图片"></p><p>e、当路由器启动完毕后，回车几下，当出现<H3C>时即可配置路由器。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.7.png" alt="图片"></p><h3 id="1-2路由器基本调试命令"><a href="#1-2路由器基本调试命令" class="headerlink" title="1.2路由器基本调试命令"></a>1.2路由器基本调试命令</h3><p>1.2.1使用本地用户进行telnet登录的认证<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;H3C&gt; system-view     进入系统视图</span><br><span class="line"></span><br><span class="line">[H3C]telnet server enable    打开路由器的telnet功能</span><br><span class="line"></span><br><span class="line">[H3C]configure-user count **5**   设置允许同时配置路由器的用户数</span><br><span class="line"></span><br><span class="line">[H3C]local-user **telnet**   添加本地用户(此处为telnet用户登陆时使用的用户名)</span><br><span class="line"></span><br><span class="line">[H3C-luser-telnet]password simple **h3c**   设置telnet用户登陆时所使用的密码</span><br><span class="line"></span><br><span class="line">[H3C-luser-telnet]service-type telnet  设置本地用户的服务类型(此处为telnet)</span><br><span class="line"></span><br><span class="line">[H3C-luser-telnet]level 3   设置本地用户的服务级别</span><br><span class="line"></span><br><span class="line">[H3C-luser-telnet]quit    退出本地用户视图</span><br><span class="line"></span><br><span class="line">[H3C]</span><br><span class="line"></span><br><span class="line">[H3C]user-interface vty 0 4    进入用户视图 </span><br><span class="line"></span><br><span class="line">[H3C-ui-vty0-4]authentication-mode scheme    选择“scheme”认证方式</span><br></pre></td></tr></table></figure><br>备注：红色部分可以由客户自行设置，此[H3C]处仅做举例时使用!</p><p>1.2.2路由器接口的配置</p><p>为接口配置ip地址<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;H3C&gt; system-view    进入系统视图</span><br><span class="line"></span><br><span class="line">[H3C] interface serial 3/0   进入某个端口</span><br><span class="line"></span><br><span class="line">[H3C-Serial3/0] ip address **200.1.1.1 255.255.255.0**   为该端口设置ip地址</span><br><span class="line"></span><br><span class="line">[H3C-Serial3/0] undo shutdown    对该端口进行复位</span><br><span class="line"></span><br><span class="line">[H3C-Serial3/0] quit    退回到系统视图</span><br><span class="line"></span><br><span class="line">[H3C]</span><br></pre></td></tr></table></figure><br>备注：红色部分可以由客户自行设置，此处仅做举例时使用!</p><p>1.2.3静态路由或默认路由的配置<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;H3C&gt; system-view     进入系统视图</span><br><span class="line"></span><br><span class="line">[H3C]ip route-static **192.168.1.0 255.255.255.0 192.168.0.1** 添加一条静态路由</span><br><span class="line"></span><br><span class="line">[H3C]ip route-static **0.0.0.0 0.0.0.0 192.168.0.1**    添加一条默认路由</span><br></pre></td></tr></table></figure><br>备注：红色部分可以由客户自行设置，此处仅做举例时使用!</p><p>1.2.3配置文件的管理<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display current-configuration    显示当前的配置文件</span><br><span class="line"></span><br><span class="line">&lt;H3C&gt;save    保存配置文件</span><br><span class="line"></span><br><span class="line">display interface **GigabitEthernet 0/0**    查看某端口的状态</span><br></pre></td></tr></table></figure><br>备注：</p><p>display命令可以在任何视图下进行</p><p>红色部分可以由客户自行设置，此处仅做举例时使用!</p><p>交换机的配置文件管理与路由器相同，故交换机的配置幻灯片中不再做举例。 </p><h3 id="1-3-交换机的基本调试命令"><a href="#1-3-交换机的基本调试命令" class="headerlink" title="1.3 交换机的基本调试命令"></a>1.3 交换机的基本调试命令</h3><p>1.3.1 创建VLAN并将端口加入到vlan中<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;H3C&gt; system-view      进入系统视图</span><br><span class="line"></span><br><span class="line">[H3C]vlan **10**    创建vlan 10</span><br><span class="line"></span><br><span class="line">[H3C-vlan100]port  ethernet **0/1**    将某个端口加入到vlan中</span><br><span class="line"></span><br><span class="line">[H3C-vlan100]quit    退出到系统</span><br><span class="line"></span><br><span class="line">[H3C]</span><br></pre></td></tr></table></figure><br>备注：红色部分可以由客户自行设置，此处仅做举例时使用!</p><p>1.3.2创建vlan虚接口并为接口配置ip地址<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;H3C&gt; system-view      进入系统视图</span><br><span class="line"></span><br><span class="line">[H3C]interface vlan-interface **1**    创建vlan虚接口</span><br><span class="line"></span><br><span class="line">[H3C-Vlan-interface100] ip address **192.168.1.1 255.255.255.0**    配置ip地址</span><br></pre></td></tr></table></figure><br>备注：红色部分可以由客户自行设置，此处仅做举例时使用!</p><p>1.3.3 配置默认路由<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[H3C] interface vlan-interface 1</span><br><span class="line"></span><br><span class="line">[H3C-Vlan-interface10] ip address **192.168.1.1 255.255.255.0**</span><br><span class="line"></span><br><span class="line">[H3C-Vlan-interface10] quit</span><br><span class="line"></span><br><span class="line">[H3C] ip route-static 0.0.0.0 0.0.0.0 **192.168.1.2** 配置缺省路由 </span><br></pre></td></tr></table></figure><br><strong>备注：红色部分可以由客户自行设置，此处仅做举例时使用!</strong></p><p>1.3.4设置端口类型<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;H3C&gt; system-view     进入系统视图</span><br><span class="line"></span><br><span class="line">[H3C]interface ethernet 0/1</span><br><span class="line"></span><br><span class="line">[H3C]port link-type trunk    将端口类型设置为trunk</span><br><span class="line"></span><br><span class="line">[H3C]port trunk permit vlan all trunk端口允许所有vlan通过</span><br><span class="line"></span><br><span class="line">[H3C]save</span><br></pre></td></tr></table></figure><br>Trunk可以收发多个vlan的报文，用于交换机与交换机之间的互连</p><p>1.3.5交换机设置telnet登录的认证配置命令<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;H3C&gt; system-view      进入系统视图 </span><br><span class="line"></span><br><span class="line">[H3C]local-user telnet   添加本地用户(此处为telnet用户登陆时使用的用户名)</span><br><span class="line"></span><br><span class="line">[H3C-luser-telnet]password simple h3c   设置telnet用户登陆时所使用的密码</span><br><span class="line"></span><br><span class="line">[H3C-luser-telnet]service-type telnet  设置本地用户的服务类型(此处为telnet)</span><br><span class="line"></span><br><span class="line">[H3C-luser-telnet]level 3   设置本地用户的服务级别</span><br><span class="line"></span><br><span class="line">[H3C-luser-telnet]quit    退出本地用户视图</span><br><span class="line"></span><br><span class="line">[H3C]</span><br><span class="line"></span><br><span class="line">[H3C]user-interface vty 0 4    进入用户视图 </span><br><span class="line"></span><br><span class="line">[H3C-ui-vty0-4]authentication-mode scheme    选择“scheme”认证方式</span><br></pre></td></tr></table></figure><br><strong>典型案例：</strong></p><p>案例1：如下图，LAB （router）通过配置路由器适当的两台终端电脑能够相互通信，请写出相关配置语句。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.8.png" alt="图片"></p><p>案例2：LAB （switch）</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.9.png" alt="图片"></p><h2 id="2-H3C交换机基本配置命令（入门级-配置语句拷贝注解）"><a href="#2-H3C交换机基本配置命令（入门级-配置语句拷贝注解）" class="headerlink" title="2 H3C交换机基本配置命令（入门级:配置语句拷贝注解）"></a>2 H3C交换机基本配置命令（入门级:配置语句拷贝注解）</h2><h3 id="2-1-IP地址配置命令："><a href="#2-1-IP地址配置命令：" class="headerlink" title="2.1 IP地址配置命令："></a>2.1 IP地址配置命令：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Quidway&gt;system-view----进入系统配置模式</span><br><span class="line"></span><br><span class="line">[Quidway] 系统配置编辑模式</span><br><span class="line"></span><br><span class="line">[Quidway] interface Vlan-interface 1---交换机出厂默认VLAN-1</span><br><span class="line"></span><br><span class="line">[Quidway-Vlan-interface1]ip add 192.168.X.254 255.255.255.0–配置IP地址</span><br><span class="line"></span><br><span class="line">[Quidway-Vlan-interface1]quit</span><br><span class="line"></span><br><span class="line">[Quidway] ip route-static 0.0.0.0 0.0.0.0 192.168.0.33-配置静态路由（网关）</span><br></pre></td></tr></table></figure><h3 id="2-2-远程登录配置命令："><a href="#2-2-远程登录配置命令：" class="headerlink" title="2.2 远程登录配置命令："></a>2.2 远程登录配置命令：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Quidway&gt;system-view----进入系统配置模式</span><br><span class="line"></span><br><span class="line">[Quidway] 系统配置编辑模式</span><br><span class="line"></span><br><span class="line">[Quidway] user-interface vty 0 4</span><br><span class="line"></span><br><span class="line">[Quidway-ui-vty0-4] user privilege level 3—管理权限配置</span><br><span class="line"></span><br><span class="line">[Quidway-ui-vty0-4] set authentication password cipher 123456 （cipher为密文密码）</span><br></pre></td></tr></table></figure><h3 id="2-3-配置端口速率及端口双工命令："><a href="#2-3-配置端口速率及端口双工命令：" class="headerlink" title="2.3 配置端口速率及端口双工命令："></a>2.3 配置端口速率及端口双工命令：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Quidway&gt;system-view----进入系统配置模式</span><br><span class="line"></span><br><span class="line">[Quidway]  系统配置编辑模式</span><br><span class="line"></span><br><span class="line">[Quidway]interface Ethernet 1/0/1---进入的端口</span><br><span class="line"></span><br><span class="line">[Quidway-Ethernet1/0/1] duplex full—配置端口为“全双工状态”</span><br><span class="line"></span><br><span class="line">[Quidway-Ethernet1/0/1] speed 100---配置端口为“100M”如果是千兆端口可以配置成1000M。</span><br></pre></td></tr></table></figure><h3 id="2-4-划分VLAN配置命令："><a href="#2-4-划分VLAN配置命令：" class="headerlink" title="2.4 划分VLAN配置命令："></a>2.4 划分VLAN配置命令：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Quidway&gt;system-view----进入系统配置模式</span><br><span class="line"></span><br><span class="line">[Quidway] 系统配置编辑模式</span><br><span class="line"></span><br><span class="line">[Quidway]VLAN 100---创建VLAN---ID为:100</span><br><span class="line"></span><br><span class="line">[Quidway]VLAN 101---创建VLAN---ID为:101</span><br><span class="line"></span><br><span class="line">[Quidway-vlan100] port Ethernet 1/0/1 to Ethernet 1/0/10----从第1口到第10口添加到VLAN 100</span><br><span class="line"></span><br><span class="line">[Quidway-vlan101] port Ethernet 1/0/11 to Ethernet 1/0/24----从第11口到第24口添加到VLAN 101</span><br></pre></td></tr></table></figure><h3 id="2-5-配置TRUNK命令："><a href="#2-5-配置TRUNK命令：" class="headerlink" title="2.5 配置TRUNK命令："></a>2.5 配置TRUNK命令：</h3><p>比如一栋宿舍楼需要两个网段，划分了两个VLAN为100和101，VLAN 100作为管理VLAN配置命令如下：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Quidway&gt;system-view----进入系统配置模式</span><br><span class="line"></span><br><span class="line">[Quidway] 系统配置编辑模式</span><br><span class="line"></span><br><span class="line">[Quidway]VLAN 100---创建VLAN---ID为:100</span><br><span class="line"></span><br><span class="line">[Quidway]VLAN 101---创建VLAN---ID为:101</span><br><span class="line"></span><br><span class="line">[Quidway-vlan100] port Ethernet 1/0/1 to Ethernet 1/0/10----从第1口到第10口添加到VLAN 100</span><br><span class="line"></span><br><span class="line">[Quidway-vlan101] port Ethernet 1/0/11 to Ethernet 1/0/24----从第11口到第24口添加到VLAN 101</span><br><span class="line"></span><br><span class="line">[Quidway] interface Vlan-interface 100—进入VLAN 100</span><br><span class="line"></span><br><span class="line">[Quidway-Vlan-interface100]ip address 192.168.100.254 255.255.255.0---给VLAN 100配置管理IP</span><br><span class="line"></span><br><span class="line">[Quidway-Vlan-interface100]quit</span><br><span class="line"></span><br><span class="line">[Quidway]ip route-static 0.0.0.0 0.0.0.0 192.168.100.33—配置静态路由（网关）</span><br></pre></td></tr></table></figure><br>上联端口为千兆端口GigabitEthernet1/1/1在配置模式下配置命令如下：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway] interface GigabitEthernet 1/1/1---进入上联端口</span><br><span class="line"></span><br><span class="line">[Quidway-GigabitEthernet1/1/1] port link-type trunk --TRUNK是端口汇聚的意思</span><br><span class="line"></span><br><span class="line">[Quidway-GigabitEthernet1/1/1] port trunk permit（允许）vlan all----配置允许通过的VLAN</span><br></pre></td></tr></table></figure><br>如果上联的路由器端口是自适应那么交换机上联口也是自适应，如果配置了1000M全双工那么交换机的上联端口也要配成1000M全双工。如下命令：[Quidway-GigabitEthernet1/1/1] duplex full—配置端口为“全双工状态”[Quidway-GigabitEthernet1/1/1] speed 1000—-配置端口为“1000M”</p><h3 id="2-6-SNMP配置命令："><a href="#2-6-SNMP配置命令：" class="headerlink" title="2.6 SNMP配置命令："></a>2.6 SNMP配置命令：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway]snmp-agent community read 1234---SNMP读的密码</span><br><span class="line"></span><br><span class="line">[Quidway]snmp-agent community write 4567—SNMP写的密码</span><br><span class="line"></span><br><span class="line">[Quidway]snmp-agent sys-info version all—SNMP软件版本有V1、V2c、V3这里配置的是允许所有版本。</span><br></pre></td></tr></table></figure><h3 id="2-7-配置防ARP攻击命令"><a href="#2-7-配置防ARP攻击命令" class="headerlink" title="2.7 配置防ARP攻击命令"></a>2.7 配置防ARP攻击命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Quidway&gt;system-view</span><br><span class="line"></span><br><span class="line">[Quidway]dhcp-snooping--开启交换机DHCP Snooping 功能。</span><br></pre></td></tr></table></figure><p>开启VLAN 1 内所有端口的ARP 入侵检测功能。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway]vlan 1</span><br><span class="line"></span><br><span class="line">[Quidway-vlan1]arp detection enable</span><br><span class="line"></span><br><span class="line">[Quidway-vlan1]quit</span><br></pre></td></tr></table></figure><br>设置上联端口Ethernet1/0/1 为DHCP Snooping 信任端口，ARP 信任端口。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway]interface Ethernet1/0/1</span><br><span class="line"></span><br><span class="line">[Quidway-Ethernet1/0/1]dhcp-snooping trust</span><br><span class="line"></span><br><span class="line">[Quidway-Ethernet1/0/1]arp detection trust</span><br><span class="line"></span><br><span class="line">[Quidway-Ethernet1/0/1]quit</span><br></pre></td></tr></table></figure><br>开启端口Ethernet1/0/2 上的ARP 报文限速功能，设置ARP 报文通过的最大速率为20pps。—目的是针对用户接入口，除上联端口外，下联用户端口建议都设置该命令。如下：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway]interface Ethernet1/0/2</span><br><span class="line"></span><br><span class="line">[Quidway-Ethernet1/0/2]arp rate-limit enable</span><br><span class="line"></span><br><span class="line">[Quidway-Ethernet1/0/2]arp rate-limit 20</span><br><span class="line"></span><br><span class="line">[Quidway-Ethernet1/0/2]quit</span><br></pre></td></tr></table></figure><br>配置端口状态自动恢复功能，恢复时间间隔为30 秒。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway] arp protective-down recover enable</span><br><span class="line"></span><br><span class="line">[Quidway] arp protective-down recover interval 30</span><br></pre></td></tr></table></figure></p><h2 id="3-H3C交换机基本配置（中级版）"><a href="#3-H3C交换机基本配置（中级版）" class="headerlink" title="3  H3C交换机基本配置（中级版）"></a>3  H3C交换机基本配置（中级版）</h2><h3 id="3-1VRP，CMW简介"><a href="#3-1VRP，CMW简介" class="headerlink" title="3.1VRP，CMW简介"></a>3.1VRP，CMW简介</h3><p>3.1.1 VRP（Versatile Routing Platform，通用路由平台）是华为公司数据通信产品的通用网络操作系统平台。</p><p>3.1.2 CMW（Comware）是H3C公司的核心软件平台。</p><p>3.1.3 VRP、CMW的体系结构以TCP/IP模型为参考，实现了数据链路层、网络层和应用层的多种协议，其体系结构图如下:</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.10.png" alt="图片"></p><p>3.1.4 VRP视图结构</p><p>用户视图 </p><p>系统视图</p><p>　  命令：system-view</p><p>在系统视图下  可以进入各种功能视图，在各功能视图中还可以进入子功能视图</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.11.png" alt="图片"></p><h3 id="3-2基本命令"><a href="#3-2基本命令" class="headerlink" title="3.2基本命令"></a>3.2基本命令</h3><p>3.2.1配置系统名</p><p>1)用途：用户名是设备的名字，目的是让用户更加方便的使用设备．</p><p>2)配置命令: sysname </p><p>3.2.2接口描述</p><p>1)用途：接口描述是为了指明接口的一些属性，如是什么接口，对端接的什么设备等，让用户更加了解该接口。</p><p>2)配置命令: interface ethernet0/1 </p><pre><code>        description  connect to student</code></pre><p>3.2.3接口IP地址的配置</p><p>1)用途:给接口一个网络上唯一的区分符．</p><p>2)配置命令:interface vlan 1 </p><pre><code>       ip address 168.10.2.1 255.255.255.0</code></pre><p>3.2.4 查看交换机信息</p><p>1)用途:让用户对设备的信息更了解，也有利于对设备做配置．</p><p>2）配置命令:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">　显示版本                      display  version</span><br><span class="line"></span><br><span class="line">　显示当前配置信息          　  display  current</span><br><span class="line"></span><br><span class="line">  显示NVRAM的配置              display  saved-config </span><br><span class="line"></span><br><span class="line">　显示接口信息　              　display  interface XX</span><br><span class="line"></span><br><span class="line">　显示路由信息　              　display  ip routing-table </span><br></pre></td></tr></table></figure><br>3.2.5 调试交换机</p><p>1)用途:更细致的查看交换机的各种数据包，帮助发现网络问题．</p><p>2)常用调试命令:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    terminal debugging</span><br><span class="line"></span><br><span class="line">    terminal monitor　 </span><br><span class="line"></span><br><span class="line">    debugging ip packet  </span><br><span class="line"></span><br><span class="line">    undo debugging all                           </span><br></pre></td></tr></table></figure><br>3.2.6 端口镜像</p><p>1)用途:通过镜像来抓取网络流量，帮助分析网络问题．</p><p>2)配置命令:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    monitor-port Ethernet 0/1 both （监控端口）</span><br><span class="line"></span><br><span class="line">    mirroring-port Ethernet0/2 both（源端口）   </span><br></pre></td></tr></table></figure><br>3.2.7 流镜像</p><p>1)用途:</p><p>　通过镜像来抓取网络流量，帮助分析网络问题．</p><p>2)配置命令:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    mirrored-to ip-group 2000 interface  Ethernet 0/1</span><br><span class="line"></span><br><span class="line">    acl number 2000</span><br><span class="line"></span><br><span class="line">    rule 0 permit  </span><br></pre></td></tr></table></figure><br>3.2.8快捷命令行介绍<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">VRP、CMW</span><br><span class="line"></span><br><span class="line">     Ctrl+F            前移一个字符</span><br><span class="line"></span><br><span class="line">     Ctrl+B            后移一个字符</span><br><span class="line"></span><br><span class="line">     Ctrl+P             ↑(向上箭头)重用前一条命令</span><br><span class="line"></span><br><span class="line">     Ctrl+N             ↓(向下箭头)重用下一条命令</span><br></pre></td></tr></table></figure><br>3.2.9引导配置</p><p>1)用途:通过引导配置，可以改变从什么地方取得交换机的系统软件．</p><p>2)配置命令<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">　boot boot-loader xxxx.bin</span><br><span class="line"></span><br><span class="line">  查看命令</span><br><span class="line"></span><br><span class="line">  display boot-loader</span><br></pre></td></tr></table></figure><br><em>z</em>3.3交换**</p><p>VLAN（Virtual Local Area Network）技术是把一个LAN划分成多个逻辑的“LAN”－VLAN，每个VLAN是一个广播域，VLAN内的主机间通信就和在一个LAN内一样，而VLAN间则不能直接互通，这样，广播报文被限制在一个VLAN内。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vlan 100  (1-4094) 创建VLAN  </span><br><span class="line"></span><br><span class="line">undo vlan 100  (1-4094)  删除VLAN.</span><br><span class="line"></span><br><span class="line">port Ethernet 2/0/1  在VLAN中增加端口.</span><br><span class="line"></span><br><span class="line">undo port Ethernet 2/0/1  在VLAN中删除端口.</span><br><span class="line"></span><br><span class="line">port access vlan 100 (1-4094)  将端口加入VLAN</span><br><span class="line"></span><br><span class="line">undo port access vlan 100 (1-4094)  将端口脱离VLAN</span><br><span class="line"></span><br><span class="line">display vlan VLAN ID (1-4094)   显示VLAN信息</span><br></pre></td></tr></table></figure><br>Trunk</p><p>Trunk允许在只有一条链路的情况下传输VLAN信息<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">• 定义端口属性为Trunk. </span><br><span class="line"></span><br><span class="line">    port link-type trunk</span><br><span class="line"></span><br><span class="line">• 删除端口Trunk属性.</span><br><span class="line"></span><br><span class="line">    undo port link-type</span><br><span class="line"></span><br><span class="line">• 定义端口可以传输的VLAN. </span><br><span class="line"></span><br><span class="line">    port trunk permit vlan VLAN ID </span><br><span class="line"></span><br><span class="line">• 在VLAN中删除端口.</span><br><span class="line"></span><br><span class="line">   undo port trunk permit vlan VLAN ID </span><br></pre></td></tr></table></figure><br>Link  Aggregation</p><p>链路聚合是将几条物理链路聚合在一起，当作一条  逻辑链路来使用。</p><p>分为静态聚合和动态聚合<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">• 静态聚合端口. </span><br><span class="line"></span><br><span class="line">    link-aggregation Ethernet 0/1 to Ethernet 0/4 both</span><br><span class="line"></span><br><span class="line">• 删除端口的静态聚合.</span><br><span class="line"></span><br><span class="line">    undo link-aggregation all</span><br><span class="line"></span><br><span class="line">• 在端口下进行动态聚合. </span><br><span class="line"></span><br><span class="line">    lacp enable</span><br><span class="line"></span><br><span class="line">• 在端口下取消动态聚合.</span><br><span class="line"></span><br><span class="line">    undo lacp enable </span><br></pre></td></tr></table></figure><br>STP（Spanning Tree Protocol）是生成树协议的英文缩写。该协议可应用于环路网络，通过一定的算法阻断某些冗余路径，将环路网络修剪成无环路的树型网络，从而避免报文在环路网络中的增生和无限循环。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">• 定义STP模式. </span><br><span class="line"></span><br><span class="line">    stp mode stp </span><br><span class="line"></span><br><span class="line">• 取消STP模式.</span><br><span class="line"></span><br><span class="line">    undo stp mode</span><br><span class="line"></span><br><span class="line">• 定义MSTP模式. </span><br><span class="line"></span><br><span class="line">    stp mode mstp </span><br><span class="line"></span><br><span class="line">• 取消MSTP模式.</span><br><span class="line"></span><br><span class="line">   undo stp mode </span><br></pre></td></tr></table></figure></p><h3 id="3-4路由"><a href="#3-4路由" class="headerlink" title="3.4路由"></a>3.4路由</h3><p>3.4.1 RIP</p><p>RIP是Routing Information Protocol（路由信息协议）的简称。它是一种较为简单的内部网关协议（IGP），主要用于规模较小的网络中。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">• 启动RIP，进入RIP视图 </span><br><span class="line"></span><br><span class="line">    rip</span><br><span class="line"></span><br><span class="line">• 停止RIP协议的运行 </span><br><span class="line"></span><br><span class="line">    undo rip</span><br><span class="line"></span><br><span class="line">• 在指定的网络接口上应用RIP</span><br><span class="line"></span><br><span class="line">    network network-address</span><br><span class="line"></span><br><span class="line">• 在指定的网络接口上取消应用RIP</span><br><span class="line"></span><br><span class="line">undo network network-address</span><br><span class="line"></span><br><span class="line">• 指定接口的RIP版本为RIP-1</span><br><span class="line"></span><br><span class="line">    rip version 1</span><br><span class="line"></span><br><span class="line">• 指定接口的RIP版本为RIP-2</span><br><span class="line"></span><br><span class="line">    rip version 2 [ broadcast | multicast ]</span><br><span class="line"></span><br><span class="line">• 将接口运行的RIP版本恢复为缺省值</span><br><span class="line"></span><br><span class="line">    undo rip version &#123; 1 | 2 &#125; </span><br></pre></td></tr></table></figure><br>3.4.2 OSPF</p><p>OSPF是Open Shortest Path First（开放最短路由优先协议）的缩写。它是IETF组织开发的一个基于链路状态的内部网关协议。目前使用的是版本2（RFC2328）.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">• 定义router id</span><br><span class="line"></span><br><span class="line">• 启动OSPF，进入OSPF视图</span><br><span class="line"></span><br><span class="line">    ospf </span><br><span class="line"></span><br><span class="line">    关闭OSPF路由协议进程</span><br><span class="line"></span><br><span class="line">    undo ospf [ process-id ]</span><br><span class="line"></span><br><span class="line">• 进入OSPF区域视图</span><br><span class="line"></span><br><span class="line">  area area-id</span><br><span class="line"></span><br><span class="line">• 删除指定的OSPF区域</span><br><span class="line"></span><br><span class="line">  undo area area-id</span><br><span class="line"></span><br><span class="line">• 指定网段运行OSPF协议</span><br><span class="line"></span><br><span class="line">  network ip-address wildcard-mask</span><br><span class="line"></span><br><span class="line">• 取消网段运行OSPF协议</span><br><span class="line"></span><br><span class="line">  undo network ip-address wildcard-mask </span><br></pre></td></tr></table></figure></p><h3 id="3-5网络管理"><a href="#3-5网络管理" class="headerlink" title="3.5网络管理"></a>3.5网络管理</h3><p>3.5.1 SNMP的介绍</p><p>• 介绍</p><p>　简单网络管理协议（SNMP)是被广泛应用的一项工业标准，是目前用得最广泛的计算机网络管理协议．</p><p>• 结构</p><p>　SNMP结构分为NMS(Network Management Station)和AGENT两部分，NMS是运行客户端的工作站，AGENT是运行在网络设备上的服务端软件．</p><p>• SNMP版本</p><p>　SNMP现在有三个版本，SNMP v3/v2c/v1,SNMP v3兼容v1和v2c.</p><p>• SNMP的配置包括：</p><p>　启动和关闭SNMP AGENT服务</p><p>　设置团体名</p><p>　配置一个SNMP组</p><p>　设置管理员的联系方法</p><p>　允许／禁止发送Trap报文</p><p>　设置Trap目标主机的地址</p><p>　指定发送报文的源地址</p><p>SNMP实例配置</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/H3C%20classic%20config/640.12.png" alt="图片"><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">• System-view            进入视图</span><br><span class="line"></span><br><span class="line">• Snmp-agent  community read public    只读团体属性名public</span><br><span class="line"></span><br><span class="line">• Snmp-agent  communty write private   只写团体属性名private</span><br><span class="line"></span><br><span class="line">• Snmp-agent  sys-inf contact Mr.wang-tel 3306 设置管理员联系方法</span><br><span class="line"></span><br><span class="line">• Snmp-agent  sys-info location telephone 3rd floor  路由器物理位置</span><br><span class="line"></span><br><span class="line">• Snmp-agent trap enable    使能trap报文</span><br><span class="line"></span><br><span class="line">• Snmp-agent target-host trap address udp-domain 129.102.149.23 udp-port 5000 params securityname public   允许向网管工作站129.102.149.23发送trap报文，使用团体名为public.</span><br></pre></td></tr></table></figure></p><h3 id="3-6安全管理"><a href="#3-6安全管理" class="headerlink" title="3.6安全管理"></a>3.6安全管理</h3><p>3.6.1认证与授权</p><p>• 要点</p><p>• 需要确定权利的等级</p><p>• 需要确定授权的策略<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">　　Generic or per user</span><br><span class="line"></span><br><span class="line">       RADIUS</span><br><span class="line"></span><br><span class="line">       Local  authentication</span><br></pre></td></tr></table></figure><br>3.6.2认证配置</p><p>• 本地验证</p><p>• VRP的配置<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">　 local-user huawei </span><br><span class="line"></span><br><span class="line">    password simple 123 </span><br><span class="line"></span><br><span class="line">     service-type telnet    设置本地认证用户名和密码</span><br><span class="line"></span><br><span class="line">　user-interface vty 0 4        进入vty视图</span><br><span class="line"></span><br><span class="line">　authentication-mode  scheme  通过telnet访问的用户使用本地验证</span><br></pre></td></tr></table></figure><br>3.6.3限制授权</p><p>区分用户在设备上的授权</p><p>• 配置等级</p><p>• 视图等级</p><p>• 支持等级 </p><p>　使用特权等级（level 1—-level 3)</p><p>3.6.4授权配置</p><p>• VRP的配置<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">　local-user  huawei password simple 123   建立用户</span><br><span class="line"></span><br><span class="line">　local-user  huawei level 3  设定授权等级</span><br><span class="line"></span><br><span class="line">• 应用命令</span><br><span class="line"></span><br><span class="line">   command-privilege level 3 view serial display interface </span><br><span class="line"></span><br><span class="line">•     VRP的命令行保护</span><br><span class="line"></span><br><span class="line">    super password level &#123;1/2/3&#125; &#123;simple/cipher&#125; 123 </span><br></pre></td></tr></table></figure><br>3.6.5 Vty和console的时间保护</p><p>• 用途</p><p> 为了使通过vty和console登陆的设备在使用者离开后不被其他没有授权的人使用．<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">• VRP的配置</span><br><span class="line"></span><br><span class="line">    Idle-timeout   minite  second</span><br></pre></td></tr></table></figure><br>3.6.6访问控制列表</p><p>• 概述</p><p>   路由器为了过滤数据包，需要配置一系列的规则，以决定什么样的数据包能够通过，这些规则就是通过访问控制列表ACL（Access Control List）定义的。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">• 分类 </span><br><span class="line"></span><br><span class="line">  基本的访问控制列表（basic acl）</span><br><span class="line"></span><br><span class="line">  高级的访问控制列表（advanced acl）</span><br><span class="line"></span><br><span class="line">  基于接口的访问控制列表（interface-based acl）</span><br><span class="line"></span><br><span class="line">  基于MAC的访问控制列表（mac-based acl）</span><br></pre></td></tr></table></figure><br>3.6.7标准访问列表的配置<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">• 在系统视图下，创建一个基本访问控制列表</span><br><span class="line"></span><br><span class="line">     acl &#123;number number/name name basic&#125; [match- order &#123;config/auto&#125;]</span><br><span class="line"></span><br><span class="line">• 在基本访问控制列表试图下，配置ACL规则．</span><br><span class="line"></span><br><span class="line">    rule [rule-id] &#123;permit/deny&#125; [source sour-add sour-wildcast/any] [time-range time-name] [logging] [fragment] [vpn-instance vpn-instance-name]</span><br><span class="line"></span><br><span class="line">acl number 2000</span><br><span class="line"></span><br><span class="line">    rule 1 permit source 20.1.1.0 0.0.0.255</span><br></pre></td></tr></table></figure></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、system-view   进入系统视图模式</span><br><span class="line"></span><br><span class="line">2、sysname   为设备命名</span><br><span class="line"></span><br><span class="line">3、display current-configuration 当前配置情况</span><br><span class="line"></span><br><span class="line">4、 language-mode Chinese|English 中英文切换</span><br><span class="line"></span><br><span class="line">5、interface Ethernet 1/0/1 进入以太网端口视图</span><br><span class="line"></span><br><span class="line">6、 port link-type Access|Trunk|Hybrid      设置端口访问模式</span><br><span class="line"></span><br><span class="line">7、 undo shutdown   打开以太网端口</span><br><span class="line"></span><br><span class="line">8、 shutdown   关闭以太网端口</span><br><span class="line"></span><br><span class="line">9、 quit     退出当前视图模式</span><br><span class="line"></span><br><span class="line">10、 vlan 10    创建VLAN 10并进入VLAN 10的视图模式</span><br><span class="line"></span><br><span class="line">11、 port access vlan 10   在端口模式下将当前端口加入到vlan 10中</span><br><span class="line"></span><br><span class="line">12、port E1/0/2 to E1/0/5    在VLAN模式下将指定端口加入到当前vlan中</span><br><span class="line"></span><br><span class="line">13、port trunk permit vlan all    允许所有的vlan通过</span><br></pre></td></tr></table></figure><p>H3C路由器######################################################################################<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、system-view   进入系统视图模式</span><br><span class="line"></span><br><span class="line">2、sysname R1   为设备命名为R1</span><br><span class="line"></span><br><span class="line">3、display ip routing-table 显示当前路由表</span><br><span class="line"></span><br><span class="line">4、 language-mode Chinese|English 中英文切换</span><br><span class="line"></span><br><span class="line">5、interface Ethernet 0/0 进入以太网端口视图</span><br><span class="line"></span><br><span class="line">6、 ip address 192.168.1.1 255.255.255.0   配置IP地址和子网掩码</span><br><span class="line"></span><br><span class="line">7、 undo shutdown   打开以太网端口</span><br><span class="line"></span><br><span class="line">8、 shutdown   关闭以太网端口</span><br><span class="line"></span><br><span class="line">9、 quit     退出当前视图模式</span><br><span class="line"></span><br><span class="line">10、 ip route-static 192.168.2.0 255.255.255.0 192.168.12.2 description To.R2 配置静态路由</span><br><span class="line"></span><br><span class="line">11、 ip route-static 0.0.0.0 0.0.0.0 192.168.12.2 description To.R2 配置默认的路由</span><br><span class="line"></span><br><span class="line">H3C S3100 Switch</span><br><span class="line"></span><br><span class="line">H3C S3600 Switch</span><br><span class="line"></span><br><span class="line">H3C MSR 20-20 Router</span><br></pre></td></tr></table></figure></p><h6 id=""><a href="#" class="headerlink" title="#"></a>#</h6><p>1、调整超级终端的显示字号；</p><p>2、捕获超级终端操作命令行，以备日后查对；</p><p>3、 language-mode Chinese|English 中英文切换 ；</p><p>4、复制命令到超级终端命令行，粘贴到主机；</p><p>5、交换机清除配置 :<H3C>reset save ；<H3C>reboot ；</p><p>6、路由器、交换机配置时不能掉电，连通测试前一定要</p><pre><code> 检查网络的连通性，不要犯最低级的错误。</code></pre><p>7、192.168.1.1/24    等同   192.168.1.1 255.255.255.0；在配置交换机和路由器时， 192.168.1.1 255.255.255.0 可以写成：</p><p>192.168.1.1 24</p><p>8、设备命名规则：地名-设备名-系列号 例：PingGu-R-S3600</p><h2 id="H3C交换机的一些简单配置"><a href="#H3C交换机的一些简单配置" class="headerlink" title="H3C交换机的一些简单配置"></a>H3C交换机的一些简单配置</h2><p>这里使用的H3C交换机是H126A，仅仅只做了最基本的配置以满足使用。</p><p>配置中可以通过display current-configura命令来显示当前使用的配置内容。</p><p># 配置VLAN 1<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Sysname&gt;system-view</span><br><span class="line"></span><br><span class="line">System View: return to User View with Ctrl+Z.</span><br><span class="line"></span><br><span class="line">[Sysname]vlan 1</span><br><span class="line"></span><br><span class="line">[Sysname-vlan1] quit</span><br><span class="line"></span><br><span class="line">[Sysname]management-vlan 1</span><br><span class="line"></span><br><span class="line">[Sysname]interface Vlan-interface 1</span><br><span class="line"></span><br><span class="line">[Sysname-Vlan-interface1] ip address 10.0.1.201 255.255.255.0</span><br></pre></td></tr></table></figure><br># 显示VLAN 接口1 的相关信息。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Sysname&gt; display ip interface Vlan-interface 1</span><br></pre></td></tr></table></figure><br># 创建VLAN（H3C不支持cisco的VTP，所以只能添加静态VLAN）<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;H3C\_TEST&gt;system-view</span><br><span class="line"></span><br><span class="line">System View: return to User View with Ctrl+Z.</span><br><span class="line"></span><br><span class="line">[H3C\_TEST]vlan 99</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-vlan99]name seicoffice</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-vlan99]quit</span><br><span class="line">``</span><br><span class="line">\# 把交换机的端端口划分到相应的Vlan中</span><br><span class="line">``</span><br><span class="line">[H3C\_TEST]interface ethernet1/0/2　　　　　　　//进入端口模式</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-Ethernet1/0/2]port link-type access //设置端口的类型为access</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-Ethernet1/0/2]port access vlan 99　　//把当前端口划到vlan 99</span><br><span class="line"></span><br><span class="line">[H3C\_TEST]vlan 99</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-vlan99]port ethernet1/0/1 to ethernet1/0/24　　//把以及网端口1/0/1到1/0/24划到vlan99</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-vlan99]quit</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-GigabitEthernet1/2/1]port trunk permit vlan 1 99    // &#123;ID|All&#125; 设置trunk端口允许通过的VLAN</span><br></pre></td></tr></table></figure></p><p># 配置本地用户<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Sysname&gt;system-view</span><br><span class="line"></span><br><span class="line">System View: return to User View with Ctrl+Z.</span><br><span class="line"></span><br><span class="line">[Sysname]local-user h3c</span><br><span class="line"></span><br><span class="line">New local user added.</span><br><span class="line"></span><br><span class="line">[Sysname-luser-h3c]service-type telnet level 3</span><br><span class="line"></span><br><span class="line">[Sysname-luser-h3c]password simple h3c</span><br></pre></td></tr></table></figure><br># 配置欢迎信息<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[H3C\_TEST]header login %Welcome to login h3c!%</span><br></pre></td></tr></table></figure><br># 配置用户认证方式telnet(vty 0-4)<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[H3C\_TEST]user-interface vty 0 4</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-ui-vty0-4]authentication-mode scheme</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-ui-vty0-4]protocol inbound telnet</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-ui-vty0-4]super authentication-mode super-password</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-ui-vty0-4]quit</span><br><span class="line"></span><br><span class="line">[H3C\_TEST]super password level 3 simple h3c    //用户登陆后提升权限的密码</span><br></pre></td></tr></table></figure><br># 配置Radius策略<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[H3C\_TEST]radius scheme radius1</span><br><span class="line"></span><br><span class="line">New Radius scheme</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-radius-radius1]primary authentication 10.0.1.253 1645</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-radius-radius1]primary accounting 10.0.1.253 1646</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-radius-radius1]secondary authentication 127.0.0.1 1645</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-radius-radius1]secondary accounting 127.0.0.1 1646</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-radius-radius1]timer 5</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-radius-radius1]key authentication h3c</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-radius-radius1]key accounting h3c</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-radius-radius1]server-type extended</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-radius-radius1]user-name-format without-domain </span><br></pre></td></tr></table></figure><br># 配置域<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[H3C\_TEST]domain h3c</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-isp-h3c]authentication radius-scheme radius1 local</span><br><span class="line"></span><br><span class="line">[H3C\_TEST-isp-h3c]scheme radius-scheme radius1 local</span><br><span class="line"></span><br><span class="line">[H3C\_TEST]domain default enable h3c</span><br></pre></td></tr></table></figure><br># 配置在远程认证失败时，本地认证的key<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[H3C\_TEST]local-server nas-ip 127.0.0.1 key h3c</span><br></pre></td></tr></table></figure><br>H3C交换机路由器telnet和console口登录配置</p><p>2009年11月09日 星期一 10:00</p><p>级别说明</p><p>Level 名称</p><p>命令</p><p>0</p><p>参观</p><p>ping、tracert、telnet</p><p>1</p><p>监控</p><p>display、debugging</p><p>2</p><p>配置</p><p>所有配置命令（管理级的命令除外）</p><p>3</p><p>管理</p><p>文件系统命令、FTP命令、TFTP命令、XMODEM命令</p><p>telnet仅用密码登录，管理员权限<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Router]user-interface vty 0 4[Router-ui-vty0-4]user privilege level 3[Router-ui-vty0-4]set authentication password simple abc</span><br></pre></td></tr></table></figure><br>telnet仅用密码登录，非管理员权限<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Router]super password level 3 simple super</span><br><span class="line"></span><br><span class="line">[Router]user-interface vty 0 4[Router-ui-vty0-4]user privilege level 1[Router-ui-vty0-4]set authentication password simple abc</span><br></pre></td></tr></table></figure><br>telnet使用路由器上配置的用户名密码登录，管理员权限<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Router]local-user admin password simple admin[Router]local-user admin service-type telnet[Router]local-user admin level 3</span><br><span class="line"></span><br><span class="line">[Router]user-interface vty 0 4[Router-ui-vty0-4]authentication-mode local</span><br></pre></td></tr></table></figure><br>telnet使用路由器上配置的用户名密码登录，非管理员权限<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Router]super password level 3 simple super</span><br><span class="line"></span><br><span class="line">[Router]local-user manage password simple manage[Router]local-user manage service-type telnet[Router]local-user manage level 2</span><br><span class="line"></span><br><span class="line">[Router]user-interface vty 0 4[Router-ui-vty0-4]authentication-mode local</span><br></pre></td></tr></table></figure><br>对console口设置密码，登录后使用管理员权限<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Router]user-interface con 0[Router-ui-console0]user privilege level 3[Router-ui-console0]set authentication password simple abc</span><br></pre></td></tr></table></figure><br>对console口设置密码，登录后使用非管理员权限<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Router]super password level 3 simple super</span><br><span class="line"></span><br><span class="line">[Router]user-interface con 0[Router-ui-console0]user privilege level 1[Router-ui-console0]set authentication password simple abc</span><br></pre></td></tr></table></figure><br>对console口设置用户名和密码，登录后使用管理员权限<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Router]local-user admin password simple admin[Router]local-user admin service-type terminal[Router]local-user admin level 3</span><br><span class="line"></span><br><span class="line">[Router]user-interface con 0[Router-ui-console0]authentication-mode local</span><br></pre></td></tr></table></figure><br>对console口设置用户名和密码，登录后使用非管理员权限<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Router]super password level 3 simple super</span><br><span class="line"></span><br><span class="line">[Router]local-user manage password simple manage[Router]local-user manage service-type terminal[Router]local-user manage level 2</span><br><span class="line"></span><br><span class="line">[Router]user-interface con 0[Router-ui-console0]authentication-mode local</span><br></pre></td></tr></table></figure><br>simple 是明文显示，cipher 是加密显示</p><p>路由器不设置telnet登录配置时，用户无法通过telnet登录到路由器上</p><p>[Router-ui-vty0-4]acl 2000 inbound可以通过acl的规则只允许符合条件的用户远程登录路由器</p><p>路由器命令<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\~~~~~~~~~~</span><br><span class="line"></span><br><span class="line">[Quidway]display version               显示版本信息</span><br><span class="line"></span><br><span class="line">[Quidway]display current-configuration       显示当前配置</span><br><span class="line"></span><br><span class="line">[Quidway]display interfaces              显示接口信息</span><br><span class="line"></span><br><span class="line">[Quidway]display ip route               显示路由信息</span><br><span class="line"></span><br><span class="line">[Quidway]sysname aabbcc                更改主机名</span><br><span class="line"></span><br><span class="line">[Quidway]super passwrod 123456            设置口令  </span><br><span class="line"></span><br><span class="line">[Quidway]interface serial0              进入接口</span><br><span class="line"></span><br><span class="line">[Quidway-serial0]ip address &lt;ip&gt;&lt;mask&gt;</span><br><span class="line"></span><br><span class="line">[Quidway-serial0]undo shutdown            激活端口</span><br><span class="line"></span><br><span class="line">[Quidway]link-protocol hdlc              绑定hdlc协议</span><br><span class="line"></span><br><span class="line">[Quidway]user-interface vty 0 4</span><br><span class="line"></span><br><span class="line">[Quidway-ui-vty0-4]authentication-mode password</span><br><span class="line"></span><br><span class="line">[Quidway-ui-vty0-4]set authentication-mode password simple 222</span><br><span class="line"></span><br><span class="line">[Quidway-ui-vty0-4]user privilege level 3</span><br><span class="line"></span><br><span class="line">[Quidway-ui-vty0-4]quit</span><br><span class="line"></span><br><span class="line">[Quidway]debugging hdlc all serial0           显示所有信息</span><br><span class="line"></span><br><span class="line">[Quidway]debugging hdlc event serial0          调试事件信息</span><br><span class="line"></span><br><span class="line">[Quidway]debugging hdlc packet serial0           显示包的信息</span><br></pre></td></tr></table></figure><br>静态路由：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway]ip route-static &lt;ip&gt;&lt;mask&gt;&#123;interface number|nexthop&#125;[value][reject|blackhole] </span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">[Quidway]ip route-static 129.1.0.0 16 10.0.0.2</span><br><span class="line"></span><br><span class="line">[Quidway]ip route-static 129.1.0.0 255.255.0.0 10.0.0.2</span><br><span class="line"></span><br><span class="line">[Quidway]ip route-static 129.1.0.0 16 Serial 2</span><br><span class="line"></span><br><span class="line">[Quidway]ip route-static 0.0.0.0 0.0.0.0   10.0.0.2</span><br></pre></td></tr></table></figure><br>动态路由：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway]rip</span><br><span class="line"></span><br><span class="line">[Quidway]rip work</span><br><span class="line"></span><br><span class="line">[Quidway]rip input</span><br><span class="line"></span><br><span class="line">[Quidway]rip output</span><br><span class="line"></span><br><span class="line">[Quidway-rip]network 1.0.0.0                   可以all</span><br><span class="line"></span><br><span class="line">[Quidway-rip]network 2.0.0.0</span><br><span class="line"></span><br><span class="line">[Quidway-rip]peer ip-address </span><br><span class="line"></span><br><span class="line">[Quidway-rip]summary </span><br><span class="line"></span><br><span class="line">[Quidway]rip version 1</span><br><span class="line"></span><br><span class="line">[Quidway]rip version 2 multicast</span><br><span class="line"></span><br><span class="line">[Quidway-Ethernet0]rip split-horizon         水平分隔</span><br><span class="line"></span><br><span class="line">[Quidway]router id A.B.C.D               配置路由器的ID</span><br><span class="line"></span><br><span class="line">[Quidway]ospf enable                   启动OSPF协议</span><br><span class="line"></span><br><span class="line">[Quidway-ospf]import-route direct           引入直联路由</span><br><span class="line"></span><br><span class="line">[Quidway-Serial0]ospf enable area &lt;area\_id&gt;   配置OSPF区域</span><br></pre></td></tr></table></figure><br>标准访问列表命令格式如下：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acl &lt;acl-number&gt; [match-order config|auto]   默认前者顺序匹配。</span><br><span class="line"></span><br><span class="line">rule [normal|special]&#123;permit|deny&#125; [source source-addr source-wildcard|any]</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line"></span><br><span class="line">[Quidway]acl 10</span><br><span class="line"></span><br><span class="line">[Quidway-acl-10]rule normal permit source 10.0.0.0 0.0.0.255</span><br><span class="line"></span><br><span class="line">[Quidway-acl-10]rule normal deny source any</span><br></pre></td></tr></table></figure><br>扩展访问控制列表配置命令<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置TCP/UDP协议的扩展访问列表：</span><br><span class="line"></span><br><span class="line">rule &#123;normal|special&#125;&#123;permit|deny&#125;&#123;tcp|udp&#125;source &#123;&lt;ip wild&gt;|any&#125;destination &lt;ip wild&gt;|any&#125;</span><br><span class="line"></span><br><span class="line">[operate]</span><br></pre></td></tr></table></figure><br>配置ICMP协议的扩展访问列表：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rule &#123;normal|special&#125;&#123;permit|deny&#125;icmp source &#123;&lt;ip wild&gt;|any]destination &#123;&lt;ip wild&gt;|any]</span><br><span class="line"></span><br><span class="line">[icmp-code] [logging]</span><br></pre></td></tr></table></figure><br>扩展访问控制列表操作符的含义<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">equal portnumber       等于</span><br><span class="line"></span><br><span class="line">greater-than portnumber    大于</span><br><span class="line"></span><br><span class="line">less-than portnumber       小于</span><br><span class="line"></span><br><span class="line">not-equal portnumber       不等</span><br><span class="line"></span><br><span class="line">range portnumber1 portnumber2 区间</span><br></pre></td></tr></table></figure><br>扩展访问控制列表举例<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway]acl 101</span><br><span class="line"></span><br><span class="line">[Quidway-acl-101]rule deny souce any destination any</span><br><span class="line"></span><br><span class="line">[Quidway-acl-101]rule permit icmp source any destination any icmp-type echo</span><br><span class="line"></span><br><span class="line">[Quidway-acl-101]rule permit icmp source any destination any icmp-type echo-reply</span><br><span class="line"></span><br><span class="line">[Quidway]acl 102</span><br><span class="line"></span><br><span class="line">[Quidway-acl-102]rule permit ip source 10.0.0.1 0.0.0.0 destination 202.0.0.1 0.0.0.0</span><br><span class="line"></span><br><span class="line">[Quidway-acl-102]rule deny ip source any destination any</span><br><span class="line"></span><br><span class="line">[Quidway]acl 103</span><br><span class="line"></span><br><span class="line">[Quidway-acl-103]rule permit tcp source any destination 10.0.0.1 0.0.0.0 destination-port equal ftp</span><br><span class="line"></span><br><span class="line">[Quidway-acl-103]rule permit tcp source any destination 10.0.0.2 0.0.0.0 destination-port equal www</span><br><span class="line"></span><br><span class="line">[Quidway]firewall enable</span><br><span class="line"></span><br><span class="line">[Quidway]firewall default permit|deny</span><br><span class="line"></span><br><span class="line">[Quidway]int e0</span><br><span class="line"></span><br><span class="line">[Quidway-Ethernet0]firewall packet-filter 101 inbound|outbound</span><br></pre></td></tr></table></figure><br>地址转换配置举例<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway]firewall enable</span><br><span class="line"></span><br><span class="line">[Quidway]firewall default permit </span><br><span class="line"></span><br><span class="line">[Quidway]acl 101</span><br><span class="line"></span><br><span class="line">[Quidway-acl-101]rule deny ip source any destination any </span><br><span class="line"></span><br><span class="line">[Quidway-acl-101]rule permit ip source 129.38.1.4 0 destination any</span><br><span class="line"></span><br><span class="line">[Quidway-acl-101]rule permit ip source 129.38.1.1 0 destination any</span><br><span class="line"></span><br><span class="line">[Quidway-acl-101]rule permit ip source 129.38.1.2 0 destination any</span><br><span class="line"></span><br><span class="line">[Quidway-acl-101]rule permit ip source 129.38.1.3 0 destination any</span><br><span class="line"></span><br><span class="line">[Quidway]acl 102</span><br><span class="line"></span><br><span class="line">[Quidway-acl-102]rule permit tcp source 202.39.2.3 0 destination 202.38.160.1 0</span><br><span class="line"></span><br><span class="line">[Quidway-acl-102]rule permit tcp source any destination 202.38.160.1 0 destination-port great-than 1024</span><br><span class="line"></span><br><span class="line">[Quidway-Ethernet0]firewall packet-filter 101 inbound </span><br><span class="line"></span><br><span class="line">[Quidway-Serial0]firewall packet-filter 102 inbound </span><br><span class="line"></span><br><span class="line">[Quidway]nat address-group 202.38.160.101 202.38.160.103 pool1</span><br><span class="line"></span><br><span class="line">[Quidway]acl 1 </span><br><span class="line"></span><br><span class="line">[Quidway-acl-1]rule permit source 10.110.10.0 0.0.0.255</span><br><span class="line"></span><br><span class="line">[Quidway-acl-1]rule deny source any </span><br><span class="line"></span><br><span class="line">[Quidway-acl-1]int serial 0</span><br><span class="line"></span><br><span class="line">[Quidway-Serial0]nat outbound 1 address-group pool1 </span><br><span class="line"></span><br><span class="line">[Quidway-Serial0]nat server global 202.38.160.101 inside 10.110.10.1 ftp tcp</span><br><span class="line"></span><br><span class="line">[Quidway-Serial0]nat server global 202.38.160.102 inside 10.110.10.2 www tcp</span><br><span class="line"></span><br><span class="line">[Quidway-Serial0]nat server global 202.38.160.102 8080 inside 10.110.10.3 www tcp</span><br><span class="line"></span><br><span class="line">[Quidway-Serial0]nat server global 202.38.160.103 inside 10.110.10.4 smtp udp</span><br></pre></td></tr></table></figure><br>PPP验证：</p><p>主验方：pap|chap<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway]local-user u2 password &#123;simple|cipher&#125; aaa</span><br><span class="line"></span><br><span class="line">[Quidway]interface serial 0</span><br><span class="line"></span><br><span class="line">[Quidway-serial0]ppp authentication-mode &#123;pap|chap&#125;</span><br><span class="line"></span><br><span class="line">[Quidway-serial0]ppp chap user u1        //pap时，不用此句 </span><br></pre></td></tr></table></figure><br>pap被验方：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway]interface serial 0 </span><br><span class="line"></span><br><span class="line">[Quidway-serial0]ppp pap local-user u2 password &#123;simple|cipher&#125; aaa</span><br></pre></td></tr></table></figure><br>chap被验方：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Quidway]interface serial 0 </span><br><span class="line"></span><br><span class="line">[Quidway-serial0]ppp chap user u1       </span><br><span class="line"></span><br><span class="line">[Quidway-serial0]local-user u2 password &#123;simple|cipher&#125; aaa</span><br></pre></td></tr></table></figure><br>H3C路由器配置方案注解</p><p>2010-06-19 22:44</p><p>#</p><p>version 5.20, Release 1719 //版本信息，自动显示</p><p>#</p><p>sysname H3C //给设备命名为H3C</p><p>#</p><p>super password level 3 cipher 7WC1&lt;3E`[Y)./a!1$H@GYA!! //设置super密码</p><p>#</p><p>domain default enable system</p><p>#</p><p>telnet server enable</p><p>#</p><p>vlan 1</p><p>#</p><p>domain system</p><p>access-limit disable</p><p>state active</p><p>idle-cut disable</p><p>self-service-url disable</p><p>#</p><p>user-group system //从此以上未标注的为默认配置，不用去理解</p><p>#</p><p>local-user admin //添加用户名为admin的用户</p><p>password cipher .]@USE=B,53Q=^Q`MAF4&lt;1!! //设置密码（密文）</p><p>authorization-attribute level 3 //设置用户权限为3级（最高）</p><p>service-type telnet //设置用户的模式为telnet用户</p><p>local-user share //从此往下四行同上</p><p>password cipher [HM$GH8P1GSQ=^Q`MAF4&lt;1!!</p><p>authorization-attribute level 1</p><p>service-type telnet</p><p>#</p><p>controller E1 0/0 //进入E1物理端口（两兆口）</p><p>using e1 //设置端口模式为E1（设置后下面会出现interface Serial0/0:0）</p><p>#</p><p>interface Aux0 //从此以下三行为主控板aux口默认配置</p><p>async mode flow</p><p>link-protocol ppp</p><p>#</p><p>interface Ethernet0/0 //进入E0/0接口（以太网口）</p><p>port link-mode route //配置该接口为路由模式</p><p>#</p><p>interface Serial0/0:0 //进入Serial0/0:0端口（前面用using e1命令后产生，对应E1端口）</p><p>link-protocol ppp //配置链路协议为ppp（默认）</p><p>ip address 74.1.63.170 255.255.255.252 //配置该接口IP地址</p><p>#</p><p>interface NULL0</p><p>#</p><p>interface Vlan-interface1 //lan口vlan地址（lan口地址）</p><p>ip address 192.168.1.1 255.255.255.0</p><p>#</p><p>interface Ethernet0/1</p><p>port link-mode bridge</p><p>#</p><p>interface Ethernet0/2</p><p>port link-mode bridge</p><p>#</p><p>interface Ethernet0/3</p><p>port link-mode bridge</p><p>#</p><p>interface Ethernet0/4</p><p>port link-mode bridge</p><p>#</p><p>ip route-static 74.1.8.0 255.255.255.0 74.1.63.169 //配置静态路由</p><p>#</p><p>user-interface aux 0</p><p>user-interface vty 0 4 //进入vty接口（远程登陆接口）0-4通道</p><p>authentication-mode scheme //配置登陆验证类型为scheme（用户验证型）</p><p>user privilege level 1 //设置当验证模式不是scheme类型时的登录级别（废配置）</p><p>#</p><p>return</p><h2 id="H3C路由器基本配置命令"><a href="#H3C路由器基本配置命令" class="headerlink" title="H3C路由器基本配置命令"></a>H3C路由器基本配置命令</h2><p>2009-05-13 22:56</p><p>[Quidway]display version                          显示版本信息</p><p>[Quidway]display current-configuration          显示当前配置</p><p>[Quidway]display interfaces                       显示接口信息</p><p>[Quidway]display ip route                      显示路由信息</p><p>[Quidway]sysname aabbcc                         更改主机名</p><p>[Quidway]super passwrod 123456                    设置口令 </p><p>[Quidway]interface serial0                      进入接口</p><p>[Quidway-serial0]ip address <ip><mask></p><p>[Quidway-serial0]undo shutdown                    激活端口</p><p>[Quidway]link-protocol hdlc                       绑定hdlc协议</p><p>[Quidway]user-interface vty 0 4</p><p>[Quidway-ui-vty0-4]authentication-mode password</p><p>[Quidway-ui-vty0-4]set authentication-mode password simple 222</p><p>[Quidway-ui-vty0-4]user privilege level 3</p><p>[Quidway-ui-vty0-4]quit</p><p>[Quidway]debugging hdlc all serial0             显示所有信息</p><p>[Quidway]debugging hdlc event serial0          调试事件信息</p><p>[Quidway]debugging hdlc packet serial0          显示包的信息</p><p>静态路由：</p><p>[Quidway]ip route-static <ip><mask>{interface number|nexthop}[value][reject|blackhole] </p><p>例如：</p><p>[Quidway]ip route-static 129.1.0.0 16 10.0.0.2</p><p>[Quidway]ip route-static 129.1.0.0 255.255.0.0 10.0.0.2</p><p>[Quidway]ip route-static 129.1.0.0 16 Serial 2</p><p>[Quidway]ip route-static 0.0.0.0 0.0.0.0   10.0.0.2</p><p>动态路由：</p><p>[Quidway]rip</p><p>[Quidway]rip work</p><p>[Quidway]rip input</p><p>[Quidway]rip output</p><p>[Quidway-rip]network 1.0.0.0                       ;可以all</p><p>[Quidway-rip]network 2.0.0.0</p><p>[Quidway-rip]peer ip-address </p><p>[Quidway-rip]summary </p><p>[Quidway]rip version 1</p><p>[Quidway]rip version 2 multicast</p><p>[Quidway-Ethernet0]rip split-horizon          ;水平分隔</p><p>[Quidway]router id A.B.C.D                       配置路由器的ID</p><p>[Quidway]ospf enable                         启动OSPF协议</p><p>[Quidway-ospf]import-route direct           引入直联路由</p><p>[Quidway-Serial0]ospf enable area <area\_id>    配置OSPF区域</p><p>标准访问列表命令格式如下：</p><p>acl <acl-number> [match-order config|auto]    默认前者顺序匹配。</p><p>rule [normal|special]{permit|deny} [source source-addr source-wildcard|any]</p><p>例：</p><p>[Quidway]acl 10</p><p>[Quidway-acl-10]rule normal permit source 10.0.0.0 0.0.0.255</p><p>[Quidway-acl-10]rule normal deny source any</p><p>扩展访问控制列表配置命令</p><p>配置TCP/UDP协议的扩展访问列表：</p><p>rule {normal|special}{permit|deny}{tcp|udp}source {<ip wild>|any}destination <ip wild>|any}</p><p>[operate]</p><p>配置ICMP协议的扩展访问列表：</p><p>rule {normal|special}{permit|deny}icmp source {<ip wild>|any]destination {<ip wild>|any]</p><p>[icmp-code] [logging]</p><p>扩展访问控制列表操作符的含义</p><p>equal portnumber       等于</p><p>greater-than portnumber    大于</p><p>less-than portnumber       小于</p><p>not-equal portnumber       不等</p><p>range portnumber1 portnumber2 区间</p><p>扩展访问控制列表举例</p><p>[Quidway]acl 101</p><p>[Quidway-acl-101]rule deny souce any destination any</p><p>[Quidway-acl-101]rule permit icmp source any destination any icmp-type echo</p><p>[Quidway-acl-101]rule permit icmp source any destination any icmp-type echo-reply</p><p>[Quidway]acl 102</p><p>[Quidway-acl-102]rule permit ip source 10.0.0.1 0.0.0.0 destination 202.0.0.1 0.0.0.0</p><p>[Quidway-acl-102]rule deny ip source any destination any</p><p>[Quidway]acl 103</p><p>[Quidway-acl-103]rule permit tcp source any destination 10.0.0.1 0.0.0.0 destination-port equal ftp</p><p>[Quidway-acl-103]rule permit tcp source any destination 10.0.0.2 0.0.0.0 destination-port equal www</p><p>[Quidway]firewall enable</p><p>[Quidway]firewall default permit|deny</p><p>[Quidway]int e0</p><p>[Quidway-Ethernet0]firewall packet-filter 101 inbound|outbound</p><p>地址转换配置举例</p><p>[Quidway]firewall enable</p><p>[Quidway]firewall default permit </p><p>[Quidway]acl 101</p><p>[Quidway-acl-101]rule deny ip source any destination any </p><p>[Quidway-acl-101]rule permit ip source 129.38.1.4 0 destination any</p><p>[Quidway-acl-101]rule permit ip source 129.38.1.1 0 destination any</p><p>[Quidway-acl-101]rule permit ip source 129.38.1.2 0 destination any</p><p>[Quidway-acl-101]rule permit ip source 129.38.1.3 0 destination any</p><p>[Quidway]acl 102</p><p>[Quidway-acl-102]rule permit tcp source 202.39.2.3 0 destination 202.38.160.1 0</p><p>[Quidway-acl-102]rule permit tcp source any destination 202.38.160.1 0 destination-port great-than </p><p>1024</p><p>[Quidway-Ethernet0]firewall packet-filter 101 inbound </p><p>[Quidway-Serial0]firewall packet-filter 102 inbound </p><p>[Quidway]nat address-group 202.38.160.101 202.38.160.103 pool1</p><p>[Quidway]acl 1 </p><p>[Quidway-acl-1]rule permit source 10.110.10.0 0.0.0.255</p><p>[Quidway-acl-1]rule deny source any </p><p>[Quidway-acl-1]int serial 0</p><p>[Quidway-Serial0]nat outbound 1 address-group pool1 </p><p>[Quidway-Serial0]nat server global 202.38.160.101 inside 10.110.10.1 ftp tcp</p><p>[Quidway-Serial0]nat server global 202.38.160.102 inside 10.110.10.2 www tcp</p><p>[Quidway-Serial0]nat server global 202.38.160.102 8080 inside 10.110.10.3 www tcp</p><p>[Quidway-Serial0]nat server global 202.38.160.103 inside 10.110.10.4 smtp udp</p><p>PPP验证：</p><p>主验方：pap|chap</p><p>[Quidway]local-user u2 password {simple|cipher} aaa</p><p>[Quidway]interface serial 0</p><p>[Quidway-serial0]ppp authentication-mode {pap|chap}</p><p>[Quidway-serial0]ppp chap user u1        //pap时，不用此句</p><p>pap被验方：</p><p>[Quidway]interface serial 0 </p><p>[Quidway-serial0]ppp pap local-user u2 password {simple|cipher} aaa</p><p>chap被验方：</p><p>[Quidway]interface serial 0 </p><p>[Quidway-serial0]ppp chap user u1       </p><p>[Quidway-serial0]local-user u2 password {simple|cipher} aaa</p>]]></content>
      
      
      <categories>
          
          <category> 网络相关 </category>
          
          <category> H3C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络基础知识 </tag>
            
            <tag> H3C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决VCSA7.0 u2 异常停机后 no healthy upstream问题</title>
      <link href="/post/fabc15fe.html"/>
      <url>/post/fabc15fe.html</url>
      
        <content type="html"><![CDATA[<h2 id="故障现象"><a href="#故障现象" class="headerlink" title="故障现象"></a>故障现象</h2><p>今天将VMWare 强制关机后，VCSA7.0u2访问控制台时<a href="https://[VCSA地址">https://[VCSA地址</a>] ， 突然出现no healthy upstream的字样，重启也解决不了问题。</p><p>这可咋整，不急，我们慢慢来解决<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/1.png" alt=""></p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>登录<a href="https://172.22.1.250:5480">https://172.22.1.250:5480</a>, 设备管理后台，发现整体运行状况有警示，按照提示先解决log盘空间问题，</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/4.png" alt=""></p><p> 1、登录[esxi]主机查询vcenter在那个ESXI主机上，然后登录vcenter主机，或者通过ssh连接vcenter主机。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/6.png" alt=""></p><p> 2、编辑vSphere Client这个虚拟主机，确认是五块硬盘从10G扩展到50G</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/2.png" alt=""></p><p>扩容后但是还是无法打开，vcneter网站，登录<a href="https://172.22.1.250:5480">https://172.22.1.250:5480</a>, 设备管理后台，发现许多的服务还是无法启动。</p><p>登录<a href="https://172.22.1.250:5480">https://172.22.1.250:5480</a> 设备管理后台，发现许多的服务还是无法启动，虽然现在运行状态都显示正常。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/12.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/13.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/3.png" alt=""><br> vmware vceneter server 手动也是无法启动的，</p><p>2、通过ssh连接到[vcenter]服务器，输入shell</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/14.png" alt=""><br>3、查询所有证书有效期</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for i in $(/usr/lib/vmware-vmafd/bin/vecs-cli store list); do echo STORE $i; sudo /usr/lib/vmware-vmafd/bin/vecs-cli entry list --store $i --text | egrep &quot;Alias|Not After&quot;; done</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/8.png" alt=""></p><p>4、更新证书，选择4</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/lib/vmware-vmca/bin/certificate-manager</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/9.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/11.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/15.png" alt=""></p><p> 5、更新完成，启动所有的服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service-control --start --all</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/16.png" alt=""></p><p>登录设备后台查看服务都已经启来了</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/17.png" alt=""><br> 再来打开vcenter地址，已经可以成功打开了</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20u2%20no%20healthy%20upstream/18.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCL最新版模拟器3.0.1版本上线啦！</title>
      <link href="/post/4581e758.html"/>
      <url>/post/4581e758.html</url>
      
        <content type="html"><![CDATA[<p><strong>H3C 前几天刚刚发布了最新版 3.0.1</strong></p><p><strong>是新华三集团推出的功能强大的界面图形化全真网络设备模拟软件。</strong></p><p>可以通过这款最新模拟器实现H3C公司交换、路由、安全设备的虚拟组网、配置、调试等。  </p><p>PS：无线功能正在开发中，预计Q3发布，敬请期待</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.png" alt="图片"></p><p>1、产品型号更新</p><p>路由器：新增VSR88设备</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.1.png" alt="图片"></p><p>交换机：新增S6850设备</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.2.png" alt="图片"></p><p>安全：新增F1090设备</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.3.png" alt="图片"></p><p>2、设备新增功能</p><p>HCL V3.0.1版本结合用户实际需求，重磅推出以下新增功能：</p><table><tbody><tr opera-tn-ra-comp="_$.pages:0.layers:0.comps:18.classicTable1:0" powered-by="xiumi.us"><td colspan="1" rowspan="1" opera-tn-ra-cell="_$.pages:0.layers:0.comps:18.classicTable1:0.td@@0"><section powered-by="xiumi.us"><p><span>产品线</span></p></section></td><td colspan="1" rowspan="1" opera-tn-ra-cell="_$.pages:0.layers:0.comps:18.classicTable1:0.td@@1"><section powered-by="xiumi.us"><p><span>本次新增功能</span></p></section></td></tr><tr opera-tn-ra-comp="_$.pages:0.layers:0.comps:18.classicTable1:1" powered-by="xiumi.us"><td colspan="1" rowspan="1" opera-tn-ra-cell="_$.pages:0.layers:0.comps:18.classicTable1:1.td@@0"><section powered-by="xiumi.us"><p><span>路由</span></p></section></td><td colspan="1" rowspan="1" opera-tn-ra-cell="_$.pages:0.layers:0.comps:18.classicTable1:1.td@@1"><section powered-by="xiumi.us"><p><span>DHCPv6、AFT、EVPN、VXLAN、BRAS</span></p></section></td></tr><tr opera-tn-ra-comp="_$.pages:0.layers:0.comps:18.classicTable1:2" powered-by="xiumi.us"><td colspan="1" rowspan="1" opera-tn-ra-cell="_$.pages:0.layers:0.comps:18.classicTable1:2.td@@0"><section powered-by="xiumi.us"><p><span>交换</span></p></section></td><td colspan="1" rowspan="1" opera-tn-ra-cell="_$.pages:0.layers:0.comps:18.classicTable1:2.td@@1"><section powered-by="xiumi.us"><p><span>Drni、 evpn、 vxlan</span></p></section></td></tr><tr opera-tn-ra-comp="_$.pages:0.layers:0.comps:18.classicTable1:3" powered-by="xiumi.us"><td colspan="1" rowspan="1" opera-tn-ra-cell="_$.pages:0.layers:0.comps:18.classicTable1:3.td@@0"><section powered-by="xiumi.us"><p><span>安全</span></p></section></td><td colspan="1" rowspan="1" opera-tn-ra-cell="_$.pages:0.layers:0.comps:18.classicTable1:3.td@@1"><section powered-by="xiumi.us"><p><span>RBM特性、WAF防护</span></p></section></td></tr></tbody></table><p>3、模拟器新增功能</p><p>（1）支持工程名称包含中文、设备名称包含中文、空格。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.4.jpeg" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.5.png" alt="图片"></p><p>（2）支持使用新华三服务公众号进行用户注册。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.6.png" alt="图片"></p><p>4、模拟器资料更新</p><p>全新的用户手册新增了安装、规格、配置不同方面的问题集锦，针对在安装或实验过程中可能遇到的各种问题进行逐一解答。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.7.png" alt="图片"></p><p>官方下载链接<br><a href="https://www.h3c.com/cn/Home/Agreement/default.htm?t=HCL\_Setup\_V3.0.1&amp;s=6019949">https://www.h3c.com/cn/Home/Agreement/default.htm?t=HCL\_Setup\_V3.0.1&amp;s=6019949</a></p><p>百度盘下载链接<br>HCL v3.0.1 官方网络模拟器（2021.8.5更新发布）<br>-———————————————————————————  </p><p>链接：<a href="https://pan.baidu.com/s/19qI1mY3qy2VRvl7rek\_h3A">https://pan.baidu.com/s/19qI1mY3qy2VRvl7rek\_h3A</a></p><p>提取码：a390</p><p>HCL v2.1.2 官方网络模拟器<br>链接：<a href="https://pan.baidu.com/s/16BSThcrvSs33iyuqKa5I\_Q">https://pan.baidu.com/s/16BSThcrvSs33iyuqKa5I\_Q</a><br>提取码：qll2</p><p>WIN10最新版21H1  HCL安装方式</p><p>WIN10最新版21H1不支持新版HCL，以及安装了eNSP旧版本VB的不支持直接安装 HCL3.0.1</p><p>可以先正常安装2.1.2版本，然后解压缩HCL3.0.1的EXE安装包，将解压的文件复制黏贴到 2.1.2的安装路径即可<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.8.png" alt="图片"><br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.9.png" alt="图片"><br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.10.png" alt="图片"><br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.11.png" alt="图片"></p><p>官方HCL模拟器 FAQ</p><p><a href="http://hcl-server.h3c.com/hcls/message/faqv3">http://hcl-server.h3c.com/hcls/message/faqv3</a></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL3.0.1/640.12.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 网络相关 </category>
          
          <category> H3C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 模拟器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何将VCSA 直接部署在VMware Workstation上</title>
      <link href="/post/abae461c.html"/>
      <url>/post/abae461c.html</url>
      
        <content type="html"><![CDATA[<p><strong>部署说明：</strong></p><p>  在学习vSphere的时候，vCenter Server与ESXi是必不可少的产品。推荐在物理主机上安装VMware ESXi，并且在ESXi的物理主机中安装vCenter Server的虚拟机。但受实验条件限制，有的朋友不能在物理主机测试VMware ESXi与vCenter Server，这个时候就可以使用VMware Workstation软件进行测试。但测试的时候也是有技巧的。在Workstation中创建ESXi的虚拟机并安装ESXi软件，这个没有争论，就是vCenter Server，如果完全模拟生产环境，再在ESXi的虚拟机中，安装嵌套的vCenter Server的虚拟机没有必要，因为vCenter Server占用的资源相对较多。为了获得较好的体验，推荐将vCenter Server直接部署在Workstation的虚拟机中。</p><p>  我们在用VMware Workstation做vSphere模拟测试学习的时候，装好ESXi主机后，如果此时还要按照VMware的官方做法，将vCenter Server Appliance部署在ESXi的虚拟机中，这样等于vCenter Server是在“嵌套”的虚拟机中运行的。对于个人电脑来说内存以及CPU资源往往是不够的，尤其是VCSA7.0对资源要求更高。</p><p>  如果在VMware Workstation上直接部署VCSA，则避免vCenter Server Appliance在“嵌套”的虚拟机中运行，这样可以提高实验的性能，另外也为了避免为ESXi实验虚拟机分配过多的资源。</p><p><strong>测试环境：</strong>  </p><ol><li><p>笔记本电脑1台（配置推荐：CPU&gt;4c，内存：&gt;16g Win10操作系统</p></li><li><p>VMware Workstation16已安装</p></li><li><p>虚拟机模式采用主机模式，（VMnet1：主机模式，VMnet8：NAT模式），采用静态IP方式（贴近真实环境）</p></li></ol><h4 id="第一阶段安装"><a href="#第一阶段安装" class="headerlink" title="第一阶段安装"></a><strong>第一阶段安装</strong></h4><pre><code> 在VMware Workstation中部署vCenter Server Appliance 比较简单，只要用虚拟光驱加载VCSA的ISO文件，导入其中的OVA文件即可。下面介绍主要步骤。（本节以VMware-VCSA-all-6.7.0-14367737.iso为例）。VCSA7.0版本的类似</code></pre><p>1、使用虚拟光驱加载VMware-VCSA-all-6.7.0-14367737.iso，浏览展开VCSA文件夹，可以看到vCenter Server Appliance的OVA文件，或者用加压缩软件解压ISO，获得ISO里的OVA文件</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.1.png" alt="图片"></p><p>2、在VMware Workstation导入OVA，单击“文件”菜单选择“打开”命令，在“打开”对话框中，浏览第（1）步加载的虚拟光驱的vCenter Server Appliance文件夹，选择OVA文件。  </p><p>简单粗暴点，直接在OVA文件上点鼠标右键，打开方式用VMware Workstation  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.2.png" alt="图片"></p><p>3、勾选霸王条款，下一步</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.3.png" alt="图片"></p><p>4、设置新虚拟机名称，这里我设置为“VCSA6.7”，点击“浏览”，选择虚拟机保存的文件位置。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.4.png" alt="图片"></p><p>5、部署选项，选择“Tiny vCenter Server with Embedded PSC”项</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.5.png" alt="图片"></p><p>6、配置此虚拟机的其他属性，</p><p>选择“Networking Configuration”设置项。</p><p>在“Host Network IP Address Family”文本框中输入IP地址类型为ipv4；</p><p>在“Host Network Mode”文本框中输入static；</p><p>在“Host Network IP Address”输入当前要部署的vCenter Server的IP地址，本示例为192.168.210.248；</p><p>在“Host Network Prefix”输入子网掩码位数，在此为24（表示255.255.255.0）；</p><p>在“Host Network Default Gateway”中输入网关，当前示例为192.168.210.2，</p><p>在“Host Network DNS Servers”文本框中输入DNS名称为192.168.210.253，在“Host Network Identity”输入192.168.210.253。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.6.png" alt="图片"></p><p>7、单击“SSO Configuration”选项卡，设置SSO账号（默认为administrator@vsphere.local）的密码，在此需要设置复杂密码（大小写字母、数字、非数字字符、长度超过6位）；</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.7.png" alt="图片"></p><p>8、点击“System Configuration”选项卡，设置root账号密码。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.8.png" alt="图片"></p><p>9、导入虚拟机完成之后，vcsa虚拟机自动启动，修改虚拟机配置，将网卡从默认的“桥接”改为“NAT”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.9.png" alt="图片"></p><p>【说明】当前计算机VMnet8网络配置为192.168.210.0</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.10.png" alt="图片"></p><p>10、启动虚拟机，之后耐心等待，直接在VMware Workstation的控制台中出现设置的管理地址</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.11.png" alt="图片"></p><p>11、在虚拟机控制台中，按F2，进入网络配置→DNS配置，将主机名称从默认的photon-machine，修改为192.168.210.248（本示例中VCSA安装的地址），或者是你需要设定的完整域名 FQDN</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.12.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.13.png" alt="图片"></p><p>12、修改hostname之后保存退出</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.14.png" alt="图片"></p><p>13、开启SSH状态</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.15.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.16.png" alt="图片"></p><h4 id="第二阶段安装"><a href="#第二阶段安装" class="headerlink" title="第二阶段安装"></a><strong>第二阶段安装</strong></h4><p>然后开始第二阶段的安装。</p><p>1、此时打开IE浏览器中，输入<a href="https://192.168.210.248:5480，首先会让输入密码会显示系统配置界面，单击“设置”">https://192.168.210.248:5480，首先会让输入密码会显示系统配置界面，单击“设置”</a></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.17.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.18.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.19.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.20.png" alt="图片"></p><p>2、在“设备配置”中确认系统名称为图12中设置的IP地址或名称</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.21.png" alt="图片"></p><p>3、在SSO配置中指定域名为vsphere.local，设置SSO密码</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.22.png" alt="图片"></p><p>4、配置CEIP，取消勾选“加入VMware客户体验提升计划（CEIP）”<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.23.png" alt="图片"></p><p>5、在“即将完成”对话框中确认vCenter Server Appliance的信息</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.24.png" alt="图片"></p><p>6、弹出警告信息，点击“确定”，开始第二阶段的配置，等vCenter Server系统启动完成之后，配置完成。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.25.png" alt="图片"></p><p>7、安装完成可以进入vCenter Server界面</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.26.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.27.png" alt="图片"></p><p>8、登录进入vCenter Server</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA%20on%20Workstation/640.28.png" alt="图片"></p><p>9、此时，VCSA安装成功完成（管理URL地址：<a href="https://192.168.210.248）">https://192.168.210.248）</a></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Windows Server 搭建一个iSCSI存储资源池</title>
      <link href="/post/80fdc049.html"/>
      <url>/post/80fdc049.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.48.png" alt="图片"></p><p>在学习VMWare虚拟化的过程中，需要一个共享存储资源池，但是对于我们用来安装测试来说，弄一套NAS存储又有点浪费。</p><p>今天我们利用Windows Server 2016 创建一个存储池和ISCSI虚拟磁盘</p><p>本文部署存储池，创建虚拟硬盘，新建卷，配置ISCSI目标服务器，将存储虚拟化。这里新建ISCSI虚拟磁盘是和群集故障转移结合，从而达到群集功能。</p><h2 id="配置存储池"><a href="#配置存储池" class="headerlink" title="配置存储池"></a><strong>配置存储池</strong></h2><p>配置存储池需要多块硬盘，在该服务器上打开“服务器管理器”，点击“文件和存储服务器”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.1.png" alt="图片"></p><p>点击“存储池”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.2.png" alt="图片"></p><p>选择“任务”-“新建存储池”  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.3.png" alt="图片"></p><p>打开“新建存储池向导”，点击“下一步”  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.4.png" alt="图片"></p><p>配置存储池名称，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.5.png" alt="图片"></p><p>选择需要配置到存储池的物理磁盘，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.6.png" alt="图片"></p><p>确认配置，点击“创建”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.7.png" alt="图片"></p><p>存储池创建完成，点击“关闭”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.8.png" alt="图片"></p><p>可以看到创建好的存储池</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.9.png" alt="图片"></p><h2 id="创建虚拟硬盘"><a href="#创建虚拟硬盘" class="headerlink" title="创建虚拟硬盘"></a><strong>创建虚拟硬盘</strong></h2><p>依然在存储池界面点击虚拟磁盘下的“任务”-“新建虚拟磁盘”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.10.png" alt="图片"></p><p>选择存储池点击“确定”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.11.png" alt="图片"></p><p>运行“新建虚拟磁盘向导”点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.12.png" alt="图片"></p><p>配置虚拟磁盘名称，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.13.png" alt="图片"></p><p>点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.14.png" alt="图片"></p><p>存储数据布局根据需要选择，其实这里就像在配置RAID一样，选择好了点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.15.png" alt="图片"></p><p>设置类型，可以选择“精简”也可以选择“固定”，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.16.png" alt="图片"></p><p>指定虚拟磁盘大小，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.17.png" alt="图片"></p><p>确认配置，点击“创建”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.18.png" alt="图片"></p><p>创建完成，点击“关闭”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.19.png" alt="图片"></p><p>可以看到虚拟磁盘的虚拟磁盘</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.20.png" alt="图片"></p><h2 id="新建卷"><a href="#新建卷" class="headerlink" title="新建卷"></a><strong>新建卷</strong></h2><p>还是在存储池界面中，右击虚拟磁盘的Data磁盘“新建卷”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.21.png" alt="图片"></p><p>运行“新建卷向导”，点击“下一步”，选择服务器和磁盘，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.22.png" alt="图片"></p><p>指定卷大小，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.23.png" alt="图片"></p><p>指定卷的驱动器，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.24.png" alt="图片"></p><p>设置文件系统设置，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.25.png" alt="图片"></p><p>确认配置，点击“创建”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.26.png" alt="图片"></p><p>卷创建完毕，点击“关闭”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.27.png" alt="图片"></p><h2 id="安装角色"><a href="#安装角色" class="headerlink" title="安装角色"></a><strong>安装角色</strong></h2><p>打开“服务器管理器”，点击“添加角色和功能”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.28.png" alt="图片"></p><p>打开“添加角色和功能向导”，点击“下一步”</p><p>安装类型选择“基于角色或基于功能的功能”，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.29.png" alt="图片"></p><p>服务器选择“从服务器池中选择服务器”，选中本地服务器，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.30.png" alt="图片"></p><p>服务器角色选择“<strong>文件服务器”和“ISCSI目标服务器</strong>”，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.31.png" alt="图片"></p><p>功能这里直接点击“下一步”</p><p>确认配置，把“如果需要，自动重新启动目标服务器打勾”，不过安装ISCSI目标服务不需要重新启动，服务器点击“安装”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.32.png" alt="图片"></p><p>角色安装完成，点击“关闭”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.33.png" alt="图片"></p><h2 id="配置ISCSI"><a href="#配置ISCSI" class="headerlink" title="配置ISCSI"></a><strong>配置ISCSI</strong></h2><p>打开“服务器管理器”，点击“文件和存储服务”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.34.png" alt="图片"></p><p>点击“ISCSI”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.35.png" alt="图片"></p><p>点击“任务”-“新建ISCSI虚拟磁盘”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.36.png" alt="图片"></p><p>配置ISCSI虚拟磁盘位置，我们这里选择刚才配置好的E盘，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.37.png" alt="图片"></p><p>配置ISCSI虚拟磁盘名称，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.38.png" alt="图片"></p><p>配置ISCSI虚拟磁盘大小，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.39.png" alt="图片"></p><p>配置ISCSI目标选择“新建ISCSI目标”，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.40.png" alt="图片"></p><p>配置目标名称，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.41.png" alt="图片"></p><p>访问服务器，点击“添加”，我们这里选择“输入选定类型的值”，类型为“IP地址”，键入“IP地址值192.168.210.130”，点击“确定”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.42.png" alt="图片"></p><p>在键入一个“IP地址值192.168.210.131”，点击“确定”</p><p>访问服务器设置好了，点击“下一步”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.43.png" alt="图片"></p><p>启用验证服务这里点击“下一步”</p><p>说明，如果这里设置了启用验证，那么在将iSCSI挂载到其他服务器的时候，也要在相应的验证步骤中输这里的验证信息</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.44.png" alt="图片"></p><p>确认配置，点击“创建”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.45.png" alt="图片"></p><p>配置完成，点击“关闭”  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.46.png" alt="图片"></p><p>配置好后就可以在ISCSI里面看到刚才的配置，这样ISCSI配置就完成了</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Win-sev%20iSCSI%20Storage/640.47.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无公网IP又想访问家里的设备？用ZeroTier One组建个人超级内网</title>
      <link href="/post/c8411948.html"/>
      <url>/post/c8411948.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/1.png" alt="图片"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h2><pre><code>有时候需要在外边访问家里的设备，而众所周知由于IPv4地址的枯竭，随着可用的公网 IPv4 地址越来越少，现在的运营商基本不给家用宽带分配公网 IP 了。如果你想通过外网访问到内网的资源，目前只能采用内网穿透的软件来实现。说到穿透的时候，大家都会提到 DDNS(动态域名解析)，或者使用反向代理的方式如 FRP、Ngrok。。这样你就不得不租用一个拥有公网 IP 的服务器才能实现上述需求，显然增加了不少使用成本。首先说说 DDNS，这种方式使用起来很方便，只要设置好相应的服务提供商的 API，就能做到每次 IP 变化后自动解析，这样不管家里 IP 怎么变，用域名都能访问回家。这里最大的硬伤就是公网IP，有些朋友的带宽就是个大局域网，路由器只能获取到上一级内网的 IP，这时就 GG 了。然后是 FRP、Ngrok 这样的反向代理程序，通过服务器转发数据来达到外网访问的目的，这样就需要自己有个 VPS，或者使用他人搭建的服务，据我所知的免费服务都是限速的，要是自己搭建的话，体验就要看服务器的网络质量了。</code></pre><p>现在我们就来看看，不需要公网 IP，不依赖服务端网络性能的 <strong>ZeroTier One</strong>。<strong>ZeroTier One</strong>是一个专门用来建立点对点虚拟专用网（P2P VPN）的工具，它提供在线管理界面和全平台的客户端，不需要复杂设置，只要安装客户端并加入到自己创建的网络即可。</p><p><strong>ZeroTier One 原理</strong></p><pre><code>ZeroTier 官网上说</code></pre><blockquote><p>ZeroTier is a smart Ethernet switch for planet Earth.</p></blockquote><p>!!! 适用于地球的智能网络交换机 …</p><p>它是一个分布式网络虚拟机管理程序，建立在加密安全的全球对等网络之上。它提供与企业 SDN 交换机同等的高级网络虚拟化和管理功能，而且可以跨本地和广域网并连接几乎任何类型的应用程序或设备。</p><p>好吧😥，有点牛逼</p><p>而说到主要功能，就是可以把多个不同网络的设备连接在一起，用来就像在一个局域网下</p><p>例如，我在路由器上装了 <strong>ZeroTier One</strong>，路由器挂了一个硬盘，而现在我在外边想要访问这个硬盘，那么只需要运行电脑上的 <strong>ZeroTier One</strong>，就能通过 Samba、FTP 等方式访问硬盘，而且看起来就像我就在家里一样。</p><p><strong>Zerotier One</strong> 这一类 P2P VPN 是在互联网的基础上将自己的所有设备组成一个私有的网络，可以理解为互联网连接的局域网。最常见的场景就是在公司可以用手机直接访问家里的 NAS，而且是点对点直连，数据传输并不经由第三方服务器中转。</p><p><strong>Zerotier One</strong> 在多设备之间建立了一个 Peer to Peer VPN（P2PVPN） 连接，如：在笔记本电脑、台式机、嵌入式设备、云资源和应用。这些设备只需要通过 <strong>ZeroTier One</strong> ( ZeroTier 的客户端) 在不同设备之间建立直接连接，即使它们位于 NAT 之后。连接到虚拟 LAN 的任何计算机和设备通常通过 NAT 或路由器设备与 Internet 连接，<strong>ZeroTier One</strong> 使用 STUN 和隧道来建立 NAT 后设备之间的 VPN 直连。</p><p>简单一点说，<strong>Zerotier One</strong> 就是通过 P2P 等方式实现形如交换机或路由器上 LAN 设备的内网互联。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/2.png" alt="图片"></p><h3 id="ZeroTier-One的优势"><a href="#ZeroTier-One的优势" class="headerlink" title="ZeroTier One的优势"></a><strong>ZeroTier One的优势</strong></h3><p>相比其他流行方案，<strong>ZeroTier One</strong>有这么几个优势：</p><ul><li><p>免费版支持客户端多。连入同一个网络的客户端不超过100个就都免费  </p></li><li><p>速度快，p2p模式。客户端联通之后流量基本不经过服务端/superNode而是点对点传输，传输速度取决于你设备所在宽带上行带宽以及手机端4g上网的速度</p></li><li><p>管理配置简单。不要被全英文的界面吓到，明白原理之后安装配置极其简单</p></li></ul><p>最重要的是支持多种平台。支持win、mac、安卓、苹果，以及多种发型版Linux，比如群晖系统（这也是选择ZeroTier One的重要原因），如下图，可以下载spk文件直接在群晖中部署（<strong>这里有一个大坑，后面会说到</strong>）</p><h2 id="ZeroTier使用教程"><a href="#ZeroTier使用教程" class="headerlink" title="ZeroTier使用教程"></a><strong>ZeroTier使用教程</strong></h2><h2 id="ZeroTier-One是跨平台的，能安装在几乎任何平台"><a href="#ZeroTier-One是跨平台的，能安装在几乎任何平台" class="headerlink" title="ZeroTier One是跨平台的，能安装在几乎任何平台"></a><strong>ZeroTier One</strong>是跨平台的，能安装在几乎任何平台</h2><p>Windows、macOS、Linux、iOS、Android、QNAP、Synology、西数 MyCloud NAS，下载地址：<a href="https://www.zerotier.com/download.shtml">https://www.zerotier.com/download.shtml</a></p><p>路由器推荐安装 Entware 后使用 <code>opkg install zerotier</code> 命令安装</p><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a><strong>注册</strong></h3><p>地址：<a href="https://my.zerotier.com/">https://my.zerotier.com/</a></p><p>进入页面后，首先得注册一个账号吧，点<strong>Register</strong></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/3.png" alt="图片"></p><p>输入你的基本信息，邮件地址，密码，注册完成。</p><p>或者可以直接使用Google，GitHub，Microsoft账号一键登录  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/4.png" alt="图片"></p><p>注册之后是这样的，保持默认就好，免费套餐能连接 50 个设备，以前是100个，不过50个设备个人使用足够用了</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/5.png" alt="图片"></p><h3 id="创建网络"><a href="#创建网络" class="headerlink" title="创建网络"></a><strong>创建网络</strong></h3><p>接下来直接点击最上面菜单中的Network，然后点击Create，即可创建前述之<strong>虚拟网络</strong>——也就是一串id号</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/6.png" alt="图片"></p><p>所谓ZeroTier网络/虚拟网络，就是后面你的群晖以及手机等设备要连入的虚拟网络。连到同一个网络的客户端互相可以直接访问。这一串数字id就是这个网络的本体，上面那个furious_rosenbaum是随机生成的网络名，用来描述网络，当你有多个网络的时候方便记忆和识别。  </p><p>注：上图中右侧绿色和蓝色的数字分别表示当前连入这个网络的客户端数量和总共创建了多少个设备。新建网络没有客户端连接，所以是零。</p><p>创建一个新的网络之后，我们得到一个 Network ID，这个在后面的设备连接时需要用到，点击刚刚创建的网络我们可以设置更多选项</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/7.png" alt="图片"></p><p>理论上这里也是不用修改任何地方，几处重点信息也圈出来了：</p><ul><li><p>网络id就是这个网络的唯一标识，后面客户端要加入网络时就是填入这个id号；</p></li><li><p>访问控制(Access Control)默认私有，也就是需要授权才能访问（后面客户端安装配置的部分会讲）；</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/8.png" alt="图片"></p></li></ul><p>下面IPv4 的设置就是分配设备内网 IP 网段，其他的设置可以在 Setting help 里看到说明，不了解的不建议乱设置，如果不小心把自己的网络暴露在外部，会相当危险</p><h3 id="此页面也是管理和监控页面，也就是后面添加或删除客户端，控制那些客户端能加入此网络都可以在此处完成。任何可以联网的设备只要有用户名和密码即可登录ZeroTier-One，然后进入此页面对网络进行管理，比如手机，平板，从任何位置都可以访问管理。"><a href="#此页面也是管理和监控页面，也就是后面添加或删除客户端，控制那些客户端能加入此网络都可以在此处完成。任何可以联网的设备只要有用户名和密码即可登录ZeroTier-One，然后进入此页面对网络进行管理，比如手机，平板，从任何位置都可以访问管理。" class="headerlink" title="此页面也是管理和监控页面，也就是后面添加或删除客户端，控制那些客户端能加入此网络都可以在此处完成。任何可以联网的设备只要有用户名和密码即可登录ZeroTier One，然后进入此页面对网络进行管理，比如手机，平板，从任何位置都可以访问管理。"></a>此页面也是管理和监控页面，也就是后面添加或删除客户端，控制那些客户端能加入此网络都可以在此处完成。任何可以联网的设备只要有用户名和密码即可登录ZeroTier One，然后进入此页面对网络进行管理，比如手机，平板，从任何位置都可以访问管理。</h3><p>注：所谓“客户端”即安装了ZeroTier One客户端软件的设备。本文到目前为止还没有涉及到客户端安装，也就是说，创建自己的帐号/创建虚拟网络不依赖于具体客户端设备或软件安装，以及之后的权限管理也都不涉及特定客户端，任何一个可以联网的系统都可以操作。这个在你实际使用之后会发现非常有用且方便</p><p>将页面拉到下面，圈出的部分便是监控和管理的主要操作区域。当前没有客户端连接的时候如下图</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/9.png" alt="图片"></p><h3 id="安装Windows客户端"><a href="#安装Windows客户端" class="headerlink" title="安装Windows客户端"></a><strong>安装Windows客户端</strong></h3><p>为了演示方便我先在PC电脑上下载ZeroTier的windows客户端安装，然后加入上面创建的网络。</p><p>回到ZeroTier网站顶端，点击最上面菜单第一项Download，进入下载页面，各种系统的版本都可以下载。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/10.png" alt="图片"></p><p>这里以Windows版为例，下载后一路默认设定安装即可。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/11.png" alt="图片"></p><p>安装软件的过程可以看做往系统插了一张新网卡，并把网卡连了一根网线，此网线通往ZeroTier的专有网络，逻辑上独立于你当前局域网之外。如果弹出如下窗口，点击是。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/12.png" alt="图片"></p><p>安装结束后可能会出现的提示，表示新建立了一个以太网口</p><p>然后查看系统设备会看到新出现的虚拟网卡ZeroTier One Virtual Port</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/13.png" alt="图片"></p><p>安装好后，从菜单运行，不会出主程序窗口，而是在任务栏出现ZeroTier One的小图标，右键点击会出现弹出菜单，在此处点击Join Network…加入刚刚申请的网络</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/14.png" alt="图片"></p><p>注：因为我这台Windows主机已经安装过ZeroTier One，所以已已经有节点信息，和曾经加入的网络(id号），为了安全起见就涂抹掉了（我尝试过卸载重装还是会有这些信息，暂时不管了），但不影响你加入新的网络。在此例中就是新申请的网络 35c192******8fd5</p><p>点击 Join Network…会弹出一个小窗，填入新申请这个网络id号，再点击Join即可</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/15.png" alt="图片"></p><p>重点来了，此时回到页面 刷新一下（或者直接从客户端系统栏图标上右键点出菜单，点击<strong>“ZeroTier Central”</strong>进入此页面），将页面拉下来，此时就会看之前No Devices have joined this network的地方出现这个客户端</p><p>后台设置默认是需要 Auth 才能连接的，在客户端申请加入网络后，需要在后台允许一下</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/16.png" alt="图片"></p><p>在网页端授权之后，用ipconfig查看一下，这个IP就是网页上那个IP。</p><p>方法：win+r，输入cmd，出现命令行终端，打“ipconfig”回车即可看到当前系统的网络配置情况。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/17.png" alt="图片"></p><h3 id="手机端安装ZeroTier-One客户端"><a href="#手机端安装ZeroTier-One客户端" class="headerlink" title="手机端安装ZeroTier One客户端"></a><strong>手机端安装ZeroTier One客户端</strong></h3><p>推荐用苹果，安卓系统正常安装流程需要访问google play。为了测试两个系统都安装，现在用安卓系统演示。  </p><p>在手机上安装ZeroTier One安卓客户端，装好之后大概这个样子</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/18.png" alt="图片"></p><p>我是科学上网用google play安装的</p><p>用google play装，启动之前先把手机wifi关掉，使用数据上网</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/19.png" alt="图片"></p><p>启动ZeroTier One应用，点击主界面上方的加号，出现如下界面。输入网络id号，点击Add Network</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/20.png" alt="图片"></p><p>运行ZeroTier One App</p><p>回到主界面会看到新添加的网络。上面那个网络是我之前创建的，也是我实际在用的，暂时可以忽略掉。</p><p>我以之前申请的用来做演示的网络，现在加入的是这个网络。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/21.png" alt="图片"></p><p>点击开关打开网络  </p><p>点击网络id号右下的小开关，会弹出创建VPN连接请求，确认即可</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/22.png" alt="图片"></p><p>刷新，会看到新的手机客户端已经上线，但未被授权。授权后，安卓手机就会自动上线，并获取IP地址</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/23.png" alt="图片"></p><p>此时手机、Windows电脑就像连入同一个路由器wifi下，各自的IP都都在网段</p><p>测试手机从外网连接家里的设备</p><p>此时人和手机物理上仍然是在家里，但因为手机已经断开家里的宽带，使用数据上网，所以场景等同于手机现在是从外网对家里的设备进行连接。可以看到手机端已经连上了VPN。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/24.png" alt="图片"></p><p>使用远程桌面访问另一台服务器也没问题。  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ZeroTier%20One/25.png" alt="图片"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a><strong>结语</strong></h2><p>目前 IPv6 还没得到普及，虽然我这里已经能有 IPv6 地址并且能 IPv6 站点了，奈何不是固定 IP，也不知道哪时才能人手一个固定 IP。就目前情况来看，使用 ZeroTier 来做内网穿透还是不错的，使用门槛较低，可用性也还行，值得一试。</p><p>ZeroTier的改进是管理虚拟网络是独立于客户端的，可以完全通过网页完成。安装好之后，所有客户端都加入同一个网络id，则如同连入同一个路由器，处于同一个局域网。那么互相访问就跟在局域网一样，在外连接群晖或者其他设备就跟在家连接一样了，只需要通过ZeroTier网络里的IP连接即可。</p>]]></content>
      
      
      <categories>
          
          <category> 网络相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>了解VMware Workstation的三种网络模式（桥接、NAT、Host-only）</title>
      <link href="/post/3afe2615.html"/>
      <url>/post/3afe2615.html</url>
      
        <content type="html"><![CDATA[<p>   在使用虚拟机软件的时候，很多初学者都会遇到很多问题，而vmware的网络连接问题是大家遇到最多问题之一。在学习交流群里面，几乎每天都会有同学问到这些问题，写这篇详解也是因为群里童鞋网络出故障，然后在帮他解决的过程中，对自己的理解也做一个总结。接下来，我们就一起来探讨一下关于VMWare Workstation网络连接的三种模式。</p><h2 id="VMWare-Workstation安装后三种网络模式"><a href="#VMWare-Workstation安装后三种网络模式" class="headerlink" title="VMWare Workstation安装后三种网络模式"></a>VMWare Workstation安装后三种网络模式</h2><p>vmware为我们提供了三种网络工作模式，它们分别是：Bridged（桥接模式）、NAT（网络地址转换模式）、Host-Only（仅主机模式）。</p><p>当安装好后，的“虚拟网络编辑器”中也存在三种模式，分别对应：桥接-VMnet0、Host-only-VMnet1、NAT-VMnet8。</p><p>打开虚拟机，在“编辑”-&gt;”虚拟网络编辑器”看到</p><p>请忽略截图中的自定义VMnet2，这是我后来添加上去的。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%201.png" alt="图片"></p><p>VMnet0：用于桥接模式下的虚拟交换机  </p><p>VMnet8：用于NAT模式下的虚拟交换机  </p><p>VMnet1：用于Host-Only模式下的虚拟交换机</p><p>同时在本机网络连接里面也将多两个网卡，分别为VMnet1是虚拟机Host-only模式的网络接口，VMnet8是NAT模式的网络接口</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%202.png" alt="图片"></p><p>查看对应模式下主机的ip</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%203.png" alt="图片"></p><h2 id="虚拟机中三种网络模式选择"><a href="#虚拟机中三种网络模式选择" class="headerlink" title="虚拟机中三种网络模式选择"></a>虚拟机中三种网络模式选择</h2><p>选择虚拟机后，单击“虚拟机设置”，然后在“硬件”选项卡中选择“网络适配器”，在左边“网络连接”中有网络模式选择，选择后将确定该虚拟机使用的网络模式</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%204.png" alt="图片"></p><p>三种网络模式区别</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%205.png" alt="图片"></p><p>1. Bridged(桥接模式)</p><p>在桥接模式下，VMware操作系统就像局域网中的一个独立的主机，可以访问局域网内任何一台机器。</p><p>设置桥接模式虚拟机方式：设置ipv4的ip (与本机设置一样)</p><table><tbody><tr><td><br></td><td><p><span>本机</span></p></td><td><p><span>虚拟机系统</span></p></td><td><p><span>备注</span></p></td></tr><tr><td><p><span>IP</span>地址</p></td><td><p><span>192.168.1.x</span></p></td><td><p><span>192.168.1.x</span></p></td><td><p>与本机同网段，<span>X</span>不能相同即可</p></td></tr><tr><td><p>默认网关</p></td><td><p><span>192.168.1.1</span></p></td><td><p><span>192.168.1.1</span></p></td><td><p>与本机相同</p></td></tr><tr><td><p>子网掩码</p></td><td><p><span>255.255.255.0</span></p></td><td><p><span>255.255.255.0</span></p></td><td><p>与本机相同</p></td></tr><tr><td><p><span>DNS</span></p></td><td><p><span>114.114.114.114</span></p></td><td><p><span>114.114.114.114</span></p></td><td><p>与本机相同</p></td></tr></tbody></table><p>该模式作用：利用VMware在局域网内新建一个虚拟服务器，无障碍和本机及所在局域网的其他主机器进行通信，为局域网用户提供网络服务，就应该选择桥接模式</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%206.png" alt="图片"></p><p>接下来，我们就来实际操作，如何设置桥接模式。</p><p>首先，安装完系统之后，在开启系统之前，点击“编辑虚拟机设置”来设置网卡模式。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%207.png" alt="图片"></p><p>点击“网络适配器”，选择“桥接模式”，然后“确定”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%208.png" alt="图片"></p><p>在进入系统之前，我们先确认一下主机的ip地址、网关、DNS等信息。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%209.png" alt="图片"></p><p>然后，进入系统编辑网卡配置文件，命令为vi /etc/sysconfig/network-scripts/ifcfg-eth0  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2010.png" alt="图片"></p><p>添加内容如下：</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2011.png" alt="图片"></p><p>各参数意义如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt;&lt;span&gt;DEVICE&lt;/span&gt;是网卡名称&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>还有一些几个参数一般情况下不用配置：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span&gt;BROADCAST是广播地址&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>在以上参数中IPADDR要跟主机IP在同一个网段，GATEWAY默认网关要跟主机一致。</p><p>编辑完成，保存退出，然后重启虚拟机网卡，使用ping命令ping外网ip，测试能否联网。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2012.png" alt="图片"></p><p>能ping通外网ip，证明桥接模式设置成功。</p><p>那主机与虚拟机之间的通信是否正常呢？我们就用远程工具来测试一下。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2013.png" alt="图片"></p><p>主机与虚拟机通信正常。</p><p>2. NAT(网络地址转换模式)</p><p>NAT模式：是让虚拟系统借助NAT(网络地址转换)功能，通过宿主机器所在的网络来访问公网。也就是说，使用NAT模式可以实现在虚拟系统里访问互联网。</p><p>NAT模式下的虚拟系统的TCP/IP配置信息是由VMnet8(NAT)虚拟网络的DHCP服务器提供的，无法进行手工修改，因此虚拟系统无法和本机局域网中的其他真实主机进行。</p><p>使用NAT模式时，虚拟机中要设置固定IP，必须先对VMnet8的网络IP及网关进行设置，设置位置在VMware中的“虚拟网络编辑器”，对VMnet8进行中网络IP及网关进行设置。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2014.png" alt="图片"></p><p>这里请特别注意，虚拟机的网关是NAT地址，也就是192.168.210.2，</p><p>而VMnet8的地址是192.168.210.1，也就是说NAT模式的上层出口IP是VMnet8，而NAT模式下的虚拟机只知道自己的网关地址192.168.210.2  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2015.png" alt="图片"></p><p>设置NAT模式虚拟机方式：设置ipv4的ip (与VMnet8设置一样)</p><table><tbody><tr><td><br></td><td><p><span>VMnet8</span></p></td><td><p><span>虚拟机系统</span></p></td><td><p><span>备注</span></p></td></tr><tr><td><p><span>IP</span>地址</p></td><td><p><span>192.168.210.0</span></p></td><td><p><span>192.168.210.x</span></p></td><td><p>与<span>VMnet8</span>同网段，<span>X</span>不能相同</p></td></tr><tr><td><p>默认网关</p></td><td><p><span>192.168.210.2</span></p></td><td><p><span>192.168.210.2</span></p></td><td><p>与<span>VMnet8</span>相同</p></td></tr><tr><td><p>子网掩码</p></td><td><p><span>255.255.255.0</span></p></td><td><p><span>255.255.255.0</span></p></td><td><p>与<span>VMnet8</span>相同</p></td></tr><tr><td><p><span>DNS</span></p></td><td><p><span>114.114.114.114</span></p></td><td><p><span>114.114.114.114</span></p></td><td><p>与本机相同</p></td></tr></tbody></table><p>如果不设置固定IP，采用NAT模式最大的优势是虚拟机系统接入互联网非常简单，不需要进行任何其他的配置，只需要宿主机器能访问互联网即可</p><p>该模式作用：利用VMware安装一个新的虚拟系统，在虚拟系统中不用配置网络，就直接访问互联网，局域网中的IP地址端口不够时，可将NAT当作路由器使用，虚拟机分配新的网段，这时建议采用NAT模式。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2016.png" alt="图片"></p><p>将虚拟机的网络连接模式修改成NAT模式，点击“编辑虚拟机设置”。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2017.png" alt="图片"></p><p>点击“网络适配器”，选择“NAT模式”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2018.png" alt="图片"></p><p>然后开机启动系统，编辑网卡配置文件，命令为vi /etc/sysconfig/network-scripts/ifcfg-eth0</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2019.png" alt="图片"></p><p>具体配置如下：</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2020.png" alt="图片"></p><p>编辑完成，保存退出，然后重启虚拟机网卡，动态获取ip地址，使用ping命令ping外网ip，测试能否联网。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2021.png" alt="图片"></p><p>之前，我们说过VMware Network Adapter VMnet8虚拟网卡的作用，那我们现在就来测试一下。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2022.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2023.png" alt="图片"></p><p>如此看来，虚拟机能联通外网，确实不是通过VMware Network Adapter VMnet8虚拟网卡，那么为什么要有这块虚拟网卡呢？</p><p>之前我们就说VMware Network Adapter VMnet8的作用是主机与虚拟机之间的通信，接下来，我们就用远程连接工具来测试一下。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2024.png" alt="图片"></p><p>然后，将VMware Network Adapter VMnet8启用之后，发现远程工具可以连接上虚拟机了。</p><p>3. Host-only(主机模式)</p><p>某些特殊的网络调试环境中，要求将真实环境和虚拟环境隔离开，所有的虚拟系统是可以相互通信，但虚拟系统和真实的网络是被隔离开的，通过主机真实的网卡进行外网的访问虚拟系统的TCP/IP配置信息，都是由VMnet1(Host-only)虚拟网络的DHCP服务器来动态分配的。</p><p>使用Host-only模式时，虚拟机中要设置固定IP，必须先对VMnet1的网络IP及网关进行设置，设置位置在VMware中的“虚拟网络编辑器”，对VMnet1进行中网络IP及网关进行设置</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2025.png" alt="图片"></p><p>仅主机模式下对应的虚拟网卡为VMnet1，此时需要到主机的适配器中找到该虚拟网卡，在ipv4中配置其ip，由于网段为192.168.174.0，所以网关应为192.168.174.1，该虚拟网卡相当于主机和虚拟机的桥梁，配置其ip可以使得两者联通</p><p>设置Host-only模式虚拟机方式：设置ipv4的ip (与VMnet1设置一样)</p><table><tbody><tr><td><br></td><td><p><span>VMnet1</span></p></td><td><p><span>虚拟机系统</span></p></td><td><p><span>备注</span></p></td></tr><tr><td><p><span>IP</span>地址</p></td><td><p><span>192.168.200.0</span></p></td><td><p><span>192.168.200.x</span></p></td><td><p>与<span>VMnet1</span>同网段，<span>X</span>不能相同</p></td></tr><tr><td><p>默认网关</p></td><td><p><span>192.168.200.1</span></p></td><td><p><span>192.168.200.1</span></p></td><td><p>与<span>VMnet1</span>相同</p></td></tr><tr><td><p>子网掩码</p></td><td><p><span>255.255.255.0</span></p></td><td><p><span>255.255.255.0</span></p></td><td><p>与<span>VMnet1</span>相同</p></td></tr><tr><td><p><span>DNS</span></p></td><td><p><span>114.114.114.114</span></p></td><td><p><span>&nbsp;8.8.8.8&nbsp;<br></span></p></td><td><p>与本机相同</p></td></tr></tbody></table><p>该模式作用：利用VMware创建一个与本机网络相隔离的虚拟系统，进行某些特殊的网络调试工作，即只能本机访问虚拟机，虚拟机不能同外网，可以选择Host-only模式。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2026.png" alt="图片"></p><p>首先设置“虚拟网络编辑器”，可以设置DHCP的起始范围。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2027.png" alt="图片"></p><p>设置虚拟机为Host-Only模式。  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2028.png" alt="图片"></p><p>开机启动系统，然后设置网卡文件。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2029.png" alt="图片"></p><p>保存退出，然后重启网卡，利用远程工具测试能否与主机通信。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2030.png" alt="图片"></p><p>主机与虚拟机之间可以通信，现在设置虚拟机联通外网。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2031.png" alt="图片"></p><p>我们可以看到上图有一个提示，强制将VMware Network Adapter VMnet1的ip设置成192.168.137.1，那么接下来，我们就要将虚拟机的DHCP的子网和起始地址进行修改，点击“虚拟网络编辑器”</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2032.png" alt="图片"></p><p>重新配置网卡，将VMware Network Adapter VMnet1虚拟网卡作为虚拟机的路由。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2033.png" alt="图片"></p><p>重启网卡，然后通过 远程工具测试能否联通外网以及与主机通信。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/Workstation%20Network%20mode/Workstation%20Network%20mode%2034.png" alt="图片"></p><p>测试结果证明可以使得虚拟机连接外网。</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> Workstation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不参加VMWare的培训，如何获取VCP证书</title>
      <link href="/post/61443.html"/>
      <url>/post/61443.html</url>
      
        <content type="html"><![CDATA[<p>  VMware的认证VCP培训可不便宜哦，一门固定价格12800，培训5天，然后参加考试，通过以后即可获取相应证书。对于虚拟从业者来说VMware的VCP不是必需品，但是加分项。如果公司报销，学一下系统性的知识挺好的。但是对于这个价格来说，很多自费工程师都望而却步，摸摸自己瘦巴巴的钱包，实在无法下手。</p><p>  <code>那么有没有其他花最少的钱，拿最多的证的路径呢？</code></p><p>首先，说说有哪些前提条件：</p><p>因为VMWare的考试都是英语，所以有一定的英文基础是最好的。</p><p>有网络基础，对VMware网络、桌面、数据中心虚拟化熟悉的人且要有可以支付美金的VISA信用卡。<code>没有也没关系，一般考试中心可以帮忙代付。</code></p><p>根据VMWare官方说明，如果想要不经过培训直接参加VCP的考试，你必须持有CCNA，CCNP，或者CCIE证书，并保证这些证书是在有效期内。</p><p>  <code>没有 CCNA？ 考一个吧^_^</code></p><p>花几天时间看CCNA考试资料和考试范围，如果你有网络基础一看就会，如果你英文好，看这个得心应手。在各大论坛找找题库，做几次练习就可以约考试了</p><p>通过VCP-NV的考试后，你才可以参加VMWare的其他科目考试。</p><p>在VMWare网站注册一个账号并登录以下链接</p><p><a href="https://www.vmware.com/education-services/certification/vcp-nv-nsxt.html">https://www.vmware.com/education-services/certification/vcp-nv-nsxt.html</a></p><p>  选择VCP-NV , 在<code>Certification Path if you hold</code> 里选 <code>a Cisco Certification</code></p><p>在第二步骤，提交你的Cisco证书，等待VMWare审核，审核通过后，即可参加VCP-NV的考试。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCP/VCP1.png" alt="输入图片说明"><br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCP/VCP2.png" alt="输入图片说明"></p><p> 接下来看NSX-T 数据中心虚拟化和云桌面horizon的资料和考试范围，你如果熟悉这些产品，再者英文好，那么看这些资料就得心应手。报名VCP-NV考试，用VISA信用卡200美元。头天报名只能选择隔天早上考试，早上考完，下午五点拿证。下证效率很高<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCP/VCP3.png" alt="输入图片说明"></p><p>考试成绩扫描歪了图片</p><p>再考VCP-DCV，总共400美元，两张证书到手<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCP/VCP4.png" alt="输入图片说明"></p><p>如果你时间和精力，可以多考几个VMWare证书，找老板报销图片图片</p><p><code>Exam的历史记录</code><br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCP/VCP5.png" alt="输入图片说明"><br>我比较懒花了1个多月时间才考2证图片</p><p><code>证书展示：</code><br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCP/VCP6.png" alt="输入图片说明"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCP/VCP7.png" alt="输入图片说明"></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> vSphere </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在VMWare ESXi中网络类型为什么要从E1000调整为VMXNET3</title>
      <link href="/post/76e0150d.html"/>
      <url>/post/76e0150d.html</url>
      
        <content type="html"><![CDATA[<pre><code>在我们配置ESXi的时候，虚拟机的网络类型通常有三种模式，分别为E1000，E1000e，和VMNET3。 那么这三种模式有什么区别呢？  </code></pre><p>用户为什么要从E1000调整为VMXNET3，理由如下：</p><ul><li><p>E1000是千兆网路卡，而VMXNET3是万兆网路卡；</p></li><li><p>E1000的性能相对较低，而VMXNET3的性能相对较高；</p></li><li><p>VMXNET3支持TCP/IP Offload Engine，E1000不支持；</p></li><li><p>VMXNET3可以直接和vmkernel通讯，执行内部数据处理；</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%201.png" alt="图片"></p><p>例如。VMXNET3 将显示带宽为 10 GBps。但是，实际带宽将取决于您的上行链路速度。物理 CentOS 或 Windows 安装可能将其显示为 40 GBps，但不是 VM。您将必须执行带宽测试，以查看实际获得的带宽。</p><p>通过VMXNET3 的网络性能与 E1000E 和 E1000 相比较。本文解释了虚拟网络适配器之间的区别，第 2 部分将演示通过选择半虚拟化适配器可以获得多少网络性能。</p><p>VMware管理员可以使用几个不同的虚拟网络适配器来附加到虚拟机。虚拟适配器属于以下两个组之一：</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%202.png" alt="图片"></p><p><strong>模拟</strong>：</p><p>这些是虚拟硬件，可以模拟实际的现有物理网络适配器。（请注意，物理ESXi主机中的物理网卡是完全无关的。）VMkernel将向来宾操作系统提供某些内容，看起来与某些特定的实际硬件完全相同，并且来宾可以通过即插即用来检测它们并使用本机设备驱动程序。</p><p>仿真设备的示例包括：</p><p><strong>E1000</strong> –将模拟1 Gbit的Intel 82545EM卡，自Windows Server 2003生成以来，适用于大多数操作系统。该卡是创建几乎所有虚拟机时的默认设置，并且被广泛使用。</p><p><strong>E1000e</strong> –模拟更新的真实网络适配器1 Gbit Intel 82574，适用于Windows 2012及更高版本。E1000E需要VM硬件版本8或更高版本。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%203.png" alt="图片"></p><p>上面在带有模拟E1000适配器的Windows 2008 R2中，正在使用虚拟操作系统设备驱动程序。</p><p>模拟网络适配器的积极方面是它们“开箱即用”，不需要VMware的外部代码。由于E1000设备已在BIOS启动时可用，因此它甚至可以用于（如果需要）通过PXE安装虚拟操作系统。</p><p>不利的一面是，使用默认的仿真适配器时，从虚拟操作系统发送或接收的每个帧都需要额外的工作（每秒可能成千上万个）。</p><p>VMkernel必须“实时”模拟特定Intel 82545EM或82574卡的确切行为，这将花费时间和CPU周期。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%204.png" alt="图片"></p><p><strong>半虚拟化：</strong></p><p>虚拟网络适配器的另一种类型是“半虚拟化”。最近的一个称为<strong>VMXNET3</strong>。</p><p>半虚拟化网卡不作为物理NIC存在，而是完全由VMware“组成”的设备。对于虚拟操作系统，这将意味着它通常在OS安装阶段仅感觉到未知设备位于（虚拟）主板上的PCI插槽中，但没有驱动程序可以实际使用它。</p><p>（注意：某些Linux发行版甚至预安装了VMXNET3驱动程序。）</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%205.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%206.png" alt="图片"></p><p>对于Windows Server，通常通过安装VMware Tools来提供设备驱动程序时，来宾操作系统会将其视为来自某些网卡制造商称为“ VMware”的真实NIC，并将其用作普通网络适配器。除了周围的其他NIC之外，没有其他理由相信这是NIC。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%207.png" alt="图片"></p><p>对于虚拟操作系统，<strong>VMXNET3</strong>卡看起来像10 Gbit的物理设备。</p><p>注意：还有两个过时的半虚拟化适配器，称为VMXNET和VMXNET2（有时称为“增强型VMXNET”），但是，只要虚拟机至少具有硬件版本7，则应仅使用VMXNET3适配器。</p><p>由于带有VMXNET3卡的VMware甚至在VM内部拥有更多的网络组件，因此可以实现许多性能增强。使用仿真的E1000 / E1000E，内核必须模拟现有的来宾系统适配器的确切行为，但是使用VMXNET3，它可以创建经过优化以在虚拟环境中使用的“完美”虚拟适配器。</p><p>下面，我们将测试当今两个最常见的Windows操作系统：<strong>Windows 2008 R2</strong>和<strong>Windows 2012 R2</strong>的网络吞吐量，并查看<strong>VMXNET3</strong>与<strong>E1000</strong>和<strong>E1000E</strong>的性能。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%208.png" alt="图片"></p><p>为了生成大量网络流量，我使用了在两个虚拟机上运行的iperf工具，一个虚拟机为“客户端”，另一个为“服务器”。我发现以下iperf设置为Windows Server上的网络吞吐量测试生成了最佳组合：</p><p>服务器：<strong>iperf -s -w 64k -l 128k</strong></p><p>客户端：<strong>iperf -c &lt;服务器IP &gt; -P 16 -w 64k -l 128k -t 30</strong></p><p>该测试是在HP Proliant Bl460c Gen8上完成的，虚拟机在同一物理主机上运行，无论物理主机/刀片之间的物理网络连接如何，都可以查看网络性能。</p><p>E1000，E1000E和VMXNET3上的所有设置均为默认设置。有关VMXNET3卡设置可能进行的调整的更多信息，将在后面的文章中介绍。</p><p>（当然，请注意，以下结果仅是对一种特定硬件和ESXi配置进行测试所得的观察结果，绝不是“科学”研究。）</p><p><strong>测试1：使用默认E1000适配器的Windows 2008 R2</strong></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%209.png" alt="图片"></p><p>两台Windows 2008 R2虚拟机，一台作为iperf服务器，另一台作为客户端，测试运行时间为30秒。</p><p>如任务管理器视图中所述，1 Gbit链接速度已最大化。一个有点有趣的事实是，即使使用仿真的E1000适配器，也可以使用比1 Gbit链路“应有”更多的使用量。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%2010.png" alt="图片"></p><p>从iperf客户端输出中，我们可以看到，使用默认的E1000虚拟适配器，我们的总吞吐量为每秒2.65 Gbit 。</p><p>测试2：带有VMXNET3适配器的Windows 2008 R2</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%2011.png" alt="图片"></p><p>任务管理器视图报告Iperf客户端VM中10 Gbit链接的利用率约为39％。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%2012.png" alt="图片"></p><p>在执行测试的过程中，iperf输出显示VMXNET3的总吞吐量为4.47 Gbit /秒。</p><p>与Windows 2008 R2上的E1000卡相比，VMXNET3适配器的网络吞吐量提高了近70％。</p><p>测试3：带有E1000E适配器的Windows 2012 R2</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%2013.png" alt="图片"></p><p>该E1000E是一个较新的，更加“增强”的E1000版本。对于来宾操作系统，它看起来像物理适配器Intel 82547网络接口卡。</p><p>然而，即使它是一个较新的适配器，它没有实际提供_更低_比E1000适配器的吞吐量。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%2014.png" alt="图片"></p><p>两个运行Windows 2012 R2的虚拟机，其中iperf工具作为客户端和服务器运行。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%2015.png" alt="图片"></p><p>E1000E的速度为1.88 Gbit / s，大大低于Windows 2008 R2上原始E1000的2.65 Gbit / s。</p><p>测试4：带有VMXNET3适配器的Windows 2012 R2</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%2016.png" alt="图片"></p><p>现在运行VMXNET3适配器的两个Windows 2012 R2虚拟机获得以下iperf结果：</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%2017.png" alt="图片"></p><p>吞吐量为4.66 Gbit / sec，非常接近Windows 2008 R2上的VMXNET3的结果，但比新的E1000E高出近150％。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%20Network%20type/ESXi%20Network%20type%2018.png" alt="图片"></p><p>总之，与E1000和E1000E相比，VMXNET3适配器可提供更高的网络吞吐性能。另外，至少在此测试设置中，较新的E1000E的性能实际上要比较旧的E1000差。</p><p>该测试是在Windows Server虚拟机上完成的，VMXNET3适配器的最高吞吐量约为4.6 Gbit / sec，这可能是TCP实施受到限制的结果。具有其他TCP堆栈的其他操作系统可能会达到更高的数量。还应注意的是，这些测试仅用于网络吞吐量，但是当然还有其他因素，可能会在后面的文章中进一步讨论。</p><h2 id="VMWare官方KB"><a href="#VMWare官方KB" class="headerlink" title="VMWare官方KB"></a><strong>VMWare官方KB</strong></h2><h2 id="为虚拟机选择网络适配器-1001805"><a href="#为虚拟机选择网络适配器-1001805" class="headerlink" title="为虚拟机选择网络适配器 (1001805)"></a>为虚拟机选择网络适配器 (1001805)</h2><p><a href="https://kb.vmware.com/s/article/1001805?lang=zh_CN">https://kb.vmware.com/s/article/1001805?lang=zh_CN</a></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> vSphere </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Server 2019 搭建DNS服务器</title>
      <link href="/post/210801.html"/>
      <url>/post/210801.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%201.png" alt="图片">  </p><p>DNS服务器需要固定IP，这里的IP为192.168.64.238/24</p><h2 id="一、基础安装"><a href="#一、基础安装" class="headerlink" title="一、基础安装"></a>一、基础安装</h2><p>打开服务器管理器-管理-添加角色和功能</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%202.png" alt="图片"></p><p>选择基于角色或基于功能的安装</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%203.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%204.png" alt="图片"></p><p>勾选DNS服务器</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%205.png" alt="图片"></p><p>在弹出的框里，点击添加功能</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%206.png" alt="图片"></p><p>一直下一步，到下图后，不用勾选重启，直接点安装</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%207.png" alt="图片"></p><h2 id="二、配置DNS服务器"><a href="#二、配置DNS服务器" class="headerlink" title="二、配置DNS服务器"></a>二、配置DNS服务器</h2><p>点击服务器管理器左边的【DNS】，选中服务器，右击，选择DNS管理器</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%208.png" alt="图片"></p><p>在DNS管理器中，选择服务器，右击，选择配置DNS服务器</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%209.png" alt="图片"></p><p>选择创建正向和反向查找区域</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2010.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2011.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2012.png" alt="图片"></p><p>创建一个区域名称，自定</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2013.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2014.png" alt="图片"></p><p>这里没有加域，所以选择不允许动态更新，如果加了域就选择允许安全的动态更新</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2015.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2016.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2017.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2018.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2019.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2020.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2021.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2022.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2023.png" alt="图片"></p><p>重新打开DNS服务器，可以看到配置完成</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2024.png" alt="图片"></p><p>选中一个区域，找到名称服务器，右击属性</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2025.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2026.png" alt="图片"></p><p>在IP地址处，添加本机IP地址</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2027.png" alt="图片"></p><p>最后应用即可</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2028.png" alt="图片"></p><h2 id="三、创建A记录，做测试"><a href="#三、创建A记录，做测试" class="headerlink" title="三、创建A记录，做测试"></a>三、创建A记录，做测试</h2><p>在一个区域内，空白地方，右击，选择新建主机A</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2029.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2030.png" alt="图片"></p><p>添加成功</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2031.png" alt="图片"></p><p>在一个服务器上，做测试，配置好刚才的DNS服务器地址</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2032.png" alt="图片"></p><p>打开cmd，使用命令行，输入nslookup <FQDN>可以看到下面找到了IP</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2033.png" alt="图片"></p><p>使用命令nslookup -qt=ptr <ip>可以解析到vcenter.dns.test</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/WIN-DNS%20Setup/WIN-DNS%20Setup%2034.png" alt="图片"></p><p>现在配置成功</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Server </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vCenter7（ESXi 7.0）VCSA的安装教程</title>
      <link href="/post/35c92e1a.html"/>
      <url>/post/35c92e1a.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%201.png" alt="图片"></p><h2 id="1、下载VCSA-iso"><a href="#1、下载VCSA-iso" class="headerlink" title="1、下载VCSA iso"></a>1、下载VCSA iso</h2><p>安装镜像，请公众号后台回复 <strong>ESXi7.0</strong> 获取下载链接</p><h2 id="2、创建DNS记录。"><a href="#2、创建DNS记录。" class="headerlink" title="2、创建DNS记录。"></a>2、创建DNS记录。</h2><p>我这里计划vc地址为 venter.dns.test 192.168.64.8</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%202.png" alt="图片"></p><p>如果不会，请见本公众号文章《Windows Server 2019 搭建DNS服务器》</p><h2 id="3、使用文件浏览器打开VCSA或者加载到虚拟光驱"><a href="#3、使用文件浏览器打开VCSA或者加载到虚拟光驱" class="headerlink" title="3、使用文件浏览器打开VCSA或者加载到虚拟光驱"></a>3、使用文件浏览器打开VCSA或者加载到虚拟光驱</h2><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%203.png" alt="图片"></p><p>![图片]<a href="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%204.png">https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%204.png</a>)</p><p>打开ui installer</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%205.png" alt="图片"></p><p>双击即开始安装</p><p>点击右上角语言，切换成中文</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%206.png" alt="图片"></p><p>选择安装</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%207.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%208.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%209.png" alt="图片"></p><p>输入ESXI的地址</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2010.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2011.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2012.png" alt="图片"></p><p>根据业务大小，选择</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2013.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2014.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2015.png" alt="图片"></p><p>确认无误之后，点击完成</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2016.png" alt="图片"></p><p>等待部署</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2017.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2018.png" alt="图片"></p><p>出现了报错，不过没关系，先下载安装程序日志，看一下，也可以去 5480进行部署</p><p>在日志中，发现域名无法解析，所以没法安装。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2019.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2020.png" alt="图片"></p><p>可能是vc的地址网络不通，突然想到，网络选择错误，不应该选默认的vm network</p><p>打开esxi web页面，找到vc虚拟机，将其关机，然后把对应的网卡改一下</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2021.png" alt="图片"></p><p>网路通了</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2022.png" alt="图片"></p><p>去5480 进行下一步</p><p>打开vc的地址：5480 我这里是<a href="https://vcenter.dns.test">https://vcenter.dns.test</a></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2023.png" alt="图片"></p><p>输入刚才设置的密码</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2024.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2025.png" alt="图片"></p><p>这里出现刚才设置的网络信息，建议配置好ntp服务器和开启ssh，以便时间同步和维护</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2026.png" alt="图片"></p><p>正在保存</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2027.png" alt="图片"></p><p>创建SSO域，建议使用默认的vsphere.local</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2028.png" alt="图片"></p><p>建议加入CEIP，功能多点。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2029.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2030.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2031.png" alt="图片"></p><p>正在安装</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2032.png" alt="图片"></p><p>出现了问题，说读取进度失败，没事，点击重试。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2033.png" alt="图片"></p><p>点击重试之后，又出来了</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2034.png" alt="图片"></p><p>过了许久，安装完成</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2035.png" alt="图片"></p><p>vCenter能够正常访问</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/VCSA7.0%20Setup/VCSA7.0%20Setup%2036.png" alt="图片"></p><p>注意：</p><p>vc需要用域名登录，如果没有配置本机的dns服务器，需要指定本机host文件。</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机VMware vSphere ESXi 7.0安装配置详细教程(附下载)</title>
      <link href="/post/210626.html"/>
      <url>/post/210626.html</url>
      
        <content type="html"><![CDATA[<p><strong>VMware vSphere</strong>是一套业内最完整最强健的虚拟化平台。创建资源池来管理计算、 网络和存储容量与易用性，并提供最高水平的服务，每个应用程序工作负载以最低的总成本。VSphere 取决于世界上要求最苛刻的数据中心虚拟化您业务关键型应用程序为空前的灵活性和可靠性。</p><p><strong>说明：</strong></p><p>2020年3月10日，VMware 发布了vSphere 7，无论是安装ESXi 7.0，还是vCenter Server Appliance，与vSphere 6.7都非常相似或者说相同，用安装vSphere 6.7的方法安装7.0就行。无论是在Workstation的虚拟机安装ESXi，还是使用物理机安装ESXi，都很容易。但ESXi已经放弃了对一些网卡的支持，如果以前在ESXi 6.0、6.5、6.7中能正常使用的网卡，在7.0中可能已经不再受到支持。</p><p><strong>安装方法</strong></p><p>1、首先下载VMware-VMvisor-Installer-7.0.0-14896552.x86_64.iso文件，用虚拟光驱挂载或者解压运行。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%201.jpg" alt="图片"></p><p>2、进入系统加载安装文件。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%202.jpg" alt="图片"></p><p>3、加载VMkernel文件。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%203.jpg" alt="图片"></p><p>4、加载文件完成，按【Enter】键开始安装VMware ESXi 7.0。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%204.jpg" alt="图片"></p><p>5、系统出现“End User License Agreement（EULA）”界面，也就是最终用户许可协议，按【F11】键接受“Accept and Continue”，接受许可协议。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%205.jpg" alt="图片"></p><p>6、系统提示选择安装VMware ESXi 使用的存储，ESXi支持U盘以及SD卡安装。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%206.jpg" alt="图片"></p><p>7、原服务器安装有ESXi 6.7版本，选择全新安装。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%207.jpg" alt="图片"></p><p>8、提示选择键盘类型，选择“US Default”，默认美国标准，按【Enter】键继续。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%208.jpg1" alt="图片"></p><p>9、系统提示配置root用户的密码，根据实际情况输入，按【Enter】键继续。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%209.jpg" alt="图片"></p><p>10、系统提示将安装在刚才选择的存储，按【F11】键开始安装。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%2010.jpg" alt="图片"></p><p>11、如果使用INTEL XEON 56XX CPU会出现一些特性不支持警告提示。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%2011.jpg" alt="图片"></p><p>12、开始安装ESXi 7.0。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%2012.jpg" alt="图片"></p><p>13、安装的时间取决于服务器的性能，等待一段时间后即可完成VMware ESXi 7.0的安装，按【Enter】键重启服务器。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%2013.jpg" alt="图片"></p><p>14、服务器重启完成后，进入VMware ESXi 7.0正式界面</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%2014.jpg" alt="图片"></p><p>15、按【F2】键输入root用户密码进入主机配置模式。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%2015.jpg" alt="图片"></p><p>16、选择“Configure Management Network”配置管理网络。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%2016.jpg" alt="图片"></p><p>17、选择“IPv4 Configuration”对IP进行配置。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%2017.jpg" alt="图片"></p><p>18、完成主机IP配置。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%2018.jpg" alt="图片"></p><p>19、使用浏览器登录 ESXi 7.0主机。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%2019.jpg" alt="图片"></p><p>20、进入ESXi 7.0主机操作界面，可以进行基本的配置和操作，更多的功能实现需要依靠vCenter Server实现。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/ESXi%207%20Setup/ESXi%207%20Setup%2021.jpg" alt="图片"></p><p><strong>安装镜像后台回复ESXi7.0下载 测试密钥</strong></p><p>VMware vCenter 7.0 Standard<br>104HH-D4343-07879-MV08K-2D2H2<br>410NA-DW28H-H74K1-ZK882-948L4<br>406DK-FWHEH-075K8-XAC06-0JH08</p><p>VMware vSphere ESXi 7.0 Enterprise Plus<br>JJ2WR-25L9P-H71A8-6J20P-C0K3F<br>HN2X0-0DH5M-M78Q1-780HH-CN214<br>JH09A-2YL84-M7EC8-FL0K2-3N2J2</p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
          <category> vSphere </category>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> vSphere </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络设备模拟器之EvE-NG安装配置</title>
      <link href="/post/2103191.html"/>
      <url>/post/2103191.html</url>
      
        <content type="html"><![CDATA[<ul><li><h3 id="EVE-NG社区版安装-最新版v2-0-3-112-11-January-2021"><a href="#EVE-NG社区版安装-最新版v2-0-3-112-11-January-2021" class="headerlink" title="EVE-NG社区版安装 最新版v2.0.3-112 (11 January 2021)"></a><strong>EVE-NG社区版安装 最新版v2.0.3-112 (11 January 2021)</strong></h3></li></ul><h5 id="硬件配置要求"><a href="#硬件配置要求" class="headerlink" title="硬件配置要求"></a><strong>硬件配置要求</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">内存 &amp;gt;= 8g&lt;br&gt;硬盘 &amp;gt;= 512g</span><br></pre></td></tr></table></figure><h5 id="一、下载EVE镜像包ova文件-EVE-NG官网：http-www-eve-ng-net"><a href="#一、下载EVE镜像包ova文件-EVE-NG官网：http-www-eve-ng-net" class="headerlink" title="一、下载EVE镜像包ova文件 (EVE-NG官网：http://www.eve-ng.net/)"></a><strong>一、下载EVE镜像包ova文件</strong> (EVE-NG官网：<a href="http://www.eve-ng.net/">http://www.eve-ng.net/</a>)</h5><p>目前EVE-NG提供两种安装方式：</p><p>1 ISO安装盘</p><p>2 OVA虚拟机模版</p><p>后台可回复EVE-NG安装资源获取百度云盘，天翼云等下载链接</p><p>注意：EVE-NG内嵌KVM，KVM（Kernel-based Virtual Machine）是基于内核的虚拟机，可以把它理解为和VMware Workstaion/Virtual Box等虚拟机系统或vSphere ESXi虚拟机系统。所以本文先用Workstaion装EVE-NG，再用EVE-NG中的KVM虚拟F5、Palo Alto等虚拟机，这样的方案属于嵌套虚拟化或两层虚拟化。</p><h5 id="二、导入虚拟机"><a href="#二、导入虚拟机" class="headerlink" title="二、导入虚拟机"></a><strong>二、导入虚拟机</strong></h5><h5 id="建议使用vmvare导入eve-ng（以下内容都是基于vmvare），导入后选择默认配置就可以"><a href="#建议使用vmvare导入eve-ng（以下内容都是基于vmvare），导入后选择默认配置就可以" class="headerlink" title="建议使用vmvare导入eve-ng（以下内容都是基于vmvare），导入后选择默认配置就可以"></a>建议使用vmvare导入eve-ng（以下内容都是基于vmvare），导入后选择默认配置就可以</h5><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%201.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%202.jpg" alt=""></p><h5 id="三、开启虚拟机，账号为root，密码为eve，选择默认配置即可。"><a href="#三、开启虚拟机，账号为root，密码为eve，选择默认配置即可。" class="headerlink" title="三、开启虚拟机，账号为root，密码为eve，选择默认配置即可。"></a><strong>三、开启虚拟机，账号为root，密码为eve，选择默认配置即可。</strong></h5><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%203.jpg" alt=""></p><h6 id="密码可以修改，为了方便不建议修改"><a href="#密码可以修改，为了方便不建议修改" class="headerlink" title="密码可以修改，为了方便不建议修改"></a>密码可以修改，为了方便不建议修改</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%204.jpg" alt=""></p><h6 id="主机名默认"><a href="#主机名默认" class="headerlink" title="主机名默认"></a>主机名默认</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%205.jpg" alt=""></p><h6 id="域名默认"><a href="#域名默认" class="headerlink" title="域名默认"></a>域名默认</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%206.jpg" alt=""></p><h6 id="ip地址默认dhcp即可"><a href="#ip地址默认dhcp即可" class="headerlink" title="ip地址默认dhcp即可"></a>ip地址默认dhcp即可</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%207.jpg" alt=""></p><h6 id="设置ntp服务器，输入pool-ntp-org"><a href="#设置ntp服务器，输入pool-ntp-org" class="headerlink" title="设置ntp服务器，输入pool.ntp.org"></a>设置ntp服务器，输入pool.ntp.org</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%208.jpg" alt=""></p><h6 id="选择连入Internet方式，默认"><a href="#选择连入Internet方式，默认" class="headerlink" title="选择连入Internet方式，默认"></a>选择连入Internet方式，默认</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%209.jpg" alt=""></p><h6 id="配置完成后eve-ng会重启，重启后显示最初的页面说明安装已完成。"><a href="#配置完成后eve-ng会重启，重启后显示最初的页面说明安装已完成。" class="headerlink" title="配置完成后eve-ng会重启，重启后显示最初的页面说明安装已完成。"></a>配置完成后eve-ng会重启，重启后显示最初的页面说明安装已完成。</h6><ul><li><h3 id="EVE-NG-WEB界面登录以及使用"><a href="#EVE-NG-WEB界面登录以及使用" class="headerlink" title="EVE-NG WEB界面登录以及使用"></a><strong>EVE-NG WEB界面登录以及使用</strong></h3></li></ul><ol><li><h5 id="在chrome浏览器输入提示的地址进入登录页面"><a href="#在chrome浏览器输入提示的地址进入登录页面" class="headerlink" title="在chrome浏览器输入提示的地址进入登录页面"></a><strong>在chrome浏览器输入提示的地址进入登录页面</strong></h5></li></ol><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2010.jpg" alt=""></p><ol><li><h5 id="账户admin，密码为eve，初始选择Html5-console（此方式登录设备无需SecureCRT、VNC等软件）"><a href="#账户admin，密码为eve，初始选择Html5-console（此方式登录设备无需SecureCRT、VNC等软件）" class="headerlink" title="账户admin，密码为eve，初始选择Html5 console（此方式登录设备无需SecureCRT、VNC等软件）"></a><strong>账户admin，密码为eve，初始选择Html5 console（此方式登录设备无需SecureCRT、VNC等软件）</strong></h5></li></ol><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2011.jpg" alt=""></p><h4 id="eve主页介绍"><a href="#eve主页介绍" class="headerlink" title="eve主页介绍"></a><strong>eve主页介绍</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2012.jpg" alt=""></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 新建项目文件夹：多个同类型实验的根目录。&lt;br&gt;2. 新建实验：特定用途的网络实验。&lt;br&gt;3. 重命名。&lt;br&gt;4. 移动目录。&lt;br&gt;5. 删除选中的文件夹或者实验。&lt;br&gt;5. 导入导出实验。方便移植lab到其他的eve环境。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;&lt;strong&gt;用户管理可以CRUD操作用户&lt;/strong&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2013.jpg" alt=""></p><h6 id="系统信息主要用于查看当前eve系统信息（主要查看磁盘信息）"><a href="#系统信息主要用于查看当前eve系统信息（主要查看磁盘信息）" class="headerlink" title="系统信息主要用于查看当前eve系统信息（主要查看磁盘信息）"></a><strong>系统信息主要用于查看当前eve系统信息（主要查看磁盘信息）</strong></h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2014.jpg" alt=""></p><ul><li><h3 id="EVE-NG-导入不同组件镜像"><a href="#EVE-NG-导入不同组件镜像" class="headerlink" title="EVE-NG 导入不同组件镜像"></a><strong>EVE-NG 导入不同组件镜像</strong></h3></li></ul><ol><li><h3 id="导入Dynamips镜像（使用较少）"><a href="#导入Dynamips镜像（使用较少）" class="headerlink" title="导入Dynamips镜像（使用较少）"></a><strong>导入Dynamips镜像（使用较少）</strong></h3></li></ol><h5 id="将本地Dynamips镜像通过WinSCP-推荐-或者其他方式导入eve-ng虚拟机-opt-unetlab-addons-dynamips-目录下"><a href="#将本地Dynamips镜像通过WinSCP-推荐-或者其他方式导入eve-ng虚拟机-opt-unetlab-addons-dynamips-目录下" class="headerlink" title="将本地Dynamips镜像通过WinSCP(推荐)或者其他方式导入eve-ng虚拟机/opt/unetlab/addons/dynamips/目录下"></a>将本地Dynamips镜像通过WinSCP(推荐)或者其他方式导入eve-ng虚拟机<code>/opt/unetlab/addons/dynamips/</code>目录下</h5><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2015.jpg" alt=""></p><h5 id="导入后给与读写权限chmod-R-755"><a href="#导入后给与读写权限chmod-R-755" class="headerlink" title="导入后给与读写权限chmod -R 755 *"></a><strong>导入后给与读写权限</strong><code>chmod -R 755 *</code></h5><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2016.jpg" alt=""></p><h5 id="查看镜像是否导入成功"><a href="#查看镜像是否导入成功" class="headerlink" title="查看镜像是否导入成功"></a><strong>查看镜像是否导入成功</strong></h5><h6 id="1-新建lab文件夹test"><a href="#1-新建lab文件夹test" class="headerlink" title="1. 新建lab文件夹test"></a>1. 新建lab文件夹test</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2017.jpg" alt=""></p><h6 id="2-在test文件夹下新建实验进入实验网格界面"><a href="#2-在test文件夹下新建实验进入实验网格界面" class="headerlink" title="2. 在test文件夹下新建实验进入实验网格界面"></a>2. 在test文件夹下新建实验进入实验网格界面</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2018.jpg" alt=""></p><h6 id="3-在lab界面新建网络节点，可以点击-号新增node或者在网格内右键新增node"><a href="#3-在lab界面新建网络节点，可以点击-号新增node或者在网格内右键新增node" class="headerlink" title="3. 在lab界面新建网络节点，可以点击+号新增node或者在网格内右键新增node"></a>3. 在lab界面新建网络节点，可以点击<code>+</code>号新增node或者在网格内右键新增node</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2019.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2020.jpg" alt=""></p><h6 id="4-然后选择镜像，列表显示的是eve-ng官方支持默认支持的镜像（非官方镜像后面说明），灰色表示系统中还没有导入该镜像，字体明亮表示该镜像已导入。"><a href="#4-然后选择镜像，列表显示的是eve-ng官方支持默认支持的镜像（非官方镜像后面说明），灰色表示系统中还没有导入该镜像，字体明亮表示该镜像已导入。" class="headerlink" title="4. 然后选择镜像，列表显示的是eve-ng官方支持默认支持的镜像（非官方镜像后面说明），灰色表示系统中还没有导入该镜像，字体明亮表示该镜像已导入。"></a>4. 然后选择镜像，列表显示的是eve-ng官方支持默认支持的镜像（非官方镜像后面说明），灰色表示系统中还没有导入该镜像，字体明亮表示该镜像已导入。</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2021.jpg" alt=""></p><h6 id="5-选择节点参数，一般默认保存即可"><a href="#5-选择节点参数，一般默认保存即可" class="headerlink" title="5. 选择节点参数，一般默认保存即可"></a>5. 选择节点参数，一般默认保存即可</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2022.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2023.jpg" alt=""></p><h6 id="6-打开节点-虚拟设备，设备从灰色变为明亮，右键选择stop关闭节点。"><a href="#6-打开节点-虚拟设备，设备从灰色变为明亮，右键选择stop关闭节点。" class="headerlink" title="6. 打开节点/虚拟设备，设备从灰色变为明亮，右键选择stop关闭节点。"></a>6. 打开节点/虚拟设备，设备从灰色变为明亮，右键选择stop关闭节点。</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2024.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2025.jpg" alt=""></p><h6 id="7-关闭实验，查看文件夹中的实验"><a href="#7-关闭实验，查看文件夹中的实验" class="headerlink" title="7.关闭实验，查看文件夹中的实验"></a>7.关闭实验，查看文件夹中的实验</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2026.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2027.jpg" alt=""></p><h3 id="2-导入IOL镜像（思科内部使用的镜像，实际使用较少）"><a href="#2-导入IOL镜像（思科内部使用的镜像，实际使用较少）" class="headerlink" title="2. 导入IOL镜像（思科内部使用的镜像，实际使用较少）"></a><strong>2. 导入IOL镜像（思科内部使用的镜像，实际使用较少）</strong></h3><h5 id="将本地IOL镜像导入eve-ng-opt-unetlab-addons-iol-bin目录下，xshell进入该目录，输入python-CiscoIOUKeygen-py-grep-A-1-39-license-39-gt-iourc命令生成iourc文件提供license，然后输入chmod-R-755-命令给与权限即可，查看是否导入成功同上"><a href="#将本地IOL镜像导入eve-ng-opt-unetlab-addons-iol-bin目录下，xshell进入该目录，输入python-CiscoIOUKeygen-py-grep-A-1-39-license-39-gt-iourc命令生成iourc文件提供license，然后输入chmod-R-755-命令给与权限即可，查看是否导入成功同上" class="headerlink" title="将本地IOL镜像导入eve-ng/opt/unetlab/addons/iol/bin目录下，xshell进入该目录，输入python CiscoIOUKeygen.py | grep -A 1 &#39;license&#39; &gt; iourc命令生成iourc文件提供license，然后输入chmod -R 755 *命令给与权限即可，查看是否导入成功同上"></a>将本地IOL镜像导入eve-ng<code>/opt/unetlab/addons/iol/bin</code>目录下，xshell进入该目录，输入<code>python CiscoIOUKeygen.py | grep -A 1 &#39;license&#39; &gt; iourc</code>命令生成iourc文件提供license，然后输入<code>chmod -R 755 *</code>命令给与权限即可，查看是否导入成功同上</h5><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2028.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2028-1.jpg" alt=""></p><h3 id="3-导入qemu镜像（常用）"><a href="#3-导入qemu镜像（常用）" class="headerlink" title="3. 导入qemu镜像（常用）"></a><strong>3. 导入qemu镜像（常用）</strong></h3><h5 id="将本地qemu镜像导入eve-ng-opt-unetlab-addons-qemu目录下（注意导入的是文件夹，文件夹名不要修改，否则找不到模板），"><a href="#将本地qemu镜像导入eve-ng-opt-unetlab-addons-qemu目录下（注意导入的是文件夹，文件夹名不要修改，否则找不到模板），" class="headerlink" title="将本地qemu镜像导入eve-ng/opt/unetlab/addons/qemu目录下（注意导入的是文件夹，文件夹名不要修改，否则找不到模板），"></a>将本地qemu镜像导入eve-ng<code>/opt/unetlab/addons/qemu</code>目录下（注意导入的是文件夹，文件夹名不要修改，否则找不到模板），</h5><h5 id="chmod-R-755-给予读写权限"><a href="#chmod-R-755-给予读写权限" class="headerlink" title="chmod -R 755 *给予读写权限"></a><code>chmod -R 755 *</code>给予读写权限</h5><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2029.jpg" alt=""></p><h3 id="4-导入非官方镜像，即节点列表中没有的镜像"><a href="#4-导入非官方镜像，即节点列表中没有的镜像" class="headerlink" title="4. 导入非官方镜像，即节点列表中没有的镜像"></a><strong>4. 导入非官方镜像，即节点列表中没有的镜像</strong></h3><h3 id="eve-ng的强大就在于可以导入不同产商的镜像-这里以导入h3c路由器举例"><a href="#eve-ng的强大就在于可以导入不同产商的镜像-这里以导入h3c路由器举例" class="headerlink" title="eve-ng的强大就在于可以导入不同产商的镜像,这里以导入h3c路由器举例"></a>eve-ng的强大就在于可以导入不同产商的镜像,这里以导入h3c路由器举例</h3><ul><li><h5 id="准备工作1，下载vim，eve自带的vi不太好用，所以建议下载vim"><a href="#准备工作1，下载vim，eve自带的vi不太好用，所以建议下载vim" class="headerlink" title="准备工作1，下载vim，eve自带的vi不太好用，所以建议下载vim"></a><strong>准备工作1，下载vim，eve自带的vi不太好用，所以建议下载vim</strong></h5></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt&lt;span&gt;-&lt;/span&gt;&lt;span&gt;get&lt;/span&gt; update&lt;br&gt;apt&lt;span&gt;-&lt;/span&gt;&lt;span&gt;get&lt;/span&gt; install vim</span><br></pre></td></tr></table></figure><h5 id="准备工作2，导入自定义图标，从华三官网下载路由器图标改名并上传到eve-ng-opt-unetlab-html-images-icons目录下（该步骤非必要，也可以使用eve系统自带的图标）"><a href="#准备工作2，导入自定义图标，从华三官网下载路由器图标改名并上传到eve-ng-opt-unetlab-html-images-icons目录下（该步骤非必要，也可以使用eve系统自带的图标）" class="headerlink" title="准备工作2，导入自定义图标，从华三官网下载路由器图标改名并上传到eve-ng/opt/unetlab/html/images/icons目录下（该步骤非必要，也可以使用eve系统自带的图标）"></a>准备工作2，导入自定义图标，从华三官网下载路由器图标改名并上传到eve-ng<code>/opt/unetlab/html/images/icons</code>目录下（该步骤非必要，也可以使用eve系统自带的图标）</h5><h5 id="1-导入镜像到qemu目录并改名（改名用于适配模板文件）"><a href="#1-导入镜像到qemu目录并改名（改名用于适配模板文件）" class="headerlink" title="1. 导入镜像到qemu目录并改名（改名用于适配模板文件）"></a><strong>1. 导入镜像到qemu目录并改名（改名用于适配模板文件）</strong></h5><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2030.jpg" alt=""></p><h6 id="注意到文件名中有-，横杠前面为镜像模板文件名，这是官方规定，每个镜像都有适配的模板，eve系统自带了一些官方模板，所有模板存在目录-opt-unetlab-html-templates，但是非官方镜像eve中是没有模板的，这就需要新建模板文件"><a href="#注意到文件名中有-，横杠前面为镜像模板文件名，这是官方规定，每个镜像都有适配的模板，eve系统自带了一些官方模板，所有模板存在目录-opt-unetlab-html-templates，但是非官方镜像eve中是没有模板的，这就需要新建模板文件" class="headerlink" title="注意到文件名中有-，横杠前面为镜像模板文件名，这是官方规定，每个镜像都有适配的模板，eve系统自带了一些官方模板，所有模板存在目录/opt/unetlab/html/templates，但是非官方镜像eve中是没有模板的，这就需要新建模板文件"></a>注意到文件名中有<code>-</code>，横杠前面为镜像模板文件名，这是官方规定，每个镜像都有适配的模板，eve系统自带了一些官方模板，所有模板存在目录<code>/opt/unetlab/html/templates</code>，但是非官方镜像eve中是没有模板的，这就需要新建模板文件</h6><h5 id="2-新建vsr-yml文件"><a href="#2-新建vsr-yml文件" class="headerlink" title="2. 新建vsr.yml文件"></a><strong>2. 新建vsr.yml文件</strong></h5><h6 id="新建模板采用已存在的模板进行修改即可，由于设备底层一般都是linux，采用linux-yml模板作为原始模板比较好，在templates目录下输入cp-linux-yml-vsr-yml复制模板文件-这里的vsr和导入的镜像文件名前缀对应"><a href="#新建模板采用已存在的模板进行修改即可，由于设备底层一般都是linux，采用linux-yml模板作为原始模板比较好，在templates目录下输入cp-linux-yml-vsr-yml复制模板文件-这里的vsr和导入的镜像文件名前缀对应" class="headerlink" title="新建模板采用已存在的模板进行修改即可，由于设备底层一般都是linux，采用linux.yml模板作为原始模板比较好，在templates目录下输入cp linux.yml vsr.yml复制模板文件,这里的vsr和导入的镜像文件名前缀对应"></a>新建模板采用已存在的模板进行修改即可，由于设备底层一般都是linux，采用linux.yml模板作为原始模板比较好，在<code>templates</code>目录下输入<code>cp linux.yml vsr.yml</code>复制模板文件,这里的vsr和导入的镜像文件名前缀对应</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /opt/unetlab/html/templates&lt;br&gt;cp linux.yml vsr.yml</span><br></pre></td></tr></table></figure><h5 id="3-修改vsr-yml文件"><a href="#3-修改vsr-yml文件" class="headerlink" title="3. 修改vsr.yml文件"></a><strong>3. 修改vsr.yml文件</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim vsr.yml</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2031.jpg" alt=""></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">主要修改如图&lt;span&gt;4&lt;/span&gt;个地方&lt;br&gt;&lt;span&gt;1.&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;为模板类型，这里是qemu&lt;br&gt;&lt;span&gt;2.&lt;/span&gt; name为设备节点默认显示名&lt;br&gt;&lt;span&gt;3.&lt;/span&gt; icon设置默认默认图标，我这里选择的已经导入的自定义图标&lt;br&gt;&lt;span&gt;4.&lt;/span&gt; &lt;span&gt;console&lt;/span&gt;选择登录模式，我这里默认采用crt打开该设备，crt就是SecureCRT，如果安装并配置了SecureCRT建议这样设置</span><br></pre></td></tr></table></figure><h5 id="4-修改init-php文件"><a href="#4-修改init-php文件" class="headerlink" title="4. 修改init.php文件"></a><strong>4. 修改init.php文件</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /opt/unetlab/html/includes</span><br><span class="line">vim init.php</span><br></pre></td></tr></table></figure><h6 id="init-php中包括页面显示的所有镜像节点列表，在node-templates数组中新增一个h3c的数据即可，注意别破坏原有结构"><a href="#init-php中包括页面显示的所有镜像节点列表，在node-templates数组中新增一个h3c的数据即可，注意别破坏原有结构" class="headerlink" title="init.php中包括页面显示的所有镜像节点列表，在node_templates数组中新增一个h3c的数据即可，注意别破坏原有结构"></a>init.php中包括页面显示的所有镜像节点列表，在node_templates数组中新增一个h3c的数据即可，注意别破坏原有结构</h6><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2032.jpg" alt=""></p><h5 id="5-web页面检查是否导入成功"><a href="#5-web页面检查是否导入成功" class="headerlink" title="5. web页面检查是否导入成功"></a>5. web页面检查是否导入成功</h5><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2033.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2034.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/EVE-NG%20Setup/EVE-NG%20Setup%2035.jpg" alt=""></p><h6 id="从图中可以看采用了模板的设置，使用了导入的图标而且默认采用crt打开，导入成功。"><a href="#从图中可以看采用了模板的设置，使用了导入的图标而且默认采用crt打开，导入成功。" class="headerlink" title="从图中可以看采用了模板的设置，使用了导入的图标而且默认采用crt打开，导入成功。"></a>从图中可以看采用了模板的设置，使用了导入的图标而且默认采用crt打开，导入成功。</h6><h3 id="5-至此，就可以开始做一些网络拓扑实验了。当然，实际使用时可能还会遇到各种问题，由于篇幅限制，这里就不赘述了。"><a href="#5-至此，就可以开始做一些网络拓扑实验了。当然，实际使用时可能还会遇到各种问题，由于篇幅限制，这里就不赘述了。" class="headerlink" title="5. 至此，就可以开始做一些网络拓扑实验了。当然，实际使用时可能还会遇到各种问题，由于篇幅限制，这里就不赘述了。"></a>5. 至此，就可以开始做一些网络拓扑实验了。当然，实际使用时可能还会遇到各种问题，由于篇幅限制，这里就不赘述了。</h3><p>EVE-NG镜像资源  </p><p>链接：<a href="https://pan.baidu.com/s/1Eg\_Tg3ufenRUh2oedANA6g">https://pan.baidu.com/s/1Eg\_Tg3ufenRUh2oedANA6g</a></p><p>提取码：0809</p>]]></content>
      
      
      <categories>
          
          <category> 网络相关 </category>
          
          <category> EvE-NG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 模拟器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络设备模拟器之H3C模拟器HCL安装配置</title>
      <link href="/post/210319.html"/>
      <url>/post/210319.html</url>
      
        <content type="html"><![CDATA[<p>华三云实验室（H3C Cloud Lab，简称HCL）是一款界面图形化的全真网络模拟软件，用户可以通过该软件</p><p>实现H3C公司多个型号的虚拟设备的组网，是用户学习、测试基于H3C公司Comware V7平台的网络设备的必</p><p>备工具。</p><p>● HCL支持多用户同时使用，最多支持20个用户。</p><p>● 支持多用户的宿主机需要打开Windows系统的虚拟桌面服务功能，使用户能远程登录上宿主机进行操作。</p><p>● 同一个用户最多可以同时打开20个HCL</p><p>官方下载地址如下：</p><p><a href="http://www.h3c.com/cn/d\_201410/842486\_30005\_0.htm">http://www.h3c.com/cn/d\_201410/842486\_30005\_0.htm</a></p><p><strong>一、HCL安装资源</strong></p><p>链接：<a href="https://pan.baidu.com/s/1r-JYyc5gFF9nqeGUm1VgAQ">https://pan.baidu.com/s/1r-JYyc5gFF9nqeGUm1VgAQ</a></p><p>提取码：s77x</p><p>安装HCL</p><p>1、这里我们通过VM虚拟机的方式安装HCL，首先安装一台Win10虚拟机。</p><p>2、虚拟机配置了2 vCPU、8GB RAM、100G HDD、1个网卡。</p><p>3、安装过程很简单，双击执行下载的安装程序即可。</p><h2 id="1-软件安装完成截图"><a href="#1-软件安装完成截图" class="headerlink" title="1. 软件安装完成截图"></a>1. 软件安装完成截图</h2><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%201.png" alt="图片"></p><p><strong>二、 华三模拟器HCL安装</strong></p><h2 id="2-1-安装Wireshark-win64-3-0"><a href="#2-1-安装Wireshark-win64-3-0" class="headerlink" title="2.1 安装Wireshark-win64-3.0"></a>2.1 安装Wireshark-win64-3.0</h2><p>单击Wireshark-win64.exe右键以管理员身份运行，点击Next;  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%202.png" alt="图片"></p><p>点击 I Agree ;  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%203.png" alt="图片"></p><p>点击Next ;  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%204.png" alt="图片"></p><p>点击Next ;  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%205.png" alt="图片"></p><p>选择安装目录，点击Next ;  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%206.png" alt="图片"></p><p>点击 Next ;  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%207.png" alt="图片"></p><p>点击install ;  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%208.png" alt="图片"></p><p>弹出NMAP件安装，点击I Agree；  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%209.png" alt="图片"></p><p>点击install ；  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2010.png" alt="图片"></p><p>点击Next ;  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2011.png" alt="图片"></p><p>点击Finish;  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2012.png" alt="图片"></p><p>点击Next ;  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2013.png" alt="图片"></p><p>点击Finish ;  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2014.png" alt="图片"></p><h2 id="2-2-安装VirtualBox-5-2-8"><a href="#2-2-安装VirtualBox-5-2-8" class="headerlink" title="2.2 安装VirtualBox-5.2.8"></a>2.2 安装VirtualBox-5.2.8</h2><p>单击VirtualBox-5.2.8.exe右键以管理员身份运行，点击下一步；</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2015.png" alt="图片"></p><p>一直点击下一步直到完成；  </p><p>点击安装；  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2016.png" alt="图片"></p><p>查看安装完成后，多出两个网卡；  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2017.png" alt="图片"></p><h2 id="2-3-安装HCL模拟器"><a href="#2-3-安装HCL模拟器" class="headerlink" title="2.3 安装HCL模拟器"></a>2.3 安装HCL模拟器</h2><p>单击 HCL_V2.1.0_Setup.exe右键以管理员身份运行，点击OK；</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2018.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2019.png" alt="图片"></p><p>点击我接受“许可证协议”中的条款(A)，一直点击下一步，直到完成；</p><p>2.4 HCL启动报错</p><p>点击测试运行H3C Cloud Lab，启动报错；</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2020.png" alt="图片"></p><p>查看日志：</p><p>Traceback (most recent call last):</p><p>File “HCLUpdate.py”, line 9, in</p><p>File “Ui_PopUp.pyc”, line 10, in</p><p>File “PyQt4\\QtGui.pyc”, line 12, in</p><p>File “PyQt4\\QtGui.pyc”, line 10, in __load</p><p>ImportError: DLL load failed: 操作系统无法运行 %1。</p><p>2.2.1 解决HCL启动报错，右键H3C Cloud Lab -&gt;属性，设置如下；  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2021.png" alt="图片"></p><p>再次重启，点击访问（这个是防火墙提示的，不一定都有）；  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2022.png" alt="图片"></p><p>正常进入HCL系统界面；</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2023.png" alt="图片"></p><p><strong>三、 关联Wireshark和SecureCRT</strong></p><h2 id="3-1-HCL关联Wireshark"><a href="#3-1-HCL关联Wireshark" class="headerlink" title="3.1 HCL关联Wireshark"></a>3.1 HCL关联Wireshark</h2><p>像Cisco的GNS3模拟器，华为的eNSP模拟器都可以关联Wireshark来抓包，先HCL模拟器也可以通过关联Wireshark来实现抓包。</p><h3 id="3-1-1-检查HCL默认是否关联Wireshark"><a href="#3-1-1-检查HCL默认是否关联Wireshark" class="headerlink" title="3.1.1 检查HCL默认是否关联Wireshark"></a>3.1.1 检查HCL默认是否关联Wireshark</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2024.png" alt="图片"></p><h3 id="3-1-2-测试Wireshark-抓包是否正常可用"><a href="#3-1-2-测试Wireshark-抓包是否正常可用" class="headerlink" title="3.1.2 测试Wireshark 抓包是否正常可用"></a>3.1.2 测试Wireshark 抓包是否正常可用</h3><p>拓扑如图所示：至于拓扑随便拖两台设备连线测试即可，可不用那么麻烦；  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2025.png" alt="图片"></p><p>右键选择的需要抓包的接口；</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2026.png" alt="图片"></p><p>选择需要抓包的接口；  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2027.png" alt="图片"></p><p>添加到抓包接口列表中；</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2028.png" alt="图片"></p><p>调用Wireshark启用抓包；</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2029.png" alt="图片"></p><h2 id="3-2-HCL关联SecureCRT"><a href="#3-2-HCL关联SecureCRT" class="headerlink" title="3.2 HCL关联SecureCRT"></a>3.2 HCL关联SecureCRT</h2><h3 id="3-2-1-测试拓扑"><a href="#3-2-1-测试拓扑" class="headerlink" title="3.2.1 测试拓扑"></a>3.2.1 测试拓扑</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2030.png" alt="图片"></p><p>先不启动设备；</p><p>1）启动电脑桌面的Oracle VM VirtualBox；</p><p>会看到，topol-device1 ，如果你工作区有多台设备，那么以此类推，分别为topol-device2、topol-device3、topol-device4……在topol-device1 右键，点击设置：  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2031.png" alt="图片"></p><p>会看到，topol-device1 ，如果你工作区有多台设备，那么以此类推，分别为topol-device2、topol-device3、topol-device4，在topol-device1 右键，点击设置：</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2032.png" alt="图片"></p><p>2）打开piped.exe ；</p><p>Pipe: [\.\\pipe\\topo1-device1](file://./pipe/topo1-device1)</p><p>Port：可以自定义（这里使用1001开始，避免与华为ENSP冲突如：2001 ……）  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2033.png" alt="图片"></p><p>这时，可以启动设备了。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2034.png" alt="图片"></p><p>3）打开SecureCRT；</p><p>新建一个会话  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2035.png" alt="图片"></p><p>右键属性</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2036.png" alt="图片"></p><p>第一台设备这样连接，多台往后改变端口号即可(记得与Piped端口对上)</p><p>点击确定即可连接  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2037.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2038.png" alt="图片"></p><p>注意Piped不能关闭  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/HCL%20Setup/HCL%20Setup%2039.png" alt="图片"></p><p>至此安装完成，谢谢！</p>]]></content>
      
      
      <categories>
          
          <category> 网络相关 </category>
          
          <category> H3C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 模拟器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络设备模拟器之华为eNSP安装配置</title>
      <link href="/post/2103192.html"/>
      <url>/post/2103192.html</url>
      
        <content type="html"><![CDATA[<p>本人是电脑操作系统是win10企业版，不同操作系统，可能会有所不同。</p><p>目前许多人对学习华为的网络设备十分感兴趣，但安装华为模拟器eNSP是必不可少的。</p><h3 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a><strong>下载地址：</strong></h3><p>链接：<a href="https://pan.baidu.com/s/1XqSfHetChnmiaNtHpjS1oA">https://pan.baidu.com/s/1XqSfHetChnmiaNtHpjS1oA</a> 提取码：4455</p><p><strong>PS：可能部分电脑在安装之前需要提前关闭**</strong>防火墙**</p><h3 id="1-打开下载好的安装包"><a href="#1-打开下载好的安装包" class="headerlink" title="1.打开下载好的安装包"></a>1.打开下载好的安装包</h3><p>选择中文（简体），直接按确定即可</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/eNSP%20Setup/eNSP%20Setup%201.png" alt="图片"></p><h3 id="2-进入安装向导"><a href="#2-进入安装向导" class="headerlink" title="2.进入安装向导"></a>2.进入安装向导</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/eNSP%20Setup/eNSP%20Setup%202.png" alt="图片"></p><h3 id="3-点击“我愿意接受此协议”后，点击下一步"><a href="#3-点击“我愿意接受此协议”后，点击下一步" class="headerlink" title="3.点击“我愿意接受此协议”后，点击下一步"></a>3.点击“我愿意接受此协议”后，点击下一步</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/eNSP%20Setup/eNSP%20Setup%203.png" alt="图片"></p><h3 id="4-选择合适的安装路径后，点击下一步"><a href="#4-选择合适的安装路径后，点击下一步" class="headerlink" title="4.选择合适的安装路径后，点击下一步"></a>4.选择合适的安装路径后，点击下一步</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/eNSP%20Setup/eNSP%20Setup%204.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/eNSP%20Setup/eNSP%20Setup%205.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/eNSP%20Setup/eNSP%20Setup%206.png" alt="图片"></p><h3 id="5-安装其他辅助程序：WinPcap、Wireshark、VirtualBox，点上对钩"><a href="#5-安装其他辅助程序：WinPcap、Wireshark、VirtualBox，点上对钩" class="headerlink" title="5.安装其他辅助程序：WinPcap、Wireshark、VirtualBox，点上对钩"></a>5.安装其他辅助程序：WinPcap、Wireshark、VirtualBox，点上对钩</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/eNSP%20Setup/eNSP%20Setup%207.png" alt="图片"></p><h3 id="6-开始愉快的安装过程"><a href="#6-开始愉快的安装过程" class="headerlink" title="6.开始愉快的安装过程"></a>6.开始愉快的安装过程</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/eNSP%20Setup/eNSP%20Setup%208.png" alt="图片"></p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/eNSP%20Setup/eNSP%20Setup%209.png" alt="图片"></p><h3 id="10-安装WinPcap"><a href="#10-安装WinPcap" class="headerlink" title="10.安装WinPcap"></a>10.安装WinPcap</h3><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/eNSP%20Setup/eNSP%20Setup%2010.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 网络相关 </category>
          
          <category> 华为 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 模拟器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络模拟器之初识</title>
      <link href="/post/210315.html"/>
      <url>/post/210315.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/emulator/emulator1.png" alt=""></p><p> 网络该如何学起？可以在互联网上搜索CCIE，HCIE，很容易便能够搜索到非常多的书籍以及视频教学资料。但是光看视频和书是无法学会网络的，纸上得来终觉浅绝知此事要躬行。网络很重要的一个环节就是大量的实践操作，实践出真知^_^。通过教程学习知识点，再用实践来验证这些知识学会了没有，如此反复。这样的问题也随之而来，初学网络连概念都刚刚建立，怎么才能接触到网络设备：交换机、路由器、防火墙等等。企业网络设备可不是便宜的东西。  </p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/emulator/emulator2.png" alt="图片"></p><p>如果实践要使用真实的设备的话，是不太现实的，毕竟学习网络一般都买不起这些设备。</p><p>这个时候，网络模拟器就很重要了。</p><p>它能让我们更加直观的了解网络，在动手进行仿真实验中进一步巩固理论知识。</p><p>网络模拟器肯定是我们必不可少的工具，但是我们该用什么模拟器，有哪些前提条件，怎么样的模拟器才能满足我的要求，人总是很贪心的，想找到最完美的东西，下面就为大家介绍Cisco，华为，H3C各大厂商常用的网络设备模拟器。</p><h2 id="几个常见的网络模拟器"><a href="#几个常见的网络模拟器" class="headerlink" title="几个常见的网络模拟器"></a><strong>几个常见的网络模拟器</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/emulator/emulator3.png" alt="图片"></p><h2 id="Cisco网络设备模拟器"><a href="#Cisco网络设备模拟器" class="headerlink" title="Cisco网络设备模拟器"></a><strong>Cisco网络设备模拟器</strong></h2><pre><code>            **Cisco模拟器  Cisco packet tracer**</code></pre><p>思科模拟器是我最早接触的模拟器了。</p><p>占用电脑资源不多，体型也较小。</p><p>有些功能在模拟器中是无法实现的</p><p>挺多的命令不能使用的，6.2的版本是不需要登录使用的，7以上的版本需要注册使用</p><p>因为在学校习惯用了6.2的版本，虽然有挺多限制的。但是很多简单的实验还是可以做的。只做为了解之用，不推荐使用</p><p><strong>GNS3</strong></p><p>GNS3是一款模拟CISCO网络设备的模拟器，和CPT(Cisco Packet Tracer)相比。</p><p>GNS3运行的是真实设备的IOS,命令集更全。</p><p>官方网站 <strong><a href="https://www.gns3.com/">https://www.gns3.com/</a></strong>  ，目前已经到Version2.2.19的版本，相较于早期的版本有了非常大的改善（功能和BUG方面，不过颜值依然没有提高 - 个人觉得有点丑！）</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/emulator/emulator4.png" alt="图片"></p><p>先总体说一下优点：</p><p>·      支持的模拟器非常多，除了常规的交换机、路由器、防火墙、无线控制器等网络设备以外还加入了Python主机，认证服务器、linux的各类预装主机、SDWAN或者SDN也可以轻松模拟</p><p>·      支持多人在同一个实验拓扑上进行操作</p><p>缺点：</p><p>·      远程连接服务器使用，当客户端关闭的时候服务器上当前拓扑中的设备停止工作，每次连接需要重新开机，比较浪费时间</p><p>总体来说是最优秀的网络模拟器</p><p><strong>EVE-NG</strong></p><p>EVE-NG：亦是Unetlab最新版，功能强大，目前有社区版和Pro版，主要功能类似，Pro版相对社区版会多一些特性。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/emulator/emulator5.png" alt="图片"></p><p>EVE-NG（全称Emulated Virtual Environment -Next Generation），继Unetlab 1.0后的Unetlab的2.0新版本，改了名字，原名是UnifiedNetworking Lab统一网络实验室。笔者觉得名字改的非常合理，这款模拟器已经不仅可以模拟网络设备，也可以运行一切虚拟机。理论上，只要能将虚拟机的虚拟磁盘格式转换为qcow2都可以在EVE-NG上运行。所以，EVE-NG可以算得上是仿真虚拟环境。</p><p> EVE-NG是国外大神们开发的，融合了dynamips，IOL，KVM。它是深度定制的Ubuntu操作系统，可以直接把它安装在x86架构的物理主机上。它也有ova版本，可以导入到VMware等虚拟机软件中运行。</p><p> EVE/UNETLAB是一款很全面的模拟器，能模拟很多设备，就Cisco设备而言，不仅仅可以使用GNS3的镜像，Web-IOU的镜像，还可以有NXOS的镜像，ASA等设备的都可以。如.bin文件，.qcw2文件等，另外还有F5，Juniper等设备可以模拟，由于可以模拟的设备太多。简直就是模拟器之王！</p><p> EVE-NG在交互模式上更加具有优势，与GNS3截然不同。GNS3更像是用户使用的软件，只有GNS3支持的 OS才能使用；而EVE-NG更像是CS模型，EVE-NG是服务端，用户端可以是支持http/https的任意OS。</p><h2 id="华为模拟器-eNSP"><a href="#华为模拟器-eNSP" class="headerlink" title="华为模拟器 eNSP"></a><strong>华为模拟器 eNSP</strong></h2><p>现在网工的软考考试，考的就是华为的命令。</p><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/emulator/emulator6.png" alt="图片"></p><p>所以装个华为的模拟器，敲下实验是很有必要的。</p><p>eNSP原本能在华为官网下载。2019年下半年，华为官网停止eNSP下载，仅合作伙伴需申请下载。</p><p>不过问题不大，还是能在各种网站上找到资源的</p><p>下次会把这个资源找出来，以及给出详细的安装过程。</p><h2 id="H3C模拟器-HCL"><a href="#H3C模拟器-HCL" class="headerlink" title="H3C模拟器 HCL"></a><strong>H3C模拟器 HCL</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/emulator/emulator7.png" alt="图片"></p><p>华三云实验室（ HCL ）V2.0 是新华三集团基于 HCL V1.0 推出的功能更强大的界面图形化全真网络设备模拟软件。</p><p>用户可以通过该软件实现 H3C 公司多种型号设备的虚拟组网、配置、调试。该软件具备友好的图形界面，可以模拟路由器、交换机、防火墙等网络设备及 PC 的全部功能，用户可以使用它在个人电脑上搭建虚拟化的网络环境。</p><p><strong>H3C**</strong>模拟器的适用对象包括：**网络技术的学习者；准备参加 H3CNE / H3CSE / H3CTE / H3CIE 学习和考试者；希望熟悉基于 H3C 公司 Comware V7 平台网络设备者；需要虚拟环境测试和验证配置方案的工程师和技术人员；其他对网络技术感兴趣者。</p><p>好了，简单了解这些，下一次详细介绍各模拟器的安装配置和使用</p>]]></content>
      
      
      <categories>
          
          <category> 网络相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 模拟器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Hexo 中插入 ECharts 动态图表</title>
      <link href="/post/aof3dfe.html"/>
      <url>/post/aof3dfe.html</url>
      
        <content type="html"><![CDATA[<h2 id="ECharts-简介"><a href="#ECharts-简介" class="headerlink" title="ECharts 简介"></a>ECharts 简介</h2><blockquote><p><a href="https://echarts.apache.org/">ECharts</a> 是一个使用 JavaScript 实现的开源可视化库，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器（Chrome，Firefox，Safari，IE8/9/10/11 等），底层依赖矢量图形库 ZRender，提供直观，交互丰富，可高度个性化定制的数据可视化图表。它提供了常规的折线图、柱状图、散点图、饼图、K 线图，用于统计的盒形图，用于地理数据可视化的地图、热力图、线图，用于关系数据可视化的关系图、treemap、旭日图，多维数据可视化的平行坐标，还有用于 BI 的漏斗图，仪表盘，并且支持图与图之间的混搭。</p></blockquote><h2 id="Hexo-中的-ECharts"><a href="#Hexo-中的-ECharts" class="headerlink" title="Hexo 中的 ECharts"></a>Hexo 中的 ECharts</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-tag-echarts --save</span><br></pre></td></tr></table></figure><p>之后在文章内使用 ECharts 的 <code>tag</code> 就可以了：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% echarts <span class="number">400</span> <span class="string">&#x27;85%&#x27;</span> %&#125; \\<span class="variable constant_">TODO</span> option goes here &#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>echarts</code> 是标签名，<code>endecharts</code> 是结束标签，不需要更改，<code>400</code> 是图表容器的高度，默认是按正常比例缩放的，<code>85%</code> 是图表容器的相对宽度，默认是 <code>100%</code>。在标签之间的部分，需要自己填充的图表数据和属性，更多自定义属性，你可以查看 <a href="https://echarts.apache.org/zh/option.html#title">官方文档</a>。</p><ul><li><p>参数400指定图表展示的高度为400px，85%则指定图表展示的宽度为85%</p></li><li><p>title：标题组件，包含主标题和副标题。</p></li><li><p>legend：图例组件。</p></li><li><p>tooltip：提示框组件。</p></li><li><p>toolbox：工具栏。内置有导出图片，数据视图，动态类型切换，数据区域缩放，重置五个工具。</p></li><li><p>xAxis、yAxis：直角坐标系 grid 中的 x 轴、y轴。</p></li><li><p>series：系列列表。每个系列通过 <code>type</code> 决定自己的图表类型。</p><ul><li>series-line：折线/面积图</li><li>series-bar：柱状/条形图</li><li>series-pie：饼图</li><li>series-scatter：散点图</li><li>series-radar：雷达图</li><li>series-tree：树图</li><li>series-boxplot：箱形图</li><li>series-candlestick：K线图</li><li>series-heatmap：热力图</li><li>series-graph：关系图</li></ul></li><li><p>多个图表的数据和函数可能会冲突，请注意！</p></li><li><p>直接在html中直接绘制，然后用<code>&lt;iframe&gt;&lt;/iframe&gt;</code>展示效果更佳。</p></li><li><p>在html绘图ECharts的格式如下：</p></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 为 ECharts 准备一个具备大小（宽高）的 DOM --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 600px;height:400px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> myChart = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;main&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 指定图表的配置项和数据</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> option = &#123;</span></span><br><span class="line"><span class="language-javascript">    ...</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 使用刚指定的配置项和数据显示图表。</span></span></span><br><span class="line"><span class="language-javascript">  myChart.<span class="title function_">setOption</span>(option);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 刷新调整</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="property">onresize</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    myChart.<span class="title function_">resize</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>Copy</span><br></pre></td></tr></table></figure><ul><li>部分echart需要引入其他js，如<code>bmap</code>、<code>jquery</code>等，请自行添加。</li><li>使用百度地图的api需要<a href="http://lbsyun.baidu.com/apiconsole/key?application=key">申请密钥(ak)</a>，使用格式如下，注意替换<code>FAKE_AK</code>。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;https://api.map.baidu.com/api?v=2.0&amp;ak=FAKE_AK&quot;</span>&gt;&lt;<span class="regexp">/script&gt; &lt;script type=&quot;text/</span>javascript<span class="string">&quot; src=&quot;</span><span class="attr">https</span>:<span class="comment">//api.map.baidu.com/getscript?v=2.0&amp;ak=FAKE_AK&quot;&gt;&lt;/script&gt;Copy</span></span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>下面给出一些<a href="https://echarts.apache.org/examples/zh/index.html">echarts官方实例</a>，大多数都可以<strong>交互</strong>。</p><p>现在你已经基本学会了在 Hexo 中插入 ECharts 图表了，下面再展示一些基本的图表，更多炫酷的图表可以自己去尝试一下。</p><h3 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% echarts <span class="number">400</span> <span class="string">&#x27;90%&#x27;</span> %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">yAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [&#123;</span><br><span class="line">        <span class="attr">data</span>: [<span class="number">820</span>, <span class="number">932</span>, <span class="number">901</span>, <span class="number">934</span>, <span class="number">1290</span>, <span class="number">1330</span>, <span class="number">1320</span>],</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br><span class="line">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure><p>显示效果如下所示：<br><div id="echarts3486" style="width: 300%;height: 400px;margin: 0 auto"></div><script src="https://npm.elemecdn.com/echarts@5.5.0/dist/echarts.min.js"></script><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts3486'));        // 指定图表的配置项和数据        var option = {    tooltip: {        trigger: 'axis'    },    xAxis: {        type: 'category',        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']    },    yAxis: {        type: 'value'    },    series: [{        data: [820, 932, 901, 934, 1290, 1330, 1320],        type: 'line'    }]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script></p><h3 id="柱状图、条形图"><a href="#柱状图、条形图" class="headerlink" title="柱状图、条形图"></a>柱状图、条形图</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% echarts <span class="number">400</span> <span class="string">&#x27;85%&#x27;</span> %&#125;</span><br><span class="line">option = &#123;</span><br><span class="line">  <span class="attr">xAxis</span>: &#123;</span><br><span class="line">    <span class="attr">data</span>: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">yAxis</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">series</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: [<span class="number">23</span>, <span class="number">24</span>, <span class="number">18</span>, <span class="number">25</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">25</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure><p>显示效果如下所示：<br><div id="echarts8663" style="width: 300%;height: 400px;margin: 0 auto"></div><script src="https://npm.elemecdn.com/echarts@5.5.0/dist/echarts.min.js"></script><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts8663'));        // 指定图表的配置项和数据        var option = option = {  xAxis: {    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']  },  yAxis: {},  series: [    {      type: 'bar',      data: [23, 24, 18, 25, 27, 28, 25]    }  ]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script></p><h3 id="环形图、饼状图"><a href="#环形图、饼状图" class="headerlink" title="环形图、饼状图"></a>环形图、饼状图</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% echarts <span class="number">400</span> <span class="string">&#x27;90%&#x27;</span> %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&#x27;item&#x27;</span>,</span><br><span class="line">        <span class="attr">formatter</span>: <span class="string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125;: &#123;c&#125; (&#123;d&#125;%)&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">legend</span>: &#123;</span><br><span class="line">        <span class="attr">orient</span>: <span class="string">&#x27;vertical&#x27;</span>,</span><br><span class="line">        <span class="attr">left</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;直接访问&#x27;</span>, <span class="string">&#x27;邮件营销&#x27;</span>, <span class="string">&#x27;联盟广告&#x27;</span>, <span class="string">&#x27;视频广告&#x27;</span>, <span class="string">&#x27;搜索引擎&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;访问来源&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;pie&#x27;</span>,</span><br><span class="line">            <span class="attr">radius</span>: [<span class="string">&#x27;50%&#x27;</span>, <span class="string">&#x27;70%&#x27;</span>],</span><br><span class="line">            <span class="attr">avoidLabelOverlap</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">label</span>: &#123;</span><br><span class="line">                <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">position</span>: <span class="string">&#x27;center&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">emphasis</span>: &#123;</span><br><span class="line">                <span class="attr">label</span>: &#123;</span><br><span class="line">                    <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">fontSize</span>: <span class="string">&#x27;30&#x27;</span>,</span><br><span class="line">                    <span class="attr">fontWeight</span>: <span class="string">&#x27;bold&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">labelLine</span>: &#123;</span><br><span class="line">                <span class="attr">show</span>: <span class="literal">false</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">data</span>: [</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">335</span>, <span class="attr">name</span>: <span class="string">&#x27;直接访问&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">310</span>, <span class="attr">name</span>: <span class="string">&#x27;邮件营销&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">234</span>, <span class="attr">name</span>: <span class="string">&#x27;联盟广告&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">135</span>, <span class="attr">name</span>: <span class="string">&#x27;视频广告&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">1548</span>, <span class="attr">name</span>: <span class="string">&#x27;搜索引擎&#x27;</span>&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br><span class="line">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure><p>显示效果如下所示：<br><div id="echarts5390" style="width: 300%;height: 400px;margin: 0 auto"></div><script src="https://npm.elemecdn.com/echarts@5.5.0/dist/echarts.min.js"></script><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts5390'));        // 指定图表的配置项和数据        var option = {    tooltip: {        trigger: 'item',        formatter: '{a} <br/>{b}: {c} ({d}%)'    },    legend: {        orient: 'vertical',        left: 10,        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']    },    series: [        {            name: '访问来源',            type: 'pie',            radius: ['50%', '70%'],            avoidLabelOverlap: false,            label: {                show: false,                position: 'center'            },            emphasis: {                label: {                    show: true,                    fontSize: '30',                    fontWeight: 'bold'                }            },            labelLine: {                show: false            },            data: [                {value: 335, name: '直接访问'},                {value: 310, name: '邮件营销'},                {value: 234, name: '联盟广告'},                {value: 135, name: '视频广告'},                {value: 1548, name: '搜索引擎'}            ]        }    ]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script></p><h3 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% echarts <span class="number">400</span> <span class="string">&#x27;90%&#x27;</span> %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">tooltip</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">yAxis</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">series</span>: [&#123;</span><br><span class="line">        <span class="attr">symbolSize</span>: <span class="number">20</span>,</span><br><span class="line">        <span class="attr">data</span>: [</span><br><span class="line">            [<span class="number">10.0</span>, <span class="number">8.04</span>],</span><br><span class="line">            [<span class="number">8.0</span>, <span class="number">6.95</span>],</span><br><span class="line">            [<span class="number">13.0</span>, <span class="number">7.58</span>],</span><br><span class="line">            [<span class="number">9.0</span>, <span class="number">8.81</span>],</span><br><span class="line">            [<span class="number">11.0</span>, <span class="number">8.33</span>],</span><br><span class="line">            [<span class="number">14.0</span>, <span class="number">9.96</span>],</span><br><span class="line">            [<span class="number">6.0</span>, <span class="number">7.24</span>],</span><br><span class="line">            [<span class="number">4.0</span>, <span class="number">4.26</span>],</span><br><span class="line">            [<span class="number">12.0</span>, <span class="number">10.84</span>],</span><br><span class="line">            [<span class="number">7.0</span>, <span class="number">4.82</span>],</span><br><span class="line">            [<span class="number">5.0</span>, <span class="number">5.68</span>]</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;scatter&#x27;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br><span class="line">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure><p>显示效果如下所示：<br><div id="echarts2153" style="width: 300%;height: 400px;margin: 0 auto"></div><script src="https://npm.elemecdn.com/echarts@5.5.0/dist/echarts.min.js"></script><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts2153'));        // 指定图表的配置项和数据        var option = {    tooltip: {},    xAxis: {},    yAxis: {},    series: [{        symbolSize: 20,        data: [            [10.0, 8.04],            [8.0, 6.95],            [13.0, 7.58],            [9.0, 8.81],            [11.0, 8.33],            [14.0, 9.96],            [6.0, 7.24],            [4.0, 4.26],            [12.0, 10.84],            [7.0, 4.82],            [5.0, 5.68]        ],        type: 'scatter'    }]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script></p><h3 id="雷达图"><a href="#雷达图" class="headerlink" title="雷达图"></a>雷达图</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% echarts <span class="number">400</span> <span class="string">&#x27;90%&#x27;</span> %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">tooltip</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">legend</span>: &#123;</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;预算分配（Allocated Budget）&#x27;</span>, <span class="string">&#x27;实际开销（Actual Spending）&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">radar</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: &#123;</span><br><span class="line">            <span class="attr">textStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">                <span class="attr">backgroundColor</span>: <span class="string">&#x27;#999&#x27;</span>,</span><br><span class="line">                <span class="attr">borderRadius</span>: <span class="number">3</span>,</span><br><span class="line">                <span class="attr">padding</span>: [<span class="number">3</span>, <span class="number">5</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">indicator</span>: [</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;销售（sales）&#x27;</span>, <span class="attr">max</span>: <span class="number">6500</span>&#125;,</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;管理（Administration）&#x27;</span>, <span class="attr">max</span>: <span class="number">16000</span>&#125;,</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;信息技术（Information Techology）&#x27;</span>, <span class="attr">max</span>: <span class="number">30000</span>&#125;,</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;客服（Customer Support）&#x27;</span>, <span class="attr">max</span>: <span class="number">38000</span>&#125;,</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;研发（Development）&#x27;</span>, <span class="attr">max</span>: <span class="number">52000</span>&#125;,</span><br><span class="line">            &#123; <span class="attr">name</span>: <span class="string">&#x27;市场（Marketing）&#x27;</span>, <span class="attr">max</span>: <span class="number">25000</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [&#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;预算 vs 开销（Budget vs spending）&#x27;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;radar&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">value</span>: [<span class="number">4300</span>, <span class="number">10000</span>, <span class="number">28000</span>, <span class="number">35000</span>, <span class="number">50000</span>, <span class="number">19000</span>],</span><br><span class="line">                <span class="attr">name</span>: <span class="string">&#x27;预算分配（Allocated Budget）&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">value</span>: [<span class="number">5000</span>, <span class="number">14000</span>, <span class="number">28000</span>, <span class="number">31000</span>, <span class="number">42000</span>, <span class="number">21000</span>],</span><br><span class="line">                <span class="attr">name</span>: <span class="string">&#x27;实际开销（Actual Spending）&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br><span class="line">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure><p>显示效果如下所示：<br><div id="echarts6716" style="width: 500%;height: 800px;margin: 0 auto"></div><script src="https://npm.elemecdn.com/echarts@5.5.0/dist/echarts.min.js"></script><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts6716'));        // 指定图表的配置项和数据        var option = {    tooltip: {},    legend: {        data: ['预算分配（Allocated Budget）', '实际开销（Actual Spending）']    },    radar: {        name: {            textStyle: {                color: '#fff',                backgroundColor: '#999',                borderRadius: 3,                padding: [3, 5]            }        },        indicator: [            { name: '销售（sales）', max: 6500},            { name: '管理（Administration）', max: 16000},            { name: '信息技术（Information Techology）', max: 30000},            { name: '客服（Customer Support）', max: 38000},            { name: '研发（Development）', max: 52000},            { name: '市场（Marketing）', max: 25000}        ]    },    series: [{        name: '预算 vs 开销（Budget vs spending）',        type: 'radar',        data: [            {                value: [4300, 10000, 28000, 35000, 50000, 19000],                name: '预算分配（Allocated Budget）'            },            {                value: [5000, 14000, 28000, 31000, 42000, 21000],                name: '实际开销（Actual Spending）'            }        ]    }]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script></p><h3 id="关系图"><a href="#关系图" class="headerlink" title="关系图"></a>关系图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% echarts 400 &#x27;90%&#x27; %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    tooltip: &#123;&#125;,</span><br><span class="line">    series: [</span><br><span class="line">        &#123;</span><br><span class="line">            type: &#x27;graph&#x27;,</span><br><span class="line">            layout: &#x27;none&#x27;,</span><br><span class="line">            symbolSize: 50,</span><br><span class="line">            label: &#123;</span><br><span class="line">                show: true</span><br><span class="line">            &#125;,</span><br><span class="line">            edgeSymbol: [&#x27;circle&#x27;, &#x27;arrow&#x27;],</span><br><span class="line">            edgeSymbolSize: [4, 10],</span><br><span class="line">            edgeLabel: &#123;</span><br><span class="line">                fontSize: 20</span><br><span class="line">            &#125;,</span><br><span class="line">            data: [&#123;</span><br><span class="line">                name: &#x27;节点1&#x27;,</span><br><span class="line">                x: 300,</span><br><span class="line">                y: 300</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                name: &#x27;节点2&#x27;,</span><br><span class="line">                x: 800,</span><br><span class="line">                y: 300</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                name: &#x27;节点3&#x27;,</span><br><span class="line">                x: 550,</span><br><span class="line">                y: 100</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                name: &#x27;节点4&#x27;,</span><br><span class="line">                x: 550,</span><br><span class="line">                y: 500</span><br><span class="line">            &#125;],</span><br><span class="line">            links: [&#123;</span><br><span class="line">                source: 0,</span><br><span class="line">                target: 1,</span><br><span class="line">                symbolSize: [5, 20],</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: true</span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    width: 5,</span><br><span class="line">                    curveness: 0.2</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                source: &#x27;节点2&#x27;,</span><br><span class="line">                target: &#x27;节点1&#x27;,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: true</span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    curveness: 0.2</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                source: &#x27;节点1&#x27;,</span><br><span class="line">                target: &#x27;节点3&#x27;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                source: &#x27;节点2&#x27;,</span><br><span class="line">                target: &#x27;节点3&#x27;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                source: &#x27;节点2&#x27;,</span><br><span class="line">                target: &#x27;节点4&#x27;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                source: &#x27;节点1&#x27;,</span><br><span class="line">                target: &#x27;节点4&#x27;</span><br><span class="line">            &#125;],</span><br><span class="line">            lineStyle: &#123;</span><br><span class="line">                opacity: 0.9,</span><br><span class="line">                width: 2,</span><br><span class="line">                curveness: 0</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br><span class="line">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure><p>显示效果如下所示：</p><div id="echarts7730" style="width: 300%;height: 400px;margin: 0 auto"></div><script src="https://npm.elemecdn.com/echarts@5.5.0/dist/echarts.min.js"></script><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts7730'));        // 指定图表的配置项和数据        var option = {    tooltip: {},    series: [        {            type: 'graph',            layout: 'none',            symbolSize: 50,            label: {                show: true            },            edgeSymbol: ['circle', 'arrow'],            edgeSymbolSize: [4, 10],            edgeLabel: {                fontSize: 20            },            data: [{                name: '节点1',                x: 300,                y: 300            }, {                name: '节点2',                x: 800,                y: 300            }, {                name: '节点3',                x: 550,                y: 100            }, {                name: '节点4',                x: 550,                y: 500            }],            links: [{                source: 0,                target: 1,                symbolSize: [5, 20],                label: {                    show: true                },                lineStyle: {                    width: 5,                    curveness: 0.2                }            }, {                source: '节点2',                target: '节点1',                label: {                    show: true                },                lineStyle: {                    curveness: 0.2                }            }, {                source: '节点1',                target: '节点3'            }, {                source: '节点2',                target: '节点3'            }, {                source: '节点2',                target: '节点4'            }, {                source: '节点1',                target: '节点4'            }],            lineStyle: {                opacity: 0.9,                width: 2,                curveness: 0            }        }    ]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><h3 id="矩形树图"><a href="#矩形树图" class="headerlink" title="矩形树图"></a>矩形树图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% echarts 400 &#x27;90%&#x27; %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    tooltip: &#123;&#125;,</span><br><span class="line">    series: [&#123;</span><br><span class="line">        type: &#x27;treemap&#x27;,</span><br><span class="line">        data: [&#123;</span><br><span class="line">            name: &#x27;nodeA&#x27;,            // First tree</span><br><span class="line">            value: 10,</span><br><span class="line">            children: [&#123;</span><br><span class="line">                name: &#x27;nodeAa&#x27;,       // First leaf of first tree</span><br><span class="line">                value: 4</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                name: &#x27;nodeAb&#x27;,       // Second leaf of first tree</span><br><span class="line">                value: 6</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            name: &#x27;nodeB&#x27;,            // Second tree</span><br><span class="line">            value: 20,</span><br><span class="line">            children: [&#123;</span><br><span class="line">                name: &#x27;nodeBa&#x27;,       // Son of first tree</span><br><span class="line">                value: 20,</span><br><span class="line">                children: [&#123;</span><br><span class="line">                    name: &#x27;nodeBa1&#x27;,  // Granson of first tree</span><br><span class="line">                    value: 20</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br><span class="line">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure><p>显示效果如下所示：</p><div id="echarts8115" style="width: 300%;height: 400px;margin: 0 auto"></div><script src="https://npm.elemecdn.com/echarts@5.5.0/dist/echarts.min.js"></script><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts8115'));        // 指定图表的配置项和数据        var option = {    tooltip: {},    series: [{        type: 'treemap',        data: [{            name: 'nodeA',            // First tree            value: 10,            children: [{                name: 'nodeAa',       // First leaf of first tree                value: 4            }, {                name: 'nodeAb',       // Second leaf of first tree                value: 6            }]        }, {            name: 'nodeB',            // Second tree            value: 20,            children: [{                name: 'nodeBa',       // Son of first tree                value: 20,                children: [{                    name: 'nodeBa1',  // Granson of first tree                    value: 20                }]            }]        }]    }]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><h3 id="旭日图"><a href="#旭日图" class="headerlink" title="旭日图"></a>旭日图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% echarts 400 &#x27;90%&#x27; %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    tooltip: &#123;&#125;,</span><br><span class="line">    series: &#123;</span><br><span class="line">        type: &#x27;sunburst&#x27;,</span><br><span class="line">        data: [&#123;</span><br><span class="line">            name: &#x27;Grandpa&#x27;,</span><br><span class="line">            children: [&#123;</span><br><span class="line">                name: &#x27;Uncle Leo&#x27;,</span><br><span class="line">                value: 15,</span><br><span class="line">                children: [&#123;</span><br><span class="line">                    name: &#x27;Cousin Jack&#x27;,</span><br><span class="line">                    value: 2</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    name: &#x27;Cousin Mary&#x27;,</span><br><span class="line">                    value: 5,</span><br><span class="line">                    children: [&#123;</span><br><span class="line">                        name: &#x27;Jackson&#x27;,</span><br><span class="line">                        value: 2</span><br><span class="line">                    &#125;]</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    name: &#x27;Cousin Ben&#x27;,</span><br><span class="line">                    value: 4</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                name: &#x27;Father&#x27;,</span><br><span class="line">                value: 10,</span><br><span class="line">                children: [&#123;</span><br><span class="line">                    name: &#x27;Me&#x27;,</span><br><span class="line">                    value: 5</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    name: &#x27;Brother Peter&#x27;,</span><br><span class="line">                    value: 1</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            name: &#x27;Nancy&#x27;,</span><br><span class="line">            children: [&#123;</span><br><span class="line">                name: &#x27;Uncle Nike&#x27;,</span><br><span class="line">                children: [&#123;</span><br><span class="line">                    name: &#x27;Cousin Betty&#x27;,</span><br><span class="line">                    value: 1</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    name: &#x27;Cousin Jenny&#x27;,</span><br><span class="line">                    value: 2</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;],</span><br><span class="line">        radius: [0, &#x27;90%&#x27;],</span><br><span class="line">        label: &#123;</span><br><span class="line">            rotate: &#x27;radial&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure><p>显示效果如下所示：</p><div id="echarts3372" style="width: 300%;height: 400px;margin: 0 auto"></div><script src="https://npm.elemecdn.com/echarts@5.5.0/dist/echarts.min.js"></script><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts3372'));        // 指定图表的配置项和数据        var option = {    tooltip: {},    series: {        type: 'sunburst',        data: [{            name: 'Grandpa',            children: [{                name: 'Uncle Leo',                value: 15,                children: [{                    name: 'Cousin Jack',                    value: 2                }, {                    name: 'Cousin Mary',                    value: 5,                    children: [{                        name: 'Jackson',                        value: 2                    }]                }, {                    name: 'Cousin Ben',                    value: 4                }]            }, {                name: 'Father',                value: 10,                children: [{                    name: 'Me',                    value: 5                }, {                    name: 'Brother Peter',                    value: 1                }]            }]        }, {            name: 'Nancy',            children: [{                name: 'Uncle Nike',                children: [{                    name: 'Cousin Betty',                    value: 1                }, {                    name: 'Cousin Jenny',                    value: 2                }]            }]        }],        radius: [0, '90%'],        label: {            rotate: 'radial'        }    }};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><h3 id="平行坐标系"><a href="#平行坐标系" class="headerlink" title="平行坐标系"></a>平行坐标系</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% echarts 400 &#x27;90%&#x27; %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    parallelAxis: [</span><br><span class="line">        &#123;dim: 0, name: &#x27;Price&#x27;&#125;,</span><br><span class="line">        &#123;dim: 1, name: &#x27;Net Weight&#x27;&#125;,</span><br><span class="line">        &#123;dim: 2, name: &#x27;Amount&#x27;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            dim: 3,</span><br><span class="line">            name: &#x27;Score&#x27;,</span><br><span class="line">            type: &#x27;category&#x27;,</span><br><span class="line">            data: [&#x27;Excellent&#x27;, &#x27;Good&#x27;, &#x27;OK&#x27;, &#x27;Bad&#x27;]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    series: &#123;</span><br><span class="line">        type: &#x27;parallel&#x27;,</span><br><span class="line">        lineStyle: &#123;</span><br><span class="line">            width: 4</span><br><span class="line">        &#125;,</span><br><span class="line">        data: [</span><br><span class="line">            [12.99, 100, 82, &#x27;Good&#x27;],</span><br><span class="line">            [9.99, 80, 77, &#x27;OK&#x27;],</span><br><span class="line">            [20, 120, 60, &#x27;Excellent&#x27;]</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure><p>显示效果如下所示：</p><div id="echarts9886" style="width: 300%;height: 400px;margin: 0 auto"></div><script src="https://npm.elemecdn.com/echarts@5.5.0/dist/echarts.min.js"></script><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts9886'));        // 指定图表的配置项和数据        var option = {    parallelAxis: [        {dim: 0, name: 'Price'},        {dim: 1, name: 'Net Weight'},        {dim: 2, name: 'Amount'},        {            dim: 3,            name: 'Score',            type: 'category',            data: ['Excellent', 'Good', 'OK', 'Bad']        }    ],    series: {        type: 'parallel',        lineStyle: {            width: 4        },        data: [            [12.99, 100, 82, 'Good'],            [9.99, 80, 77, 'OK'],            [20, 120, 60, 'Excellent']        ]    }};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>如果你想了解更多，可以查看 ECharts 的 <a href="https://echarts.apache.org/en/index.html">英文文档</a> 或者 <a href="https://echarts.apache.org/zh/index.html">中文文档</a>，更多的实例和属性设置都可以找到，也可以在 ECharts 官网配置好图表属性后再引入到自己的 Hexo 文档中。</p>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Hexo 中插入 Chart 动态图表</title>
      <link href="/post/a6e75a2b.html"/>
      <url>/post/a6e75a2b.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>文章来源： 作者: <a href="https://github.com/Shen-Yu">Shen-Yu</a> 链接: <a href="https://shen-yu.gitee.io/2020/chartjs/">https://shen-yu.gitee.io/2020/chartjs/</a> 来源: <a href="https://shen-yu.gitee.io/">岛</a> 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><h2 id="Chartjs-简介"><a href="#Chartjs-简介" class="headerlink" title="Chartjs 简介"></a>Chartjs 简介</h2><p><code>Chartjs</code>是一款简单优雅的数据可视化工具，对比其他图表库如echarts、highcharts、c3、flot、amchart等，它的画面效果、动态效果都更精致，它的 <a href="https://chartjs.bootcss.com/">文档首页</a> 就透出一股小清新，基于 HTML5 Canvas，它拥有更好的性能且响应式，基本满足了一般数据展示的需要，包括折线图，条形图，饼图，散点图，雷达图，极地图，甜甜圈图等。</p><h2 id="Hexo-中的-Chartjs"><a href="#Hexo-中的-Chartjs" class="headerlink" title="Hexo 中的 Chartjs"></a>Hexo 中的 Chartjs</h2><p>为了方便在 Hexo 中使用这么漂亮的图表库，我自己写了一个 Hexo 的 <a href="https://github.com/Shen-Yu/hexo-tag-chart">Chartjs 插件</a>。插件的安装和使用非常的简单，只需要进入博客目录，然后打开命令行，用npm安装一下：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-tag-chart --save</span><br></pre></td></tr></table></figure><p>之后在文章内使用 chart 的 tag 就可以了<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% chart 90% 300 %&#125;</span><br><span class="line">\\TODO option goes here</span><br><span class="line">&#123;% endchart %&#125;</span><br></pre></td></tr></table></figure><br>其中 <code>chart</code> 是标签名，<code>endchart</code> 是结束标签，不需要更改，<code>90%</code> 是图表容器的相对宽度，默认是<code>100%</code>，<code>300</code> 是图表容器的高度，默认是按正常比例缩放的，你可以通过设置 <code>options</code> 里面的 <code>aspectRatio</code> 属性来调整宽高比例，另外还有许多属性可以自定义，你可以查看 <a href="https://www.chartjs.org/docs/latest/general/responsive.html">官方文档</a>。在标签之间的部分，都是需要自己填充的图表数据和属性。</p><h2 id="图标示例"><a href="#图标示例" class="headerlink" title="图标示例"></a>图标示例</h2><p>现在你已经基本学会了在Hexo中插入图表了，我再展示一些更炫酷的图表吧，你可以自己去尝试一下。</p><h3 id="柱状图、条形图"><a href="#柱状图、条形图" class="headerlink" title="柱状图、条形图"></a>柱状图、条形图</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% chart 90% 300 %&#125;</span><br><span class="line">&#123;</span><br><span class="line">  type: &#x27;bar&#x27;,</span><br><span class="line">  data: &#123;</span><br><span class="line"><span class="code">    labels: [&#x27;January&#x27;, &#x27;February&#x27;, &#x27;March&#x27;, &#x27;April&#x27;, &#x27;May&#x27;, &#x27;June&#x27;, &#x27;July&#x27;],</span></span><br><span class="line"><span class="code">    datasets: [&#123;</span></span><br><span class="line"><span class="code">      label: &#x27;First Dataset&#x27;,</span></span><br><span class="line"><span class="code">      data: [65, 59, 80, 81, 56, 55, 40],</span></span><br><span class="line"><span class="code">      fill: false,</span></span><br><span class="line"><span class="code">      backgroundColor: [&#x27;rgba(255, 99, 132, 0.5)&#x27;, &#x27;rgba(255, 159, 64, 0.5)&#x27;, &#x27;rgba(255, 205, 86, 0.5)&#x27;, &#x27;rgba(75, 192, 192, 0.5)&#x27;, &#x27;rgba(54, 162, 235, 0.5)&#x27;, &#x27;rgba(153, 102, 255, 0.5)&#x27;, &#x27;rgba(201, 203, 207, 0.5)&#x27;],</span></span><br><span class="line"><span class="code">      borderColor: [&#x27;rgb(255, 99, 132)&#x27;, &#x27;rgb(255, 159, 64)&#x27;, &#x27;rgb(255, 205, 86)&#x27;, &#x27;rgb(75, 192, 192)&#x27;, &#x27;rgb(54, 162, 235)&#x27;, &#x27;rgb(153, 102, 255)&#x27;, &#x27;rgb(201, 203, 207)&#x27;],</span></span><br><span class="line"><span class="code">      borderWidth: 1</span></span><br><span class="line"><span class="code">    &#125;]</span></span><br><span class="line"><span class="code">  &#125;,</span></span><br><span class="line"><span class="code">  options: &#123;</span></span><br><span class="line"><span class="code">    scales: &#123;</span></span><br><span class="line"><span class="code">      yAxes: [&#123;</span></span><br><span class="line"><span class="code">        ticks: &#123;</span></span><br><span class="line"><span class="code">          beginAtZero: true</span></span><br><span class="line"><span class="code">        &#125;</span></span><br><span class="line"><span class="code">      &#125;]</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% endchart %&#125;</span></span><br></pre></td></tr></table></figure><p>柱状图、条形图效果展示：<br><div style="width: 90%;margin: 0 auto">    <canvas id="chart1090" style="height: 300px"></canvas></div><script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script><script type="text/javascript">    var ctx = document.getElementById('chart1090').getContext('2d');    var options = {  type: 'bar',  data: {    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],    datasets: [{      label: 'First Dataset',      data: [65, 59, 80, 81, 56, 55, 40],      fill: false,      backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(255, 159, 64, 0.5)', 'rgba(255, 205, 86, 0.5)', 'rgba(75, 192, 192, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(153, 102, 255, 0.5)', 'rgba(201, 203, 207, 0.5)'],      borderColor: ['rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(54, 162, 235)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)'],      borderWidth: 1    }]  },  options: {    scales: {      yAxes: [{        ticks: {          beginAtZero: true        }      }]    }  }};    new Chart(ctx, options);</script></p><h3 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% chart 90% 300 %&#125;</span><br><span class="line">&#123;</span><br><span class="line">  type: &#x27;line&#x27;,</span><br><span class="line">  data: &#123;</span><br><span class="line"><span class="code">    labels: [&#x27;January&#x27;, &#x27;February&#x27;, &#x27;March&#x27;, &#x27;April&#x27;, &#x27;May&#x27;, &#x27;June&#x27;, &#x27;July&#x27;],</span></span><br><span class="line"><span class="code">    datasets: [&#123;</span></span><br><span class="line"><span class="code">      label: &#x27;First dataset&#x27;,</span></span><br><span class="line"><span class="code">      backgroundColor: &#x27;rgb(255, 99, 132)&#x27;,</span></span><br><span class="line"><span class="code">      borderColor: &#x27;rgb(255, 99, 132)&#x27;,</span></span><br><span class="line"><span class="code">      data: [0, 10, 5, 2, 20, 30, 45]</span></span><br><span class="line"><span class="code">      &#125;]</span></span><br><span class="line"><span class="code">  &#125;,</span></span><br><span class="line"><span class="code">  options: &#123;</span></span><br><span class="line"><span class="code">    responsive: true,</span></span><br><span class="line"><span class="code">    title: &#123;</span></span><br><span class="line"><span class="code">    display: true,</span></span><br><span class="line"><span class="code">    text: &#x27;Chart.js Line Chart&#x27;</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% endchart %&#125;</span></span><br></pre></td></tr></table></figure><p>折线图效果展示：<br><div style="width: 90%;margin: 0 auto">    <canvas id="chart693" style="height: 300px"></canvas></div><script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script><script type="text/javascript">    var ctx = document.getElementById('chart693').getContext('2d');    var options = {  type: 'line',  data: {    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],    datasets: [{      label: 'First dataset',      backgroundColor: 'rgb(255, 99, 132)',      borderColor: 'rgb(255, 99, 132)',      data: [0, 10, 5, 2, 20, 30, 45]      }]  },  options: {    responsive: true,    title: {    display: true,    text: 'Chart.js Line Chart'    }  }};    new Chart(ctx, options);</script></p><h3 id="环形图、饼状图"><a href="#环形图、饼状图" class="headerlink" title="环形图、饼状图"></a>环形图、饼状图</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% chart 90% 300 %&#125;</span><br><span class="line">&#123;</span><br><span class="line">  type: &#x27;pie&#x27;,</span><br><span class="line">  data: &#123;</span><br><span class="line"><span class="code">    labels: [&#x27;Red&#x27;, &#x27;Blue&#x27;, &#x27;Yellow&#x27;],</span></span><br><span class="line"><span class="code">    datasets: [&#123;</span></span><br><span class="line"><span class="code">      label: &#x27;First Dataset&#x27;,</span></span><br><span class="line"><span class="code">      data: [300, 50, 100],</span></span><br><span class="line"><span class="code">      backgroundColor: [&#x27;rgb(255, 99, 132)&#x27;, &#x27;rgb(54, 162, 235)&#x27;, &#x27;rgb(255, 205, 86)&#x27;]</span></span><br><span class="line"><span class="code">    &#125;]</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% endchart %&#125;</span></span><br></pre></td></tr></table></figure><p>环形图、饼状图效果展示：<br><div style="width: 90%;margin: 0 auto">    <canvas id="chart6929" style="height: 300px"></canvas></div><script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script><script type="text/javascript">    var ctx = document.getElementById('chart6929').getContext('2d');    var options = {  type: 'pie',  data: {    labels: ['Red', 'Blue', 'Yellow'],    datasets: [{      label: 'First Dataset',      data: [300, 50, 100],      backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)']    }]  }};    new Chart(ctx, options);</script></p><h3 id="雷达图"><a href="#雷达图" class="headerlink" title="雷达图"></a>雷达图</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% chart 90% 300 %&#125;</span><br><span class="line">&#123;</span><br><span class="line">  type: &#x27;radar&#x27;,</span><br><span class="line">  data: &#123;</span><br><span class="line"><span class="code">    labels: [&#x27;Eating&#x27;, &#x27;Drinking&#x27;, &#x27;Sleeping&#x27;, &#x27;Designing&#x27;, &#x27;Coding&#x27;, &#x27;Cycling&#x27;, &#x27;Running&#x27;],</span></span><br><span class="line"><span class="code">    datasets: [&#123;</span></span><br><span class="line"><span class="code">      label: &#x27;First Dataset&#x27;,</span></span><br><span class="line"><span class="code">      data: [65, 59, 90, 81, 56, 55, 40],</span></span><br><span class="line"><span class="code">      fill: true,</span></span><br><span class="line"><span class="code">      backgroundColor: &#x27;rgba(255, 99, 132, 0.2)&#x27;,</span></span><br><span class="line"><span class="code">      borderColor: &#x27;rgb(255, 99, 132)&#x27;,</span></span><br><span class="line"><span class="code">      pointBackgroundColor: &#x27;rgb(255, 99, 132)&#x27;,</span></span><br><span class="line"><span class="code">      pointBorderColor: &#x27;#fff&#x27;,</span></span><br><span class="line"><span class="code">      pointHoverBackgroundColor: &#x27;#fff&#x27;,</span></span><br><span class="line"><span class="code">      pointHoverBorderColor: &#x27;rgb(255, 99, 132)&#x27;</span></span><br><span class="line"><span class="code">    &#125;, &#123;</span></span><br><span class="line"><span class="code">      label: &#x27;Second Dataset&#x27;,</span></span><br><span class="line"><span class="code">      data: [28, 48, 40, 19, 96, 27, 100],</span></span><br><span class="line"><span class="code">      fill: true,</span></span><br><span class="line"><span class="code">      backgroundColor: &#x27;rgba(54, 162, 235, 0.2)&#x27;,</span></span><br><span class="line"><span class="code">      borderColor: &#x27;rgb(54, 162, 235)&#x27;,</span></span><br><span class="line"><span class="code">      pointBackgroundColor: &#x27;rgb(54, 162, 235)&#x27;,</span></span><br><span class="line"><span class="code">      pointBorderColor: &#x27;#fff&#x27;,</span></span><br><span class="line"><span class="code">      pointHoverBackgroundColor: &#x27;#fff&#x27;,</span></span><br><span class="line"><span class="code">      pointHoverBorderColor: &#x27;rgb(54, 162, 235)&#x27;</span></span><br><span class="line"><span class="code">    &#125;]</span></span><br><span class="line"><span class="code">  &#125;,</span></span><br><span class="line"><span class="code">  options: &#123;</span></span><br><span class="line"><span class="code">    elements: &#123;</span></span><br><span class="line"><span class="code">      line: &#123;</span></span><br><span class="line"><span class="code">        tension: 0,</span></span><br><span class="line"><span class="code">        borderWidth: 3</span></span><br><span class="line"><span class="code">      &#125;</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% endchart %&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">雷达图效果展示：</span><br><span class="line"></span><br><span class="line">&#123;% chart 90% 300 %&#125;</span><br><span class="line">&#123;</span><br><span class="line">  type: &#x27;radar&#x27;,</span><br><span class="line">  data: &#123;</span><br><span class="line"><span class="code">    labels: [&#x27;Eating&#x27;, &#x27;Drinking&#x27;, &#x27;Sleeping&#x27;, &#x27;Designing&#x27;, &#x27;Coding&#x27;, &#x27;Cycling&#x27;, &#x27;Running&#x27;],</span></span><br><span class="line"><span class="code">    datasets: [&#123;</span></span><br><span class="line"><span class="code">      label: &#x27;First Dataset&#x27;,</span></span><br><span class="line"><span class="code">      data: [65, 59, 90, 81, 56, 55, 40],</span></span><br><span class="line"><span class="code">      fill: true,</span></span><br><span class="line"><span class="code">      backgroundColor: &#x27;rgba(255, 99, 132, 0.2)&#x27;,</span></span><br><span class="line"><span class="code">      borderColor: &#x27;rgb(255, 99, 132)&#x27;,</span></span><br><span class="line"><span class="code">      pointBackgroundColor: &#x27;rgb(255, 99, 132)&#x27;,</span></span><br><span class="line"><span class="code">      pointBorderColor: &#x27;#fff&#x27;,</span></span><br><span class="line"><span class="code">      pointHoverBackgroundColor: &#x27;#fff&#x27;,</span></span><br><span class="line"><span class="code">      pointHoverBorderColor: &#x27;rgb(255, 99, 132)&#x27;</span></span><br><span class="line"><span class="code">    &#125;, &#123;</span></span><br><span class="line"><span class="code">      label: &#x27;Second Dataset&#x27;,</span></span><br><span class="line"><span class="code">      data: [28, 48, 40, 19, 96, 27, 100],</span></span><br><span class="line"><span class="code">      fill: true,</span></span><br><span class="line"><span class="code">      backgroundColor: &#x27;rgba(54, 162, 235, 0.2)&#x27;,</span></span><br><span class="line"><span class="code">      borderColor: &#x27;rgb(54, 162, 235)&#x27;,</span></span><br><span class="line"><span class="code">      pointBackgroundColor: &#x27;rgb(54, 162, 235)&#x27;,</span></span><br><span class="line"><span class="code">      pointBorderColor: &#x27;#fff&#x27;,</span></span><br><span class="line"><span class="code">      pointHoverBackgroundColor: &#x27;#fff&#x27;,</span></span><br><span class="line"><span class="code">      pointHoverBorderColor: &#x27;rgb(54, 162, 235)&#x27;</span></span><br><span class="line"><span class="code">    &#125;]</span></span><br><span class="line"><span class="code">  &#125;,</span></span><br><span class="line"><span class="code">  options: &#123;</span></span><br><span class="line"><span class="code">    elements: &#123;</span></span><br><span class="line"><span class="code">      line: &#123;</span></span><br><span class="line"><span class="code">        tension: 0,</span></span><br><span class="line"><span class="code">        borderWidth: 3</span></span><br><span class="line"><span class="code">      &#125;</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% endchart %&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="section">### 气泡图</span></span><br><span class="line"><span class="code">```markdown</span></span><br><span class="line"><span class="code">&#123;% chart 90% 300 %&#125;</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">  type: &#x27;bubble&#x27;,</span></span><br><span class="line"><span class="code">  data: &#123;</span></span><br><span class="line"><span class="code">    datasets: [&#123;</span></span><br><span class="line"><span class="code">      label: &#x27;First Dataset&#x27;,</span></span><br><span class="line"><span class="code">      data: [&#123;</span></span><br><span class="line"><span class="code">        x: 20,</span></span><br><span class="line"><span class="code">        y: 30,</span></span><br><span class="line"><span class="code">        r: 6</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 25,</span></span><br><span class="line"><span class="code">        y: 20,</span></span><br><span class="line"><span class="code">        r: 8</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 32,</span></span><br><span class="line"><span class="code">        y: 6,</span></span><br><span class="line"><span class="code">        r: 7</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 35,</span></span><br><span class="line"><span class="code">        y: 26,</span></span><br><span class="line"><span class="code">        r: 9</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 40,</span></span><br><span class="line"><span class="code">        y: 10,</span></span><br><span class="line"><span class="code">        r: 5</span></span><br><span class="line"><span class="code">      &#125;],</span></span><br><span class="line"><span class="code">      backgroundColor: &#x27;rgb(255, 99, 132)&#x27;</span></span><br><span class="line"><span class="code">    &#125;]</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% endchart %&#125;</span></span><br></pre></td></tr></table></figure><p>气泡图效果展示：</p><div style="width: 90%;margin: 0 auto">    <canvas id="chart2172" style="height: 300px"></canvas></div><script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script><script type="text/javascript">    var ctx = document.getElementById('chart2172').getContext('2d');    var options = {  type: 'bubble',  data: {    datasets: [{      label: 'First Dataset',      data: [{        x: 20,        y: 30,        r: 6      }, {        x: 25,        y: 20,        r: 8      }, {        x: 32,        y: 6,        r: 7      }, {        x: 35,        y: 26,        r: 9      }, {        x: 40,        y: 10,        r: 5      }],      backgroundColor: 'rgb(255, 99, 132)'    }]  }};    new Chart(ctx, options);</script><h3 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% chart 90% 300 %&#125;</span><br><span class="line">&#123;</span><br><span class="line">  type: &#x27;scatter&#x27;,</span><br><span class="line">  data: &#123;</span><br><span class="line"><span class="code">    labels: [&#x27;January&#x27;, &#x27;February&#x27;, &#x27;March&#x27;, &#x27;April&#x27;, &#x27;May&#x27;, &#x27;June&#x27;, &#x27;July&#x27;],</span></span><br><span class="line"><span class="code">    datasets: [&#123;</span></span><br><span class="line"><span class="code">      label: &#x27;First dataset&#x27;,</span></span><br><span class="line"><span class="code">      borderColor: &#x27;rgb(255, 99, 132)&#x27;,</span></span><br><span class="line"><span class="code">      backgroundColor: &#x27;rgb(255, 99, 132)&#x27;,</span></span><br><span class="line"><span class="code">      data: [&#123;</span></span><br><span class="line"><span class="code">        x: 12,</span></span><br><span class="line"><span class="code">        y: 45,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 12,</span></span><br><span class="line"><span class="code">        y: 13,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 56,</span></span><br><span class="line"><span class="code">        y: 3,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 5,</span></span><br><span class="line"><span class="code">        y: 87,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 43,</span></span><br><span class="line"><span class="code">        y: 76,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 34,</span></span><br><span class="line"><span class="code">        y: 8,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 9,</span></span><br><span class="line"><span class="code">        y: 53,</span></span><br><span class="line"><span class="code">      &#125;]</span></span><br><span class="line"><span class="code">    &#125;, &#123;</span></span><br><span class="line"><span class="code">      label: &#x27;Second dataset&#x27;,</span></span><br><span class="line"><span class="code">      borderColor: &#x27;rgb(54, 162, 235)&#x27;,</span></span><br><span class="line"><span class="code">      backgroundColor: &#x27;rgb(54, 162, 235)&#x27;,</span></span><br><span class="line"><span class="code">      data: [&#123;</span></span><br><span class="line"><span class="code">        x: 56,</span></span><br><span class="line"><span class="code">        y: 12,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 7,</span></span><br><span class="line"><span class="code">        y: 12,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 87,</span></span><br><span class="line"><span class="code">        y: 24,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 34,</span></span><br><span class="line"><span class="code">        y: 45,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 65,</span></span><br><span class="line"><span class="code">        y: 27,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 8,</span></span><br><span class="line"><span class="code">        y: 37,</span></span><br><span class="line"><span class="code">      &#125;, &#123;</span></span><br><span class="line"><span class="code">        x: 24,</span></span><br><span class="line"><span class="code">        y: 89,</span></span><br><span class="line"><span class="code">      &#125;]</span></span><br><span class="line"><span class="code">    &#125;],</span></span><br><span class="line"><span class="code">    options: &#123;</span></span><br><span class="line"><span class="code">      title: &#123;</span></span><br><span class="line"><span class="code">        display: true,</span></span><br><span class="line"><span class="code">        text: &#x27;Chart.js Scatter Chart&#x27;</span></span><br><span class="line"><span class="code">      &#125;,</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% endchart %&#125;</span></span><br></pre></td></tr></table></figure><p>散点图效果展示：<br><div style="width: 90%;margin: 0 auto">    <canvas id="chart4995" style="height: 300px"></canvas></div><script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script><script type="text/javascript">    var ctx = document.getElementById('chart4995').getContext('2d');    var options = {  type: 'scatter',  data: {    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],    datasets: [{      label: 'First dataset',      borderColor: 'rgb(255, 99, 132)',      backgroundColor: 'rgb(255, 99, 132)',      data: [{        x: 12,        y: 45,      }, {        x: 12,        y: 13,      }, {        x: 56,        y: 3,      }, {        x: 5,        y: 87,      }, {        x: 43,        y: 76,      }, {        x: 34,        y: 8,      }, {        x: 9,        y: 53,      }]    }, {      label: 'Second dataset',      borderColor: 'rgb(54, 162, 235)',      backgroundColor: 'rgb(54, 162, 235)',      data: [{        x: 56,        y: 12,      }, {        x: 7,        y: 12,      }, {        x: 87,        y: 24,      }, {        x: 34,        y: 45,      }, {        x: 65,        y: 27,      }, {        x: 8,        y: 37,      }, {        x: 24,        y: 89,      }]    }],    options: {      title: {        display: true,        text: 'Chart.js Scatter Chart'      },    }  }};    new Chart(ctx, options);</script></p><h3 id="混合图"><a href="#混合图" class="headerlink" title="混合图"></a>混合图</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% chart 90% 300 %&#125;</span><br><span class="line">&#123;</span><br><span class="line">  type: &#x27;bar&#x27;,</span><br><span class="line">  data: &#123;</span><br><span class="line"><span class="code">    labels: [&#x27;January&#x27;, &#x27;February&#x27;, &#x27;March&#x27;, &#x27;April&#x27;],</span></span><br><span class="line"><span class="code">    datasets: [&#123;</span></span><br><span class="line"><span class="code">      label: &#x27;Bar Dataset&#x27;,</span></span><br><span class="line"><span class="code">      data: [10, 20, 30, 40],</span></span><br><span class="line"><span class="code">      borderColor: &#x27;rgb(255, 99, 132)&#x27;,</span></span><br><span class="line"><span class="code">      backgroundColor: &#x27;rgba(255, 99, 132)&#x27;</span></span><br><span class="line"><span class="code">    &#125;, &#123;</span></span><br><span class="line"><span class="code">      label: &#x27;Line Dataset&#x27;,</span></span><br><span class="line"><span class="code">      data: [20, 30, 40, 50],</span></span><br><span class="line"><span class="code">      type: &#x27;line&#x27;,</span></span><br><span class="line"><span class="code">      fill: false,</span></span><br><span class="line"><span class="code">      borderColor: &#x27;rgb(54, 162, 235)&#x27;</span></span><br><span class="line"><span class="code">    &#125;]</span></span><br><span class="line"><span class="code">  &#125;,</span></span><br><span class="line"><span class="code">  options: &#123;</span></span><br><span class="line"><span class="code">    scales: &#123;</span></span><br><span class="line"><span class="code">      yAxes: [&#123;</span></span><br><span class="line"><span class="code">        ticks: &#123;</span></span><br><span class="line"><span class="code">          beginAtZero: true</span></span><br><span class="line"><span class="code">        &#125;</span></span><br><span class="line"><span class="code">      &#125;]</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% endchart %&#125;</span></span><br></pre></td></tr></table></figure><p>混合图效果展示：<br><div style="width: 90%;margin: 0 auto">    <canvas id="chart839" style="height: 300px"></canvas></div><script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script><script type="text/javascript">    var ctx = document.getElementById('chart839').getContext('2d');    var options = {  type: 'bar',  data: {    labels: ['January', 'February', 'March', 'April'],    datasets: [{      label: 'Bar Dataset',      data: [10, 20, 30, 40],      borderColor: 'rgb(255, 99, 132)',      backgroundColor: 'rgba(255, 99, 132)'    }, {      label: 'Line Dataset',      data: [20, 30, 40, 50],      type: 'line',      fill: false,      borderColor: 'rgb(54, 162, 235)'    }]  },  options: {    scales: {      yAxes: [{        ticks: {          beginAtZero: true        }      }]    }  }};    new Chart(ctx, options);</script></p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>如果你想了解更多，官方文档 是不二之选。如果你英语不好，那么可以看看 中文文档，所有的例子和属性都能在里面找到，祝你玩得开心。</p>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>了解搭建Hexo博客的工作原理</title>
      <link href="/post/aac6bd89.html"/>
      <url>/post/aac6bd89.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>Hexo 官网 —–快速、简洁且高效的博客框架： <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a><br>你可能用过hexo(或者jekyll)来搭建自己的博客网站。通常我们在安装、配置完成hexo之后，借助hexo，一般通过以下步骤，就可以完成一篇博客的编写及发布，真是方便极了：</p></blockquote><p>在不断学习的过程中对个人博客的技术选型又有了新的想法，想搭建一个自己喜欢的 UI 风格并且有后台的博客 CMS</p><p>于是回过头来，开始对 hexo 原理好奇起来，本着知其然更要知其所以然的态度，搜了许多有关资料，现在对 hexo 有了些新的认识，就来梳理记录一下</p><blockquote><p>梳理一下 Hexo 的优缺点之我见</p></blockquote><p><strong>优点：</strong></p><ul><li>生态丰富，好看的主题多</li><li>相关文档多，解决 bug 有优势</li><li>通过修改 yaml 配置文件来修改样式比较简单</li></ul><p><strong>缺点：</strong></p><ul><li>初次配置会遇到各种各样的 bug，对新手和非专业人员不是很友好</li><li>每次发布文章都需要重新部署，没有一个后台管理系统</li><li>对于程序员来说，还是得拥有一个自己亲手撸的个人博客</li></ul><p>首先需阐明的是本文用 Windows 系统为例，而有相当一部分 Hexo 是搭建在 LNMP 或 LAMP 环境下的，但这一切仅仅是物理存储位置发生了变化，原理依旧不变。 LNMP 指的是 linux+nginx+mysql+php，这是一款功能非常强大的环境套件，nginx 以其轻量而高效受到建站者的青睐<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo init           // 创建一个新的hexo项目</span><br><span class="line">$ hexo new mynewblog  // 新建一篇标题为mynewblog的文章</span><br><span class="line">$ hexo server         // 为hexo在本地起一个http server, 然后通过浏览器访问博客</span><br><span class="line">$ hexo generate       // 生成将要发布的博客网站包含html在内的静态资源</span><br><span class="line">$ hexo deploy         // 将generate的结果发布到_config.yml中指定的仓库</span><br></pre></td></tr></table></figure></p><p>可是，从hexo init到hexo deploy中间发生了什么呢？为了搞清楚这一过程、理解hexo的工作原理，本文将试着回答以下问题:</p><ul><li>命令行中的hexo是什么</li><li>hexo是怎么将我们写好的markdown转换成html的</li><li>hexo插件是如何工作的</li><li>本地的hexo项目和git page有什么关系</li></ul><p>本文<strong>不是</strong>:</p><ul><li>hexo的安装、使用教程</li><li>git page的使用教程<h2 id="命令行中的hexo是什么"><a href="#命令行中的hexo是什么" class="headerlink" title="命令行中的hexo是什么?"></a>命令行中的hexo是什么?</h2><a href="https://github.com/hexojs/hexo">hexo</a>项目在github上已经有超过17k的star了，但是你知道吗，日常我们在命令行”操作”hexo时所输入的<strong>hexo</strong>(例如hexo init)并不是这个17k个star的项目! 是的，我们在命令行中所输入的”hexo”实际是<a href="https://github.com/hexojs/hexo-cli/tree/master/lib"><strong>hexo-cli</strong></a>项目，该项目在github上的star还不足50个。</li></ul><blockquote><p>hexo可以粗略分为三个子项目，分别是:</p><ul><li>hexo-cli</li><li>hexo (下文中用hexo core来指代)</li><li>hexo plugins</li></ul><p>其中hexo plugins不是指某一个单独的项目，而是泛指所有的hexo plugin项目。</p><p>请看下图:<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/how%20hexo%20works/20190926162927.png" alt=""><br>让我们结合这张图来大致看看这三个项目的作用(下面的链接均是指向Github中相关的源码):</p><ul><li><p>hexo-cli</p><p>hexo命令行项目，作用是:</p><ol><li>启动hexo命令(进程)，及其参数<a href="https://github.com/hexojs/hexo-cli/blob/5e0969ffa64dec427428a245ab2d65beaf23123b/lib/hexo.js#L49">解析</a>机制。每次我们输入’hexo xxx’命令后，都会通过node调用hexo-cli中的<a href="https://github.com/hexojs/hexo-cli/blob/5e0969ffa64dec427428a245ab2d65beaf23123b/lib/hexo.js#L13">entry函数</a>(比如，可以把’hexo init’视为’node hexo-cli/entry.js init’)</li><li>实现hexo命令的<a href="https://github.com/hexojs/hexo-cli/tree/master/lib/console">三个初始参数(功能)</a>: init / version / help</li><li><a href="https://github.com/hexojs/hexo-cli/blob/5e0969ffa64dec427428a245ab2d65beaf23123b/lib/hexo.js#L85">加载</a>hexo核心模块，并<a href="https://github.com/hexojs/hexo-cli/blob/5e0969ffa64dec427428a245ab2d65beaf23123b/lib/hexo.js#L47">初始化</a></li></ol></li><li><p>hexo core</p><p>hexo核心，他的主要作用如下:</p><ol><li>实现了hexo功能<a href="https://github.com/hexojs/hexo/blob/master/lib/hexo/index.js#L59">扩展对象</a></li><li>实现了hexo核心功能, 如new, publish, generate等（其实是一些hexo插件，下文中会详细分析）</li></ol></li><li><p>hexo plugins</p><p>指一些能够扩展hexo的插件。插件可以按功能分成两类:</p><ol><li>扩展hexo命令的参数，如<a href="https://github.com/hexojs/hexo-server">hexo-server</a>(安装这个插件以后才能使用hexo server命令)</li><li>扩展hexo解析文件的”能力”，如增加jade模版解析功能的<a href="https://github.com/hexojs/hexo-renderer-jade">hexo-render-jade</a>插件</li></ol></li></ul></blockquote><h2 id="从markdown到html的旅程"><a href="#从markdown到html的旅程" class="headerlink" title="从markdown到html的旅程"></a>从markdown到html的旅程</h2><p>简单来说，hexo中，从markdown到html的generate过程中做了两件事：</p><ol><li>模板渲染</li><li>模板渲染</li></ol><p>是的，就是这样，就是两次模板渲染。只不过两次渲染的输入、渲染模板的引擎、输出不一样。此处应该有一个表格：<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/how%20hexo%20works/20190926162956.png" alt=""><br>还得有一张图:<br><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/how%20hexo%20works/20190926163010.png" alt=""></p><blockquote><p>对上面表格和图的说明:</p><ul><li>hexo core在generate的过程中会产生一个对象，我们在这里把这个对象称为article。第一次渲染的主要目的就是给这个对象添加title,content等属性。其中:<ol><li>article.title, article.date, article.tags, article.categories等属性来自yml front的部分</li><li>article.content是markdown文章解析后的html片段</li></ol></li><li>hexo项目目录下包含三个子目录，<ol><li>source目录，写博客的主要工作目录。这个目录下存放的是我们的markdown文章以及js, images, css</li><li>themes目录，主题目录，定义了即将生成的html的layout, 和html中需要加载的css, js, images</li><li>public目录, hexo generate的最终输出目录。里面包含了整个博客网站的html, css, js, images</li></ol></li><li>第二次渲染，需要引入对应模板文件格式的插件，如.ejs文件就需要使用hexo-render-ejs插件，.jade文件需要使用hexo-render-jade插件，而.sass文件则需要hexo-render-sass插件来转换成css文件。hexo的这一设计有点类似webpack中的loader。</li></ul></blockquote><h2 id="hexo插件是如何工作的"><a href="#hexo插件是如何工作的" class="headerlink" title="hexo插件是如何工作的"></a>hexo插件是如何工作的</h2><p>hexo和webpack还有一点类似的地方就是插件驱动理念。即hexo(和webpack)是先实现一套(插件)扩展系统，然后再往扩展系统中添加插件来实现自身的功能。即我们日常使用的hexo init, hexo new，hexo generate等等功能都是通过一个个插件(其实就是一个个function)实现的。</p><blockquote><p>具体来讲就是:</p><ol><li><a href="https://github.com/hexojs/hexo/blob/master/lib/hexo/index.js#L59">hexo.extend</a>这个对象的每个属性都是一个用来绑定(特定)插件的对象。（所谓”绑定”，其实就是对象的register方法）</li><li>hexo<a href="https://github.com/hexojs/hexo/blob/master/lib/hexo/index.js#L153">初始化</a>过程中先加载内部插件，再加载外部插件</li></ol><p>而这些插件的功能分为两大类: 命令行插件和generate过程相关功能，例如：</p><ul><li>命令行插件, hexo <a href="https://github.com/hexojs/hexo/blob/master/lib/plugins/console/index.js#L47">new</a>, 是在hexo.extend.console对象上绑定的一个<a href="https://github.com/hexojs/hexo/blob/master/lib/plugins/console/new.js">插件</a></li><li>generate过程相关的插件，如上文提到的往article对象添加title,content等属性的功能，是通过往hexo.extend.processer对象上<a href="https://github.com/hexojs/hexo/blob/master/lib/plugins/processor/index.js#L13">绑定</a>post插件来<a href="https://github.com/hexojs/hexo/blob/master/lib/plugins/processor/post.js#L52">实现</a>的</li></ul><p>所以，当我们想自己动手写插件时，就是像hexo官网给出的<a href="https://hexo.io/api/console.html">这样</a>,调用某个对象的register方法，如hexo.extend.console.register。</p></blockquote><h2 id="hexo和git-page"><a href="#hexo和git-page" class="headerlink" title="hexo和git page"></a>hexo和git page</h2><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/how%20hexo%20works/20190926163046.png" alt=""><br>如上图，(用户通过浏览器访问到的)git page上的博客网站其实是hexo generate之后生成的public目录下的内容。</p><blockquote><p>所以，一个hexo博客项目应该有两个仓库:</p><ol><li>(基于hexo init结果的)<a href="https://github.com/buildAll/blogsrc">博客编写仓库</a>。可以把这个项目看成一个代码库，用来”开发”博客网站(包含写博客，生成博客等任务)</li><li>存放(hexo generate结果的)<a href="https://github.com/buildAll/buildall.github.io">public目录仓库</a>。这个项目是”只读”的，我们不会直接修改这个仓库的内容，我们也不会对这个仓库直接进行git pull、git commit、git push等常规操作。这个仓库的内容就是public目下的内容，即是通过hexo generate产生、hexo deploy提交的。</li></ol></blockquote><h2 id="每次部署的流程"><a href="#每次部署的流程" class="headerlink" title="每次部署的流程"></a>每次部署的流程</h2><ol><li><p><strong>hexo g</strong>：生成静态文件。将我们的数据和界面模板相结合生成静态文件的过程。Hexo（node.js 程序）遍历主题文件中你的 <code>source</code> 目录（js、css、img 等静态资源），建立索引，再根据索引生成由 html、js、css、img 建立的纯静态文件并放在 public 文件夹里。public 就是你的博客了，而这些恰好能被 gitpages 识别。</p></li><li><p><strong>hexo d</strong>：部署文件。主要是根据在_config.yml 中配置的 git 仓库或者 coding 的地址，将 public 文件通过 git 方式 push 到上传到 github 或 coding 的指定分支，然后在根据 pages 服务呈现出页面。当然把 public 文件部署至你的服务器也是可以的</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/terrydai928/blog-img/how%20hexo%20works/20230202130514.png" alt=""></p><p>图为 git 主要命令</p><h2 id="模板引擎–Hexo-怎样生成-HTML"><a href="#模板引擎–Hexo-怎样生成-HTML" class="headerlink" title="模板引擎–Hexo 怎样生成 HTML"></a>模板引擎–Hexo 怎样生成 HTML</h2><p>模板引擎的作用，就是将界面与数据分离。最简单的原理是将模板内容中指定的地方替换成数据，实现业务代码与逻辑代码分离</p><ol><li><p>请看 Hexo 文件结构，<code>source</code> 文件夹与 <code>themes</code> 文件夹是同级的，进而我们就可以将 <code>source</code> 文件夹理解为数据库，而主题文件夹相当于界面。<code>hexo g</code> 就将我们的数据和界面相结合生成静态文件 <code>public</code></p></li><li><p>Hexo 模板引擎默认使用 <code>ejs</code> 编写（本文以 ejs 模板举例，其他的有 swig、jade）。hexo 首先会解析.md 文件，然后根据 layout 变量判断布局类型，再调用相应布局文件，如此这番每一块内容都是独立的，提供代码的复用性。最终生成一个 html 页面</p></li><li><p>布局模板文件位于 <code>layout</code> 文件夹下，以下将<strong>布局模板</strong>简称<strong>模板</strong>。<code>layout</code> 文件结构在不同主题下文件排布不一，但整体框架是一样的，有：</p><ul><li>公共模板。里面引入了 head、footer 等公共组件，在其他模板下会自动引入公共模板</li><li>首页模板</li><li>文章模板</li><li>分类模板</li><li>归档模板</li><li><p>……</p><blockquote><p>每个模板都默认使用 layout 布局，您可在文章的前置申明中指定其他布局，比如 “post” 或者 “page” 或是设为 false 来关闭布局功能（如果不填默认是 post，这个在_config.yml 中可以设置默认值），您甚至可在布局中再使用其他布局来建立嵌套布局。<br>在我们新建页面或者新建文章的使用可以选定我们使用的模板。<code>hexo new [layout] &lt;title&gt;</code> 就会使用对应的模板</p></blockquote></li></ul></li><li><p>模板是可以自定义的</p></li></ol><h2 id="数据填充"><a href="#数据填充" class="headerlink" title="数据填充"></a>数据填充</h2><p>上面解释了界面的原理，此篇将分析数据及数据如何与界面结合。</p><p>数据的填充主要是 <code>hexo g</code> 的时候将数据传递给 ejs 模板，然后再由 ejs 模板填充到 HTML 中。</p><h2 id="配置文件中的数据"><a href="#配置文件中的数据" class="headerlink" title="配置文件中的数据"></a>配置文件中的数据</h2><p>Hexo 的配置文件 <code>_config.yml</code> 使用 yml 语法 。例如博客的名字、副标题等等之类。这些数据项组织在 config 对象中。可以数字、字符串、对象、数组，</p><h2 id="配置文件中数据的使用"><a href="#配置文件中数据的使用" class="headerlink" title="配置文件中数据的使用"></a>配置文件中数据的使用</h2><p>如果要在模板中使用某个具体的值，比如字符串、数字、逻辑变量或者对象的某个成员，可以在主题的模板文件 ejs 中直接使用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% block title %&#125; &#123;&#123; page.title &#125;&#125; | &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h2 id="Hexo-中的变量"><a href="#Hexo-中的变量" class="headerlink" title="Hexo 中的变量"></a>Hexo 中的变量</h2><p>Hexo 提供了很多的变量，比如我们上面使用的 page 变量，还有 site 变量等，这些都是 Hexo 提供的，我们可以拿来直接使用的，常用的变量有：</p><ul><li>site：对应整个网站的变量，一般会用到 site.posts.length 制作分页器。<ul><li>site.posts 所有文章</li><li>site.pages 所有分页</li><li>site.categories 所有分类</li><li>site.tags 所有标签</li></ul></li><li>page：存放当前页面的信息，例如我在 index.ejs 中使用 page.posts 获取了当前页面的所有文章而不是使用 site.posts。</li><li>config：config 变量我们在主目录下配置文件 _config.yml 中保存的信息。</li><li>theme：theme 变量是我们在主题目录下配置文件 _config.yml 中保存的信息。</li><li>path：当前页面的路径（不含根路径）。</li><li>url：页面完整网址。</li></ul><h2 id="页面变量"><a href="#页面变量" class="headerlink" title="页面变量"></a>页面变量</h2><p>Page (page) 这里指的是 hexo new page 创建的那个页面</p><ul><li>page.title：文章标题</li><li>page.date：文章建立日期</li><li>page.updated：文章更新日期</li><li>page.comments：留言是否开启</li><li>page.layout：布局名称</li><li>page.content：文章完整内容</li><li>page.excerpt：文章摘要</li><li>page.more：除了摘要的其他内容</li><li>page.source：文章原始路劲</li><li>page.full_source：文章完整原始路径</li><li>page.path：文章网址（不含根路径），通常在主题中使用 url_for (page.path)</li><li>page.permalink：文章永久网址</li><li>page.prev：上一篇文章，如果此为第一篇文章则为 null</li><li>page.next：下一篇文章，如果此为最后一篇文章则为 null</li><li>page.raw：文章原始内容</li><li>page.photos：文章的照片（用于相册）</li><li>page.link：文章的外链（用于链接文章）</li></ul><h2 id="Post-post-变量"><a href="#Post-post-变量" class="headerlink" title="Post (post) 变量"></a>Post (post) 变量</h2><p>这里指的是文章页面，与 page 布局相同，添加如下变量：</p><ul><li>page.pulished：文章非草稿为 true</li><li>page.categories：文章分类</li><li>page.tags：文章标签</li></ul><h2 id="首页-index"><a href="#首页-index" class="headerlink" title="首页 (index)"></a>首页 (index)</h2><ul><li>page.per_page：每一页显示的文章数</li><li>page.total：文章数量</li><li>page.current：当前页码</li><li>page.current_url：当前页的 URL</li><li>page.posts：当前页的文章</li><li>page.prev：前一页页码，如果为第一页，该值为 0</li><li>page.prev_link：前一页 URL，如果为第一页，则为’’</li><li>page.next：后一页页码，如果为最后一页，则为 0</li><li>page.next_link：后一页 URL，如果为最后一页，则为’’</li><li>page.path：当前页网址（不含根路径），通常在主题中使用 url_for (page.path)</li></ul><h2 id="归档页-archive"><a href="#归档页-archive" class="headerlink" title="归档页 (archive)"></a>归档页 (archive)</h2><p>与 index 布局相同，但是新增如下变量：</p><ul><li>archive 为 true</li><li>year 归档年份（4 位）</li><li>month 归档月份（不包含 0）</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本质而言 Hexo 是一款静态页面生成工具</p><p>基于 Hexo 搭建的博客原理简单的说，是一个数据和界面的结合体。数据以.md 与.html 等格式存储于数据库 <code>source</code> 文件夹中，界面存于 <code>themes</code> 文件夹中。每次运行 <code>hexo g</code> 命令，遍历数据建立索引，根据索引把主题界面文件生成至 <code>public</code> 文件夹中，即 html 文件。再运行 <code>hexo d</code> 将文件托管，由 pages 服务显示。</p><p>hexo简洁、强大的功能来自于自身优雅的系统设计:</p><ol><li>hexo进程启动、hexo核心对象封装、插件系统分别独立</li><li>自身采用插件驱动，生来就具备高可扩展性</li></ol><p>参考链接：<a href="https://blog.csdn.net/Night__breeze/article/details/122389128">https://blog.csdn.net/Night__breeze/article/details/122389128</a><br>参考链接：<a href="https://juejin.cn/post/6844903490930622471">https://juejin.cn/post/6844903490930622471</a><br>参考链接：<a href="http://coderunthings.com/2017/08/20/howhexoworks">http://coderunthings.com/2017/08/20/howhexoworks</a></p>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 相关的优秀插件的精选列表</title>
      <link href="/post/a3146603.html"/>
      <url>/post/a3146603.html</url>
      
        <content type="html"><![CDATA[<h2 id="Awesome-hexo-plugins"><a href="#Awesome-hexo-plugins" class="headerlink" title="Awesome-hexo-plugins "></a>Awesome-hexo-plugins <a href="https://github.com/sindresorhus/awesome"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667.svg" alt="Awesome"></a></h2><blockquote><p>👓 推荐常用的 Hexo 插件</p><p>如果你有好的插件推荐，欢迎 pull requests 或 提出 Issues。</p></blockquote><ul><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#%E6%96%87%E7%AB%A0">文章</a><ul><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-auto-category-%E6%A0%B9%E6%8D%AE%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB"><code>hexo-auto-category</code> 根据文件目录自动生成文章分类</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-renderer-markdown-it-%E4%BD%BF%E7%94%A8-markdown-it-%E4%BD%9C%E6%B8%B2%E6%9F%93%E5%99%A8"><code>hexo-renderer-markdown-it</code> 使用 markdown-it 作渲染器</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-related-popular-posts-%E7%94%9F%E6%88%90%E7%9B%B8%E5%85%B3%E7%83%AD%E9%97%A8%E6%96%87%E7%AB%A0%E5%88%97%E8%A1%A8"><code>hexo-related-popular-posts</code> 生成相关热门文章列表</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-description-%E6%A0%B9%E6%8D%AE%E6%A0%87%E8%AE%B0%E4%BD%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0%E7%AE%80%E4%BB%8B"><code>hexo-description</code> 根据标记位置自动生成文章简介</a></li></ul></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#seo">SEO</a><ul><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-baidu-url-submit-%E5%90%91%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5"><code>hexo-baidu-url-submit</code> 向百度主动提交链接</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-autonofollow-%E5%A4%96%E9%93%BE%E8%87%AA%E5%8A%A8-nofollow"><code>hexo-autonofollow</code> 外链自动 nofollow</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-seo-link-visualizer-%E5%88%86%E6%9E%90%E9%93%BE%E6%8E%A5%E5%B9%B6%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AB%99%E7%82%B9%E7%BB%93%E6%9E%84"><code>hexo-seo-link-visualizer</code> 分析链接并可视化站点结构</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-baidu-url-push-%E7%99%BE%E5%BA%A6%E7%AB%99%E9%95%BF%E5%B9%B3%E5%8F%B0%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E5%B7%A5%E5%85%B7"><code>hexo-baidu-url-push</code> 百度站长平台自动推送工具</a></li></ul></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#%E7%94%9F%E6%88%90%E5%99%A8">生成器</a><ul><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-generator-topindex-%E7%BD%AE%E9%A1%B6%E6%96%87%E7%AB%A0"><code>hexo-generator-topindex</code> 置顶文章</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-generator-feed-%E7%94%9F%E6%88%90%E5%8D%9A%E5%AE%A2-rss"><code>hexo-generator-feed</code> 生成博客 RSS</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-generator-sitemap-%E7%94%9F%E6%88%90-sitemapxml"><code>hexo-generator-sitemap</code> 生成 sitemap.xml</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-generator-baidu-sitemap-%E7%94%9F%E6%88%90-baidusitemapxml"><code>hexo-generator-baidu-sitemap</code> 生成 baidusitemap.xml</a></li></ul></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#%E5%B7%A5%E5%85%B7">工具</a><ul><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-abbrlink-%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0%E5%94%AF%E4%B8%80id"><code>hexo-abbrlink</code> 生成文章唯一ID</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-nanoid-%E7%94%A8-nanoid-%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0%E5%94%AF%E4%B8%80id"><code>hexo-nanoid</code> 用 nanoid 生成文章唯一ID</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-translate-title-%E5%B0%86%E6%B1%89%E5%AD%97%E6%A0%87%E9%A2%98%E8%BD%AC%E6%88%90%E8%8B%B1%E6%96%87%E6%A0%87%E9%A2%98"><code>hexo-translate-title</code> 将汉字标题转成英文标题</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-all-minifier-%E5%8E%8B%E7%BC%A9%E6%89%80%E6%9C%89%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6"><code>hexo-all-minifier</code> 压缩所有静态文件</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-pwa-%E6%94%AF%E6%8C%81pwa"><code>hexo-pwa</code> 支持PWA</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-lazyload-image-%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD"><code>hexo-lazyload-image</code> 图片懒加载</a></li></ul></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#%E6%A0%87%E7%AD%BE%E6%8B%93%E5%B1%95">标签拓展</a><ul><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-codepen-v2-%E6%8F%92%E5%85%A5-codepen-%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5"><code>hexo-codepen-v2</code> 插入 Codepen 代码片段</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-tag-kbd--%E6%94%AF%E6%8C%81-kbd-%E6%A0%87%E7%AD%BE"><code>hexo-tag-kbd</code> 支持 kbd 标签</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-tag-color-block-%E9%A2%9C%E8%89%B2%E6%A0%87%E7%AD%BE"><code>hexo-tag-color-block</code> 颜色标签</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-tag-hint"><code>hexo-tag-hint</code></a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-tag-bilibili-%E6%8F%92%E5%85%A5bilibili%E8%A7%86%E9%A2%91"><code>hexo-tag-bilibili</code> 插入bilibili视频</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-ruby-character--ruby-character-tag"><code>hexo-ruby-character</code> Ruby character tag</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-github-card-github-%E7%94%A8%E6%88%B7%E8%B5%84%E6%96%99%E5%8D%A1%E7%89%87"><code>hexo-github-card</code> GitHub 用户资料卡片</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-caniuse-can-i-use-css-features"><code>hexo-caniuse</code> Can I Use CSS Features?</a></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-github-%E8%BF%BD%E8%B8%AA-github-%E4%BB%93%E5%BA%93-commit"><code>hexo-github</code> 追踪 GitHub 仓库 commit</a></li></ul></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#%E9%83%A8%E7%BD%B2">部署</a><ul><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-deployer-git-%E9%83%A8%E7%BD%B2%E5%88%B0-git"><code>hexo-deployer-git</code> 部署到 Git</a></li></ul></li><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#%E7%BE%8E%E5%8C%96">美化</a><ul><li><a href="https://github.com/TenviLi/awesome-hexo-plugins#hexo-helper-live2d-%E8%90%8C%E8%90%8C%E5%93%92%E4%BA%8C%E6%AC%A1%E5%85%83%E7%9C%8B%E6%9D%BF%E5%A8%98"><code>hexo-helper-live2d</code> 萌萌哒二次元看板娘</a></li></ul></li></ul><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><h3 id="hexo-auto-category-根据文件目录自动生成文章分类"><a href="#hexo-auto-category-根据文件目录自动生成文章分类" class="headerlink" title="hexo-auto-category 根据文件目录自动生成文章分类"></a><code>hexo-auto-category</code> 根据文件目录自动生成文章分类</h3><p>最常用的文件管理策略，就是利用文件系统目录结构(树形结构 directory-tree)。 同样，为了便于管理大量的日志文件，采用目录结构是一种简便可行的方案。<code>hexo-auto-category</code> 根据日志文件(Markdown)所在文件目录自动分类，即自动生成<code>markdown</code>的front-matter中的<code>categories</code>变量。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-auto-category --save</span></span><br></pre></td></tr></table></figure><p><strong>示例</strong></p><p>对于博客 <code>source/_post/web/framework/hexo.md</code>，该插件会自动生成以下<code>categories</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">web</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">framework</span></span><br></pre></td></tr></table></figure><p><strong>配置</strong></p><p>在站点根目录下的<code>_config.yml</code>添加：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">auto_category:</span></span><br><span class="line"> <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"> <span class="attr">depth:</span> <span class="number">1</span> <span class="comment">#生成到第几级目录分类</span></span><br></pre></td></tr></table></figure><h3 id="hexo-renderer-markdown-it-使用-markdown-it-作渲染器"><a href="#hexo-renderer-markdown-it-使用-markdown-it-作渲染器" class="headerlink" title="hexo-renderer-markdown-it 使用 markdown-it 作渲染器"></a><code>hexo-renderer-markdown-it</code> 使用 markdown-it 作渲染器</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-renderer-markdown-it --save</span></span><br></pre></td></tr></table></figure><h3 id="hexo-related-popular-posts-生成相关热门文章列表"><a href="#hexo-related-popular-posts-生成相关热门文章列表" class="headerlink" title="hexo-related-popular-posts 生成相关热门文章列表"></a><code>hexo-related-popular-posts</code> 生成相关热门文章列表</h3><p><a href="https://github.com/tea3/hexo-related-popular-posts/raw/master/src/img/hexo-rpp.png"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./hexo-rpp.png" alt="Screenshot"></a></p><p>该插件会根据文章指定的 tags 生成一系列的相关文章列表，所以发布文章请务必在 Front Matter 中指定 tags。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-related-popular-posts --save</span></span><br></pre></td></tr></table></figure><p><strong>安装该插件后需要DIY你的主题</strong></p><p>First, add the following <code>popular_posts( &#123;&#125; , post )</code> helper tag in template file for article. For example , if you use <a href="https://github.com/hexojs/hexo-theme-landscape">hexo-theme-landscape</a> , add a tag <a href="https://github.com/hexojs/hexo-theme-landscape/blob/master/layout/_partial/article.ejs#L25">here</a>.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;lt;%-</span><br><span class="line">  popular_posts( &#123;&#125; , post )</span><br><span class="line">%&amp;gt;</span><br></pre></td></tr></table></figure><p>更多详细文档请移步 <a href="https://github.com/tea3/hexo-related-popular-posts">tea3/hexo-related-popular-posts</a> 查阅。</p><h3 id="hexo-description-根据标记位置自动生成文章简介"><a href="#hexo-description-根据标记位置自动生成文章简介" class="headerlink" title="hexo-description 根据标记位置自动生成文章简介"></a><code>hexo-description</code> 根据标记位置自动生成文章简介</h3><p>If post has no description set, will auto use excerpt as <code>description</code>.</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-description --save</span><br></pre></td></tr></table></figure><p>之后在文章中标记 <code>&lt;!--more--&gt;</code> 标签即可。</p><p><strong>流程</strong></p><ol><li>Origin post</li></ol><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="section">title: Example post</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"><span class="section">## excerpt</span></span><br><span class="line"><span class="bullet">-</span> list1</span><br><span class="line"><span class="bullet">-</span> list2</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">content</span><br></pre></td></tr></table></figure><ol><li>Origin excerpt</li></ol><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section">## excerpt</span></span><br><span class="line"><span class="bullet">-</span> list1</span><br><span class="line"><span class="bullet">-</span> list2</span><br></pre></td></tr></table></figure><ol><li>Rendered excerpt</li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>excerpt<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>list2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>Finally we set pure excerpt text to description</li></ol><h2 id="SEO"><a href="#SEO" class="headerlink" title="SEO"></a>SEO</h2><h3 id="hexo-baidu-url-submit-向百度主动提交链接"><a href="#hexo-baidu-url-submit-向百度主动提交链接" class="headerlink" title="hexo-baidu-url-submit 向百度主动提交链接"></a><code>hexo-baidu-url-submit</code> 向百度主动提交链接</h3><p>主动推送Hexo博客新链接至百度搜索引擎，解决百度爬虫被禁止访问的问题，提升网站收录质量和速度。</p><p><a href="https://camo.githubusercontent.com/1c4ec399b761d3c6c30be5f57c50909a4e6854eb/687474703a2f2f6875692d77616e672e696e666f2f323031362f31302f32332f4865786f2545362538462539322545342542422542362545342542392538422545372539392542452545352542412541362545342542382542422545352538412541382545362538462539302545342542412541342545392539332542452545362538452541352f62616964755f75726c735f7375626d69742e706e67"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./687474703a2f2f6875692d77616e672e696e666f2f323031362f31302f32332f4865786f2545362538462539322545342542422542362545342542392538422545372539392542452545352542412541362545342542382542422545352538412541382545362538462539302545342542412541342545392539332542452545362538452541352f62616964755f75726c735f7375626d69742e706e67.txt" alt="ç�¾åº¦ä¸&quot;å�¨æ��äº¤"></a></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><p>把以下内容配置到<code>_config.yml</code>文件中:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">1</span> <span class="comment">## 提交最新的一个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">www.nuist.today</span> <span class="comment">## 在百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">your_token</span> <span class="comment">## 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment">## 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure><p>其次，记得查看_config.ym文件中url的值， 必须包含是百度站长平台注册的域名（一般有www）， 比如:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://www.nuist.today</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">p/:title/</span></span><br></pre></td></tr></table></figure><p>最后，加入新的deployer:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span> <span class="comment"># 百度</span></span><br></pre></td></tr></table></figure><p>执行<code>hexo deploy</code>的时候，新的连接就会被推送了。</p><p><strong>支持熊掌号</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">1000</span> <span class="comment">## 提交最新的一个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">alili.tech</span> <span class="comment">## 在百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">xxxxx</span> <span class="comment">## 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment">## 文本文档的地址， 新链接会保存在此文本文档里</span></span><br><span class="line">  <span class="attr">xz_appid:</span> <span class="string">&#x27;xxxxxx&#x27;</span> <span class="comment">## 你的熊掌号 appid</span></span><br><span class="line">  <span class="attr">xz_token:</span> <span class="string">&#x27;xxxxxx&#x27;</span> <span class="comment">## 你的熊掌号 token</span></span><br><span class="line">  <span class="attr">xz_count:</span> <span class="number">10</span> <span class="comment">## 从所有的提交的数据当中选取最新的10条,该数量跟你的熊掌号而定</span></span><br></pre></td></tr></table></figure><p>加入新的 deployer 即可</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_xz_url_submitter</span> <span class="comment"># 百度熊掌号</span></span><br></pre></td></tr></table></figure><h3 id="hexo-autonofollow-外链自动-nofollow"><a href="#hexo-autonofollow-外链自动-nofollow" class="headerlink" title="hexo-autonofollow 外链自动 nofollow"></a><code>hexo-autonofollow</code> 外链自动 nofollow</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-autonofollow --save</span></span><br></pre></td></tr></table></figure><p>注：<code>hexo-nofollow</code> 插件实在是让我头大，使用后会导致页面中多出许多莫名其妙的 <code>&lt;meta name=generator content=&quot;Hexo 3.8.0&quot;&gt;</code>，扰乱了博客页面排版。</p><p><a href="https://camo.githubusercontent.com/761675bf54018c4c7c577ffd726fa0c05e039c0fdd7181e2580b039b18a27d47/687474703a2f2f67796c696469616e2d626c6f672e746573742e757063646e2e6e65742f32303139303231353233323231312e706e67"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./687474703a2f2f67796c696469616e2d626c6f672e746573742e757063646e2e6e65742f32303139303231353233323231312e706e67.txt" alt=""></a></p><p>我又一步步重新搭了一遍博客排查错误，最终发现 package.json 中删除 <code>&quot;hexo-nofollow&quot;: &quot;^1.0.5&quot;,</code> 即可完美解决问题。</p><h3 id="hexo-seo-link-visualizer-分析链接并可视化站点结构"><a href="#hexo-seo-link-visualizer-分析链接并可视化站点结构" class="headerlink" title="hexo-seo-link-visualizer 分析链接并可视化站点结构"></a><code>hexo-seo-link-visualizer</code> 分析链接并可视化站点结构</h3><p><a href="https://raw.githubusercontent.com/tea3/hexo-seo-link-visualizer/master/img/cover.png"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./cover.png" alt="Screenshot"></a></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-seo-link-visualizer --save</span></span><br></pre></td></tr></table></figure><p><strong>Usage</strong></p><p>First of all , you should to add npm script. Please insert as follow code at <code>package.json</code>.</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;show-article-map&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node node_modules/hexo-seo-link-visualizer/app/show-article-map.js&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>Next , Please run server and excute npm script. (<code>$ hexo clean</code> be sure to run.)</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo clean</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo server</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm run show-article-map</span></span><br></pre></td></tr></table></figure><p>Last , Please run server of link visualizer. Since the default URL is <code>localhost:1234</code>, open this URL.</p><p><strong>Options</strong></p><p>You can change plugin settings with as follow option. Please edit <code>_config.yml</code>.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-seo-link-visualizer&#x27;s option</span></span><br><span class="line"><span class="attr">seoLinkVisualizer:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cache:</span> <span class="string">cache/seo-link-visualizer.json</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">1234</span></span><br><span class="line">  <span class="attr">previewHost:</span> <span class="string">localhost:4000/</span></span><br><span class="line">  <span class="attr">categoryDepthLimits:</span> <span class="number">1</span>    </span><br><span class="line">  <span class="attr">allowedSourcePath:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">_posts/</span></span><br><span class="line">    <span class="comment"># - _drafts</span></span><br><span class="line">  <span class="attr">ignoreLink:</span></span><br><span class="line">    <span class="attr">int:</span></span><br><span class="line">    <span class="attr">ext:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">amazon</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">amz</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">flickr</span></span><br><span class="line">    <span class="attr">toc:</span></span><br></pre></td></tr></table></figure><h3 id="hexo-baidu-url-push-百度站长平台自动推送工具"><a href="#hexo-baidu-url-push-百度站长平台自动推送工具" class="headerlink" title="hexo-baidu-url-push 百度站长平台自动推送工具"></a><code>hexo-baidu-url-push</code> 百度站长平台自动推送工具</h3><blockquote><p>⚠ 该插件使用后会出现以下BUG：</p><p>ReferenceError: path is not defined</p></blockquote><p>一个hexo插件，使用百度JS链路自动推送方法，提交链接到百度</p><blockquote><p>自动推送是百度站长平台为提高站点新增网页发现速度推出的工具，安装自动推送JS代码的网页，在页面被访问时，页面URL将立即被推送给百度。</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">npm install hexo-baidu-url-push --save</span><br></pre></td></tr></table></figure><p>其实就是向页面追加了以下代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> bp = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> curProtocol = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">protocol</span>.<span class="title function_">split</span>(<span class="string">&#x27;:&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (curProtocol === <span class="string">&#x27;https&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        bp.<span class="property">src</span> = <span class="string">&#x27;https://zz.bdstatic.com/linksubmit/push.js&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        bp.<span class="property">src</span> = <span class="string">&#x27;http://push.zhanzhang.baidu.com/push.js&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> s = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;script&quot;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">    s.<span class="property">parentNode</span>.<span class="title function_">insertBefore</span>(bp, s);</span></span><br><span class="line"><span class="language-javascript">&#125;)();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h2><h3 id="hexo-generator-topindex-置顶文章"><a href="#hexo-generator-topindex-置顶文章" class="headerlink" title="hexo-generator-topindex 置顶文章"></a><code>hexo-generator-topindex</code> 置顶文章</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-generator-topindex --save</span></span><br></pre></td></tr></table></figure><p><strong>配置</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">topindex_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span> <span class="comment">#Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span> <span class="comment">#Posts order. (Order by date descending by default)</span></span><br></pre></td></tr></table></figure><p><strong>使用方法</strong></p><p>这样，就可以在文章的 Front Matter 中指定 <code>top: 数字</code> 实现文章置顶效果了。</p><h3 id="hexo-generator-feed-生成博客-RSS"><a href="#hexo-generator-feed-生成博客-RSS" class="headerlink" title="hexo-generator-feed 生成博客 RSS"></a><code>hexo-generator-feed</code> 生成博客 RSS</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-generator-feed --save</span></span><br></pre></td></tr></table></figure><p>You can configure this plugin in <code>_config.yml</code>.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">hub:</span></span><br><span class="line">    <span class="attr">content:</span></span><br><span class="line">    <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">    <span class="attr">content_limit_delim:</span> <span class="string">&quot; &quot;</span></span><br><span class="line">    <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">icon.png</span></span><br></pre></td></tr></table></figure><p><strong>使用方法</strong></p><p>In the <a href="https://hexo.io/docs/front-matter.html">front-matter</a> of your post, you can optionally add a <code>description</code>, <code>intro</code> or <code>excerpt</code> setting to write a summary for the post. Otherwise the summary will default to the excerpt or the first 140 characters of the post.</p><h3 id="hexo-generator-sitemap-生成-sitemap-xml"><a href="#hexo-generator-sitemap-生成-sitemap-xml" class="headerlink" title="hexo-generator-sitemap 生成 sitemap.xml"></a><code>hexo-generator-sitemap</code> 生成 sitemap.xml</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-generator-sitemap --save</span></span><br></pre></td></tr></table></figure><h3 id="hexo-generator-baidu-sitemap-生成-baidusitemap-xml"><a href="#hexo-generator-baidu-sitemap-生成-baidusitemap-xml" class="headerlink" title="hexo-generator-baidu-sitemap 生成 baidusitemap.xml"></a><code>hexo-generator-baidu-sitemap</code> 生成 baidusitemap.xml</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-generator-baidu-sitemap --save</span></span><br></pre></td></tr></table></figure><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="hexo-abbrlink-生成文章唯一ID"><a href="#hexo-abbrlink-生成文章唯一ID" class="headerlink" title="hexo-abbrlink 生成文章唯一ID"></a><code>hexo-abbrlink</code> 生成文章唯一ID</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-autonofollow --save</span></span><br></pre></td></tr></table></figure><h3 id="hexo-nanoid-用-nanoid-生成文章唯一ID"><a href="#hexo-nanoid-用-nanoid-生成文章唯一ID" class="headerlink" title="hexo-nanoid 用 nanoid 生成文章唯一ID"></a><code>hexo-nanoid</code> 用 nanoid 生成文章唯一ID</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-nanoid --save</span></span><br></pre></td></tr></table></figure><h3 id="hexo-translate-title-将汉字标题转成英文标题"><a href="#hexo-translate-title-将汉字标题转成英文标题" class="headerlink" title="hexo-translate-title 将汉字标题转成英文标题"></a><code>hexo-translate-title</code> 将汉字标题转成英文标题</h3><p><strong>安装</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-translate-title --save</span><br></pre></td></tr></table></figure><p>**使用 **</p><p>1.配置hexo根项目下的<code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">translate_title:</span></span><br><span class="line">  <span class="attr">translate_way:</span> <span class="string">google</span>  <span class="comment"># google,youdao,baidu_with_appid,baidu_no_appid</span></span><br><span class="line">  <span class="attr">youdao_api_key:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># Your youdao_api_key</span></span><br><span class="line">  <span class="attr">youdao_keyfrom:</span> <span class="string">xxxx-blog</span> <span class="comment"># Your youdao_keyfrom</span></span><br><span class="line">  <span class="attr">is_need_proxy:</span> <span class="literal">false</span>     <span class="comment"># true | false</span></span><br><span class="line">  <span class="attr">proxy_url:</span> <span class="string">http://localhost:50018</span> <span class="comment"># Your proxy_url</span></span><br><span class="line">  <span class="attr">baidu_appid:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># Your baidu_appid</span></span><br><span class="line">  <span class="attr">baidu_appkey:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># Your baidu_appkey</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><blockquote><ul><li>判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将<code>_config.yml</code> 下的<code>is_need_proxy: true</code>改为false。如果设置为true,请设置本地代理地址</li><li>目前google翻译，youdao翻译均可直接使用，百度翻译<strong>使用APPID版本，无APPID版本均已完成</strong>，APPID版本需要在<a href="http://api.fanyi.baidu.com/">百度翻译开放平台</a></li><li>如果担心百度翻译开发平台的APP_ID和APP_KEY有泄漏风险，建议在百度翻译开发平台-》管理控制台的服务器地址一栏，填写好服务器IP即可</li></ul></blockquote><p>2.修改hexo根目录下的<code>_config.yml</code></p><p>修改</p><blockquote><p>permalink: :year/:month:day/:translate_title.html</p></blockquote><p>将<code>:title</code>修改为<code>:translate_title</code>即可，前面的路径也可按照自己的要求变更，例如 permalink: blog/:translate_title.html</p><h3 id="hexo-all-minifier-压缩所有静态文件"><a href="#hexo-all-minifier-压缩所有静态文件" class="headerlink" title="hexo-all-minifier 压缩所有静态文件"></a><code>hexo-all-minifier</code> 压缩所有静态文件</h3><p>支持压缩 HTML、CSS、JS、图片，支持打包js，平均耗时20s，功能强大简单易用。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-all-minifier --save</span></span><br></pre></td></tr></table></figure><p>Just put this line in the config file of your hexo-site to enable this plugin.</p><p>If you need futher control of this plugin, please refer the options below.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">js_concator:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">#Enable the Js concator. Defaults to `false`.</span></span><br><span class="line">  <span class="attr">bundle_path:</span> <span class="string">&#x27;/js/bundle.js&#x27;</span> <span class="comment">#The output path of the bundle script. It will be set as absolute path to the root dir.</span></span><br><span class="line">  <span class="attr">front:</span> <span class="literal">false</span> <span class="comment">#Put the bundle script in the front of all scripts in body tag. Default to false, which means the bundle script will be placed in the back of other scripts.</span></span><br><span class="line">  <span class="attr">silent:</span> <span class="literal">false</span> <span class="comment">#Disable logging optimize informations. Defaults to `false`.</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">html_minifier:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#Enable the HTML minifier. Defaults to `true`.</span></span><br><span class="line">  <span class="attr">ignore_error:</span> <span class="literal">false</span> <span class="comment">#Ignore the error occurred on parsing html.</span></span><br><span class="line">  <span class="attr">silent:</span> <span class="literal">false</span> <span class="comment">#Disable logging optimize informations. Defaults to `false`.</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="comment">#Exclude files. Glob is support.</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">css_minifier:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#Enable the CSS minifier. Defaults to `true`.</span></span><br><span class="line">  <span class="attr">silent:</span> <span class="literal">false</span> <span class="comment">#Disable logging optimize informations. Defaults to `false`.</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="comment">#Exclude files. Glob is support.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;*.min.css&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">js_minifier:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#Enable the JS minifier. Defaults to true.</span></span><br><span class="line">  <span class="attr">mangle:</span> <span class="literal">true</span> <span class="comment">#Mangle file names</span></span><br><span class="line">  <span class="attr">silent:</span> <span class="literal">false</span> <span class="comment">#Disable logging optimize informations. Defaults to `false`.</span></span><br><span class="line">  <span class="attr">output:</span> <span class="comment">#Output options. If it is empty, please remove it from the .yml file! Otherwise it will be set to `null`, which is different from `undefined`.</span></span><br><span class="line">  <span class="attr">compress:</span> <span class="comment">#Compress options. If it is empty, please remove it from the .yml file! Otherwise it will be set to `null`, which is different from `undefined`.</span></span><br><span class="line">  <span class="attr">exclude:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;*.min.js&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">image_minifier:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#Enable the image minifier. Defaults to `true`.</span></span><br><span class="line">  <span class="attr">interlaced:</span> <span class="literal">false</span> <span class="comment">#Interlace gif for progressive rendering. Defaults to `false`.</span></span><br><span class="line">  <span class="attr">multipass:</span> <span class="literal">false</span> <span class="comment">#Optimize svg multiple times until it’s fully optimized. Defaults to `false`.</span></span><br><span class="line">  <span class="attr">optimizationLevel:</span> <span class="number">2</span> <span class="comment">#Select an optimization level between 0 and 7. Defaults to `2`.</span></span><br><span class="line">  <span class="attr">pngquant:</span> <span class="literal">false</span> <span class="comment">#Enable imagemin-pngquant plugin. Defaults to false.</span></span><br><span class="line">  <span class="attr">progressive:</span> <span class="literal">false</span> <span class="comment">#Lossless conversion to progressive. Defaults to false.</span></span><br><span class="line">  <span class="attr">silent:</span> <span class="literal">false</span> <span class="comment">#Disable logging optimize informations. Defaults to false.</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="comment">#Exclude specific types of image files, the input value could be gif,jpg, png, or svg. Default to null. Glob is not support.</span></span><br></pre></td></tr></table></figure><h3 id="hexo-pwa-支持PWA"><a href="#hexo-pwa-支持PWA" class="headerlink" title="hexo-pwa 支持PWA"></a><code>hexo-pwa</code> 支持PWA</h3><p><code>hexo-pwa</code> 使得 Hexo 站点将支持以下特性：</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/Manifest">Web App Manifest</a> - Users can add your site to mobile home screen</li><li><a href="https://developers.google.com/web/fundamentals/primers/service-workers/">Service Worker</a> - Make your site available offline</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install --save hexo-pwa</span></span><br></pre></td></tr></table></figure><p><strong>配置</strong></p><p>You can configure this plugin in <code>_config.yml</code>.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pwa:</span></span><br><span class="line">  <span class="attr">manifest:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/manifest.json</span></span><br><span class="line">    <span class="attr">body:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">hexo</span></span><br><span class="line">      <span class="attr">short_name:</span> <span class="string">hexo</span></span><br><span class="line">      <span class="attr">icons:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/android-chrome-192x192.png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">192x192</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/android-chrome-512x512.png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">512x512</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">      <span class="attr">theme_color:</span> <span class="string">&#x27;#ffffff&#x27;</span></span><br><span class="line">      <span class="attr">background_color:</span> <span class="string">&#x27;#ffffff&#x27;</span></span><br><span class="line">      <span class="attr">display:</span> <span class="string">standalone</span></span><br><span class="line">  <span class="attr">serviceWorker:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/sw.js</span></span><br><span class="line">    <span class="attr">preload:</span></span><br><span class="line">      <span class="attr">urls:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/</span></span><br><span class="line">      <span class="attr">posts:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">opts:</span></span><br><span class="line">      <span class="attr">networkTimeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js/regexp</span> <span class="string">/hm.baidu.com/</span></span><br><span class="line">        <span class="attr">strategy:</span> <span class="string">networkOnly</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js/regexp</span> <span class="string">/.*\.(js|css|jpg|jpeg|png|gif)$/</span></span><br><span class="line">        <span class="attr">strategy:</span> <span class="string">cacheFirst</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js/regexp</span> <span class="string">/\//</span></span><br><span class="line">        <span class="attr">strategy:</span> <span class="string">networkFirst</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><ul><li>manifest - manifest configuration<ul><li>path - the path of <code>manifest.json</code>, eg: <code>/manifest.json</code></li><li>body - the content of <code>manifest.json</code>, <a href="https://developer.mozilla.org/en-US/docs/Web/Manifest">manifest.json example</a>. <code>body</code> can be null, if not null, <code>hexo-pwa</code> will generate <code>manifest.json</code> with <code>JSON.stringify(body)</code></li></ul></li><li>serviceWorker - service worker configuration<ul><li>path: the path of <code>sw.js</code>, eg: <code>/sw.js</code>, you shouldn’t put sw.js in subdirectory because of the <a href="https://developers.google.com/web/ilt/pwa/introduction-to-service-worker#registration_and_scope">service worker scope</a></li><li>preload - urls or posts that you want to preload<ul><li>urls: an array of the preload urls</li><li>posts: the count of preload posts</li></ul></li><li>opts: the options for <a href="https://googlechromelabs.github.io/sw-toolbox/api.html#options">sw-toolbox</a></li><li>routes - request routes and strategies, based on <a href="https://googlechromelabs.github.io/sw-toolbox/api.html#options">sw-toolbox</a>. <strong>The routes order does matter.</strong><ul><li>pattern: url pattern, this config can be express-style or RegExp</li><li>strategy: the strategy you want to choose. <a href="https://googlechromelabs.github.io/sw-toolbox/api.html#options">All strategies</a>: <code>cacheFirst</code>, <code>networkFirst</code>, <code>cacheOnly</code>, <code>networkOnly</code>, <code>fastest</code>. Caution: Log requests should use <code>networkOnly</code> strategy.</li></ul></li></ul></li><li>priority - <a href="https://hexo.io/api/filter.html">plugin priority</a> (default value is 10)</li></ul><h3 id="hexo-lazyload-image-图片懒加载"><a href="#hexo-lazyload-image-图片懒加载" class="headerlink" title="hexo-lazyload-image 图片懒加载"></a><code>hexo-lazyload-image</code> 图片懒加载</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-lazyload-image --save</span></span><br></pre></td></tr></table></figure><p><strong>使用</strong></p><p>First add configuration in <code>_config.yml</code> from your hexo project.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">onlypost:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">loadingImg:</span> <span class="comment"># eg ./images/loading.gif</span></span><br></pre></td></tr></table></figure><h2 id="标签拓展"><a href="#标签拓展" class="headerlink" title="标签拓展"></a>标签拓展</h2><blockquote><p>💡 温馨提示</p><p>为方便未来可能的数据迁移，建议少用独有 markdown 语法。</p><p>并且 许多上古插件早已过时，作者已不再维护，极容易出现类似 <strong>DeprecationWarning: fs.SyncWriteStream is deprecated</strong> 等的问题。</p><p>其次，建议使用 <code>hexo-renderer-markdown-it</code> 作为 markdown 渲染器，功能强大，高效渲染。它可以将 <code>markdown-it</code> 的一套通用的生态体系带到 Hexo 上来。</p><p>如果你觉得这些都不是问题，那么，开始 enjoy 吧！👇</p></blockquote><h3 id="hexo-codepen-v2-插入-Codepen-代码片段"><a href="#hexo-codepen-v2-插入-Codepen-代码片段" class="headerlink" title="hexo-codepen-v2 插入 Codepen 代码片段"></a><code>hexo-codepen-v2</code> 插入 Codepen 代码片段</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-codepen-v2 --save</span><br></pre></td></tr></table></figure><p><strong>Usage</strong></p><p>Create <a href="http://blog.codepen.io/documentation/features/embedded-pens/">Embedded Pen</a> with following syntax:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% codepen slugHash default_tabs height width userId|anonymous|anon theme %&#125;</span><br></pre></td></tr></table></figure><p><strong>How to get arguments from CodePen embed</strong></p><p>This is something generated by <code>CodePen</code>:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">data-height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">data-theme-id</span>=<span class="string">&quot;33713&quot;</span> <span class="attr">data-slug-hash</span>=<span class="string">&quot;mKEmpj&quot;</span> <span class="attr">data-default-tab</span>=<span class="string">&quot;html,result&quot;</span> <span class="attr">data-user</span>=<span class="string">&quot;yuanchuan&quot;</span> <span class="attr">data-embed-version</span>=<span class="string">&quot;2&quot;</span> <span class="attr">data-pen-title</span>=<span class="string">&quot;Flow #1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;codepen&quot;</span>&gt;</span>See the Pen <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://codepen.io/yuanchuan/pen/mKEmpj/&quot;</span>&gt;</span>Flow #1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> by yuanchuan (<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://codepen.io/yuanchuan&quot;</span>&gt;</span>@yuanchuan<span class="tag">&lt;/<span class="name">a</span>&gt;</span>) on <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://codepen.io&quot;</span>&gt;</span>CodePen<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://static.codepen.io/assets/embed/ei.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You can extract required arguments:</p><div class="table-container"><table><thead><tr><th>Field</th><th>Value</th></tr></thead><tbody><tr><td>userId</td><td>yuanchuan</td></tr><tr><td>slugHash</td><td>mKEmpj</td></tr><tr><td>theme</td><td>33713</td></tr><tr><td>default_tabs</td><td>html,result</td></tr><tr><td>height</td><td>300</td></tr><tr><td>width</td><td>This value should be adjusted according to your blog theme, by default it is <code>100%</code></td></tr></tbody></table></div><p>All of this settings except for slugHash can be set in <code>_config.yml</code> under <code>codepen</code> property.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codepen:</span></span><br><span class="line">  <span class="attr">userId:</span> <span class="string">&quot;yuanchuan&quot;</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">&quot;33713&quot;</span></span><br><span class="line">  <span class="attr">default_tabs:</span> <span class="string">&quot;js,result&quot;</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">500</span></span><br><span class="line">  <span class="attr">width:</span> <span class="string">&quot;100%&quot;</span></span><br></pre></td></tr></table></figure><h3 id="hexo-tag-kbd-支持-kbd-标签"><a href="#hexo-tag-kbd-支持-kbd-标签" class="headerlink" title="hexo-tag-kbd 支持 kbd 标签"></a><code>hexo-tag-kbd</code> 支持 kbd 标签</h3><p><a href="https://camo.githubusercontent.com/4bb2bfdae0a26acc4a2de31a980db51884324e31/687474703a2f2f692e696d6775722e636f6d2f6737694c4a38322e706e67"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./687474703a2f2f692e696d6775722e636f6d2f6737694c4a38322e706e67.txt" alt="img"></a></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-tag-kbd --save</span><br></pre></td></tr></table></figure><p><strong>用例</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% kbd Ctrl %&#125; + &#123;% kbd A %&#125;</span><br><span class="line">&#123;% kbd Ctrl %&#125; + &#123;% kbd ALT %&#125; + &#123;% kbd DELETE %&#125;</span><br></pre></td></tr></table></figure><p><strong>几个特殊按键</strong></p><p>Enter</p><p><a href="https://camo.githubusercontent.com/3b7f40a8c5b759271deaf1b3d4945cdd269294dd/687474703a2f2f692e696d6775722e636f6d2f546e58717a374c2e706e67"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./687474703a2f2f692e696d6775722e636f6d2f546e58717a374c2e706e67.txt" alt="img"></a></p><p>Shift</p><p><a href="https://camo.githubusercontent.com/8d2017bde155daf39d70f46fe355f80ee5c4c0e3/687474703a2f2f692e696d6775722e636f6d2f51646c753334622e706e67"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./687474703a2f2f692e696d6775722e636f6d2f51646c753334622e706e67.txt" alt="img"></a></p><p>Command</p><p><a href="https://camo.githubusercontent.com/36fdd2a3d32d16ecf65f77d4b43c0cdf17567166/687474703a2f2f692e696d6775722e636f6d2f365954354778512e706e67"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./687474703a2f2f692e696d6775722e636f6d2f365954354778512e706e67.txt" alt="img"></a></p><p>Option</p><p><a href="https://camo.githubusercontent.com/4f51c3020739858eda80c2de98b0b1226d6b8263/687474703a2f2f692e696d6775722e636f6d2f4f624a344472792e706e67"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./687474703a2f2f692e696d6775722e636f6d2f4f624a344472792e706e67.txt" alt="img"></a></p><h3 id="hexo-tag-color-block-颜色标签"><a href="#hexo-tag-color-block-颜色标签" class="headerlink" title="hexo-tag-color-block 颜色标签"></a><code>hexo-tag-color-block</code> 颜色标签</h3><p><a href="https://github.com/patrick330602/hexo-tag-color-block/blob/master/example.png"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./example.png" alt="example of #f8dcf8"></a></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i hexo-tag-color-block</span><br></pre></td></tr></table></figure><p><strong>使用方法</strong></p><p>The full tag format is as follows:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% colorblock [color hex code] [width] [height] %&#125;</span><br></pre></td></tr></table></figure><p>Example:</p><p><strong>额外配置</strong></p><p>请访问 <a href="https://github.com/patrick330602/hexo-tag-color-block#configuration">https://github.com/patrick330602/hexo-tag-color-block#configuration</a></p><h3 id="hexo-tag-hint"><a href="#hexo-tag-hint" class="headerlink" title="hexo-tag-hint"></a><code>hexo-tag-hint</code></h3><p><a href="https://raw.githubusercontent.com/etigerstudio/hexo-tag-hint/master/hexo-tag-hint_screenshot.png"><img src="TenviLiawesome-hexo-plugins%20%F0%9F%86%92A%20curated%20list%20of%20awesome%20plugins%20related%20to%20Hexo./hexo-tag-hint_screenshot.png" alt="hexo-tag-hint screenshot"></a></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-tag-hint --save</span></span><br></pre></td></tr></table></figure><p><strong>Usage</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% hint &#x27;body_text&#x27; &#x27;hint_text&#x27; %&#125;</span><br></pre></td></tr></table></figure><h3 id="hexo-tag-bilibili-插入bilibili视频"><a href="#hexo-tag-bilibili-插入bilibili视频" class="headerlink" title="hexo-tag-bilibili 插入bilibili视频"></a><code>hexo-tag-bilibili</code> 插入bilibili视频</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-tag-bilibili</span><br></pre></td></tr></table></figure><p><strong>Usage</strong></p><p>The full tag format is as follows:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% bilibili [av_id] %&#125;</span><br><span class="line">or</span><br><span class="line">&#123;% bilibili [av_id] [page] %&#125;</span><br></pre></td></tr></table></figure><p>example:</p><h3 id="hexo-ruby-character-Ruby-character-tag"><a href="#hexo-ruby-character-Ruby-character-tag" class="headerlink" title="hexo-ruby-character Ruby character tag"></a><code>hexo-ruby-character</code> Ruby character tag</h3><p>Ruby character tag for Hexo, inspired by the <a href="http://zh.moegirl.org/Template:Ruby">Ruby template</a> of <a href="http://zh.moegirl.org/">萌娘百科</a>.</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-ruby-character --save</span><br></pre></td></tr></table></figure><p><strong>Usage</strong></p><p>→ Basetop</p><p>Specifically, if the top field is in Chinese characters, it while be converted to Chinese pinyin, because the pinyin chatater with heads are not easy to type.</p><p>Followings are the examples.</p><p>→ 佐天泪子xiān qún kuáng mó</p><p>Other languages like Japanese is also supported.</p><p>→ 超電磁砲レールガン</p><h3 id="hexo-github-card-GitHub-用户资料卡片"><a href="#hexo-github-card-GitHub-用户资料卡片" class="headerlink" title="hexo-github-card GitHub 用户资料卡片"></a><code>hexo-github-card</code> GitHub 用户资料卡片</h3><p>Display a card for GitHub profile and repo in your <a href="https://hexo.io/">hexo</a> blog. Implemented with <a href="https://github.com/lepture/github-cards">Github-cards</a>.</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-github-card</span><br></pre></td></tr></table></figure><p>Usage</p><p>Insert <code>githubCard</code> tag in your article:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% githubCard user:your_user [repo:your_repo] [width:400] [theme:Default] [client_id:your_client_id] [client_secret:your_client_secret] [align:text-align_position] %&#125;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>Argument</th><th>Description</th></tr></thead><tbody><tr><td>user</td><td>GitHub user name</td></tr><tr><td>repo</td><td>(Optional) GitHub repository name of the user. If omit then display only the user profile</td></tr><tr><td>width</td><td>(Optional) Widget’s width. It should be a valid CSS width value. Default is 400.</td></tr><tr><td>client_id</td><td>(Optional) Your GitHub app client_id</td></tr><tr><td>client_secret</td><td>(Optional) Your GitHub app client_secret</td></tr><tr><td>align</td><td>(Optional) What kind of text-align is you want. Default is center.</td></tr></tbody></table></div><p>(Configuration are consistent with <a href="https://github.com/lepture/github-cards#widgetjs">github-cards</a>)</p><p>Example:</p><p>Display user profile only</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% githubCard user:Gisonrg %&#125;</span><br></pre></td></tr></table></figure><p>Display a repo</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% githubCard user:Gisonrg repo:hexo-github-card %&#125;</span><br></pre></td></tr></table></figure><h3 id="hexo-caniuse-Can-I-Use-CSS-Features"><a href="#hexo-caniuse-Can-I-Use-CSS-Features" class="headerlink" title="hexo-caniuse Can I Use CSS Features?"></a><code>hexo-caniuse</code> Can I Use CSS Features?</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-caniuse --save</span></span><br></pre></td></tr></table></figure><p><strong>Usage</strong></p><p>Create <a href="https://caniuse.bitsofco.de/">The CanIUse Embed</a> with following syntax:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% caniuse feature periods|current %&#125;</span><br></pre></td></tr></table></figure><p><strong>How to get arguments from caniuse embed</strong></p><p>This is something generated by <code>caniuse</code>:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;ciu_embed&quot;</span> <span class="attr">data-feature</span>=<span class="string">&quot;css-variables&quot;</span> <span class="attr">data-periods</span>=<span class="string">&quot;current&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://caniuse.com/#feat=css-variables&quot;</span>&gt;</span>Can I Use css-variables?<span class="tag">&lt;/<span class="name">a</span>&gt;</span> Data on support for the css-variables feature across the major browsers from caniuse.com.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/caniuse-embed/1.1.0/caniuse-embed.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You can extract required arguments:</p><div class="table-container"><table><thead><tr><th>Field</th><th>Value</th></tr></thead><tbody><tr><td>data-feature</td><td>Choose <code>caniuse</code> Feature feature</td></tr><tr><td>data-periods</td><td>Select the Browser Versions to Display</td></tr></tbody></table></div><h3 id="hexo-github-追踪-GitHub-仓库-commit"><a href="#hexo-github-追踪-GitHub-仓库-commit" class="headerlink" title="hexo-github 追踪 GitHub 仓库 commit"></a><code>hexo-github</code> 追踪 GitHub 仓库 commit</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-github</span><br></pre></td></tr></table></figure><p><strong>使用方法</strong></p><p>Insert <code>github</code> tag in your article:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% github user repo referenced_commit [auto_expand = true | false] [width = 100%] %&#125;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>Argument</th><th>Description</th></tr></thead><tbody><tr><td>user</td><td>GitHub user name</td></tr><tr><td>repo</td><td>GitHub repository name of that user</td></tr><tr><td>commit</td><td>Commit sha1 referenced in the article</td></tr><tr><td>auto_expand</td><td>(Optional, default == false) true of false. Expand the timeline once synced if set to true.</td></tr><tr><td>width</td><td>(Optional, default == 100%). Widget’s width. It should be a valid CSS width value.</td></tr></tbody></table></div><p><strong>例子</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% github akfish hexo-math b82e65 %&#125;</span><br></pre></td></tr></table></figure><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="hexo-deployer-git-部署到-Git"><a href="#hexo-deployer-git-部署到-Git" class="headerlink" title="hexo-deployer-git 部署到 Git"></a><code>hexo-deployer-git</code> 部署到 Git</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-deployer-git --save</span></span><br></pre></td></tr></table></figure><p><strong>配置</strong></p><p>You can configure this plugin in <code>_config.yml</code>.</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># You can use this:</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> [<span class="string">branch</span>]</span><br><span class="line">  <span class="attr">message:</span> [<span class="string">message</span>]</span><br><span class="line">  <span class="attr">name:</span> [<span class="string">git</span> <span class="string">user</span>]</span><br><span class="line">  <span class="attr">email:</span> [<span class="string">git</span> <span class="string">email</span>]</span><br><span class="line">  <span class="attr">extend_dirs:</span> [<span class="string">extend</span> <span class="string">directory</span>]</span><br><span class="line">  <span class="attr">ignore_hidden:</span> <span class="literal">false</span> <span class="comment"># default is true</span></span><br><span class="line">  <span class="attr">ignore_pattern:</span> <span class="string">regexp</span>  <span class="comment"># whatever file that matches the regexp will be ignored when deploying</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or this:</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">message:</span> [<span class="string">message</span>]</span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;,[branch]</span></span><br><span class="line">    <span class="attr">coding:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;,[branch]</span></span><br><span class="line">  <span class="attr">extend_dirs:</span></span><br><span class="line">    <span class="bullet">-</span> [<span class="string">extend</span> <span class="string">directory</span>]</span><br><span class="line">    <span class="bullet">-</span> [<span class="string">another</span> <span class="string">extend</span> <span class="string">directory</span>]</span><br><span class="line">  <span class="attr">ignore_hidden:</span></span><br><span class="line">    <span class="attr">public:</span> <span class="literal">false</span></span><br><span class="line">    [<span class="string">extend</span> <span class="string">directory</span>]<span class="string">:</span> <span class="literal">true</span></span><br><span class="line">    [<span class="string">another</span> <span class="string">extend</span> <span class="string">directory</span>]<span class="string">:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">ignore_pattern:</span></span><br><span class="line">    [<span class="string">folder</span>]<span class="string">:</span> <span class="string">regexp</span>  <span class="comment"># or you could specify the ignore_pattern under a certain directory</span></span><br></pre></td></tr></table></figure><h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><h3 id="hexo-helper-live2d-萌萌哒二次元看板娘"><a href="#hexo-helper-live2d-萌萌哒二次元看板娘" class="headerlink" title="hexo-helper-live2d 萌萌哒二次元看板娘"></a><code>hexo-helper-live2d</code> 萌萌哒二次元看板娘</h3><p>向你的Hexo里放上一只萌萌哒二次元看板娘!</p><p>演示: <a href="https://l2dwidget.js.org/dev.html">https://l2dwidget.js.org/dev.html</a></p><p>原作大大的博客: <a href="https://huaji8.top/post/live2d-plugin-2.0/">https://huaji8.top/post/live2d-plugin-2.0/</a></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>详细配置过多，请查看 <a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md">https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md</a></p><hr><p>📘《从零开始的Hexo博客搭建教程》系列文章：</p><ol><li><a href="https://www.nuist.today/h94Rf-/">从零开始的Hexo博客搭建教程（一）：开始</a></li><li><a href="https://www.nuist.today/0IxRfH/">从零开始的Hexo博客搭建教程（二）：主题</a></li><li><a href="https://www.nuist.today/i5bofg/">从零开始的Hexo博客搭建教程（三）：SEO优化</a></li><li><a href="https://www.nuist.today/JjDMWM/">从零开始的Hexo博客搭建教程（四）：图床</a></li><li><a href="https://www.nuist.today/1eC0kV/">从零开始的Hexo博客搭建教程（五）：文章发布</a></li><li><a href="https://www.nuist.today/hAbX6u/">从零开始的Hexo博客搭建教程（六）：插件</a></li><li><a href="https://www.nuist.today/A-fgp4/">从零开始的Hexo博客搭建教程（七）：遇到的坑</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 基本语法</title>
      <link href="/post/200518.html"/>
      <url>/post/200518.html</url>
      
        <content type="html"><![CDATA[<h2 id="Markdown-应用"><a href="#Markdown-应用" class="headerlink" title="Markdown 应用"></a>Markdown 应用</h2><ul><li>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</li><li>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</li><li>Markdown 编写的文档可以导出 HTML、Word、图像、PDF、Epub 等多种格式的文档。</li><li>Markdown 编写的文档后缀为 .md 或 .markdown。</li></ul><p>Markdown 能被使用来撰写电子书，如：Gitbook。</p><p>当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge 等。</p><h2 id="Markdown-标题"><a href="#Markdown-标题" class="headerlink" title="Markdown 标题"></a>Markdown 标题</h2><p>Markdown 标题有两种格式。</p><ol><li>第一种方法：<br>使用 <code>=</code> 和 <code>-</code> 标记一级和二级标题</li></ol><p>\= 和 - 标记语法格式如下：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">一级标题</span></span><br><span class="line"><span class="section">=======</span></span><br><span class="line"></span><br><span class="line"><span class="section">二级标题</span></span><br><span class="line"><span class="section">-------</span></span><br></pre></td></tr></table></figure><p>显示效果如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><ol><li>第二种方法<br>使用 <code>#</code> 号标记</li></ol><p>使用 <code>#</code> 号克表示 1-6 级标题，一级标题对应一个 <code>#</code> 号，二级标题对应两个 <code>#</code> 号，以此类推。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><p>显示效果如下：</p><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="Markdown-段落"><a href="#Markdown-段落" class="headerlink" title="Markdown 段落"></a>Markdown 段落</h2><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个空格以上加上回车。</p><ol><li>第一种方法：</li></ol><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Markdown文字内容[<span class="string">空格</span>][<span class="symbol">空格</span>][<span class="string">回车</span>]</span><br><span class="line">Markdown文字内容</span><br></pre></td></tr></table></figure><ol><li>第二种方法：<br>当然也可以在段落后面使用一个空行表示重新开始一个段落</li></ol><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Markdown</span><br><span class="line">[空行]</span><br><span class="line">Markdown</span><br></pre></td></tr></table></figure><ol><li>第三种方法：<br>还可以使用 <code>&lt;br/&gt;</code> 实现强制换行</li></ol><p>显示效果如下：</p><blockquote><p>Markdown<br>Markdown</p></blockquote><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>Markdown 可以使用以下几种字体：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜体文本*</span></span><br><span class="line"><span class="emphasis">_斜体文本_</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**粗体文本**</span></span><br><span class="line"><span class="strong">__粗体文本__</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**<span class="emphasis">*斜粗体文本*</span>**</span></span><br><span class="line"><span class="strong">__<span class="emphasis">_斜粗体文本_</span>__</span></span><br></pre></td></tr></table></figure><p>显示效果如下所示：</p><blockquote><p>_斜体文本_<br>_斜体文本_</p><p><strong>粗体文本</strong><br><strong>粗体文本</strong></p><p><strong>_斜粗体文本_</strong><br><strong>_斜粗体文本_</strong></p></blockquote><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>可以在一行中使用三个以上的星号 <code>*</code>、减号 <code>-</code>、底线 <code>_</code> 来建立一个分隔线，行内不能有其他东西，也可以在星号 <code>*</code>、减号 <code>-</code>、底线 <code>_</code> 中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">***</span></span><br><span class="line"><span class="strong">___</span></span><br><span class="line"><span class="strong">- - -</span></span><br><span class="line"><span class="strong">* * *</span></span><br><span class="line"><span class="strong">_ _ <span class="emphasis">_</span></span></span><br></pre></td></tr></table></figure><p>显示效果如下所示：</p><blockquote><hr><hr><hr><hr><hr><hr></blockquote><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <code>~~</code> 即可：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">正常文本</span><br><span class="line">~~删除文本~~</span><br></pre></td></tr></table></figure><p>显示效果如下所示：</p><blockquote><p>正常文本<br>~删除文本~</p></blockquote><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>下划线可以通过 HTML 的 <code>&lt;u&gt;</code> 标签来实现：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线文本<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>显示效果如下所示：</p><blockquote><p><u>下划线文本</u></p></blockquote><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>脚注是对文本的补充说明，Markdown 脚注的格式如下：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[^ 要脚注的文本]</span><br><span class="line">Markdown[^ Markdown]  </span><br><span class="line"></span><br><span class="line">[^ Markdown ]：一种轻量级标记语言</span><br></pre></td></tr></table></figure><p>显示效果如下所示：</p><blockquote><p>Markdown <sup>Markdown&lt;/a&gt;</sup>。</p><blockquote><p><sup>Markdown</sup>. 一种轻量级标记语言 </p></blockquote></blockquote><h2 id="Markdown-列表"><a href="#Markdown-列表" class="headerlink" title="Markdown 列表"></a>Markdown 列表</h2><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号 <code>*</code>、加号 <code>+</code>、减号 <code>-</code> 作为列表标记，这些标记后面都要添加一个空格，然后再填写内容：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="bullet">*</span> 第二项</span><br><span class="line"><span class="bullet">*</span> 第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> 第一项</span><br><span class="line"><span class="bullet">+</span> 第二项</span><br><span class="line"><span class="bullet">+</span> 第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 第一项</span><br><span class="line"><span class="bullet">-</span> 第二项</span><br><span class="line"><span class="bullet">-</span> 第三项</span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><ul><li>使用星号 <code>*</code></li><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>使用加号 <code>+</code></li><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>使用减号 <code>-</code></li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><p>有序列表使用数字并加上 <code>.</code> 号来表示，如：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项</span><br><span class="line"><span class="bullet">2.</span> 第二项</span><br><span class="line"><span class="bullet">3.</span> 第三项</span><br></pre></td></tr></table></figure></p><p>显示效果如下所示：</p><blockquote><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol></blockquote><p>列表嵌套只需要在子列表中的选项前面添加四个空格即可：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项：</span><br><span class="line"><span class="bullet">  -</span> 第一项嵌套的第一个元素</span><br><span class="line"><span class="bullet">  -</span> 第一项嵌套的第二个元素</span><br><span class="line"><span class="bullet">2.</span> 第二项：</span><br><span class="line"><span class="bullet">  1.</span> 第二项嵌套的第一个元素</span><br><span class="line"><span class="bullet">  2.</span> 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><ol><li>第一项：</li></ol><ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul><ol><li>第二项：</li><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ol></blockquote><h2 id="Markdown-区块"><a href="#Markdown-区块" class="headerlink" title="Markdown 区块"></a>Markdown 区块</h2><p>Markdown 区块引用是在段落开头使用 <code>&gt;</code> 符号，然后后面紧跟一个空格符号：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 区块引用</span></span><br></pre></td></tr></table></figure></p><p>显示效果如下所示：</p><blockquote><p>区块引用</p></blockquote><p>另外区块是可以嵌套的，一个 <code>&gt;</code> 符号是最外层，两个 <code>&gt;</code> 符号是第一层嵌套，以此类推：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 最外层</span></span><br><span class="line"><span class="quote">&gt; &gt; 第一层嵌套</span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; 第二层嵌套</span></span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><p><strong>区块中使用列表</strong></p><p>区块中使用列表实例如下：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 区块中使用列表</span></span><br><span class="line"><span class="quote">&gt; 1. 第一项</span></span><br><span class="line"><span class="quote">&gt; 2. 第二项</span></span><br><span class="line"><span class="quote">&gt; + 第一项</span></span><br><span class="line"><span class="quote">&gt; + 第二项</span></span><br><span class="line"><span class="quote">&gt; + 第三项</span></span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><p><strong>列表中使用区块</strong></p><p>如果要在列表项目内放进区块，那么就需要在 <code>&gt;</code> 前添加四个空格的缩进。</p><p>区块中使用列表实例如下：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 区块中使用列表</span></span><br><span class="line"><span class="quote">&gt; 1. 第一项</span></span><br><span class="line"><span class="quote">&gt; 2. 第二项</span></span><br><span class="line"><span class="quote">&gt; + 第一项</span></span><br><span class="line"><span class="quote">&gt; + 第二项</span></span><br><span class="line"><span class="quote">&gt; + 第三项</span></span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><ul><li><p>第一项</p><blockquote><p>列表中使用区块</p></blockquote></li><li><p>第二项</p></li></ul><h2 id="Markdown-代码"><a href="#Markdown-代码" class="headerlink" title="Markdown 代码"></a>Markdown 代码</h2><p>如果是段落上的一个函数或片段的代码可以用反引号 <code>` </code> 或用三个反引号 <code>``` </code> 把它包起来例如：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">` print `</span> 函数</span><br><span class="line"><span class="code">``` print ``` </span>函数</span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><p><code>print</code> 函数<br><code>print</code> 函数</p></blockquote><p><strong>代码区块</strong></p><p>代码区块使用 4 个空格或者一个制表符（Tab 键）：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">空格</span>][<span class="symbol">空格</span>][<span class="string">空格</span>][<span class="symbol">空格</span>]print(&quot;Hello&quot;);</span><br><span class="line">[Tab]print(&quot;World&quot;);</span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><p>  print(“Hello”);<br>  print(“World”);</p></blockquote><p>你也可以用 <code>``` </code> 包裹一段代码，并指定一种语言（也可以不指定）：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">```</span>][<span class="symbol">javascript</span>]</span><br><span class="line">$(document).ready(function () &#123;</span><br><span class="line"><span class="code">    alert(&#x27;Hello World&#x27;);</span></span><br><span class="line"><span class="code">&#125;);</span></span><br><span class="line"><span class="code">[```]</span></span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;Hello World&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></blockquote><h2 id="Markdown-链接"><a href="#Markdown-链接" class="headerlink" title="Markdown 链接"></a>Markdown 链接</h2><p>链接语法格式如下：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">链接名称</span>](<span class="link">链接地址</span>)</span><br><span class="line">或者</span><br><span class="line">&lt;链接地址&gt;</span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><p><a href="https://www.baidu.com/">Baidu</a><br>或者<br><a href="https://www.baidu.com/">https://www.baidu.com/</a></p></blockquote><p><strong>高级链接</strong></p><p>我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这个链接用 Google 作为网址变量 [<span class="string">Google</span>][<span class="symbol">Google</span>]</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line">[<span class="symbol">Google</span>]: <span class="link">http://www.google.com/</span></span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><p>这个链接用 Google 作为网址变量 [Google][Google]<br>然后在文档的结尾为变量赋值（网址）</p><p>[Google]: <a href="http://www.google.com/">http://www.google.com/</a></p></blockquote><h2 id="Markdown-图片"><a href="#Markdown-图片" class="headerlink" title="Markdown 图片"></a>Markdown 图片</h2><p>Markdown 图片语法格式如下：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">alt 属性文本</span>](<span class="link">图片地址</span>)</span><br><span class="line">![<span class="string">alt 属性文本</span>](<span class="link">图片地址 &quot;可选标题&quot;</span>)</span><br></pre></td></tr></table></figure></p><ul><li>开头一个感叹号 <code>!</code></li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 <code>title</code> 属性的文字。</li></ul><p>使用实例：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">图标</span>](<span class="link">https://www.baidu.com/img/flexible/logo/pc/result.png</span>)</span><br><span class="line">![<span class="string">图标</span>](<span class="link">https://www.baidu.com/img/flexible/logo/pc/result.png &quot;Baidu&quot;</span>)</span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><p><img src="https://www.baidu.com/img/flexible/logo/pc/result.png" alt="百度"><br><img src="https://www.baidu.com/img/flexible/logo/pc/result.png" alt="图标" title="Baidu"></p></blockquote><p>当然，也可以像网址那样对图片网址使用变量:<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这个链接用 Baidu 作为网址变量 [<span class="string">Baidu</span>][<span class="symbol">Baidu</span>]。</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">[<span class="symbol">Baidu</span>]: <span class="link">https://www.baidu.com/img/flexible/logo/pc/result.png</span></span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><p>这个链接用 Baidu 作为网址变量 [Baidu][Baidu]。<br>然后在文档的结尾为变量赋值（网址）</p><p>[Baidu]: <a href="https://www.baidu.com/img/flexible/logo/pc/result.png">https://www.baidu.com/img/flexible/logo/pc/result.png</a></p></blockquote><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <code>&lt;img&gt;</code> 标签。<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.baidu.com/img/flexible/logo/pc/result.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><p><img src="https://www.baidu.com/img/flexible/logo/pc/result.png" width="30%"></p></blockquote><h2 id="Markdown-表格"><a href="#Markdown-表格" class="headerlink" title="Markdown 表格"></a>Markdown 表格</h2><p>Markdown 制作表格使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行。</p><p>语法格式如下：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 表头 | 表头 |</span><br><span class="line">| ---- | ---- |</span><br><span class="line">| 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><div class="table-container"><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table></div><p><strong>对齐方式</strong></p></blockquote><p>我们可以设置表格的对齐方式：</p><ul><li><code>-:</code> 设置内容和标题栏居右对齐。</li><li><code>:-</code> 设置内容和标题栏居左对齐。</li><li><code>:-:</code> 设置内容和标题栏居中对齐。</li></ul><p>实例如下：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 左对齐 | 居中对齐 | 右对齐 |</span><br><span class="line">| :-----| :----: | ----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><div class="table-container"><table><thead><tr><th style="text-align:left">左对齐</th><th style="text-align:center">居中对齐</th><th style="text-align:right">右对齐</th></tr></thead><tbody><tr><td style="text-align:left">单元格</td><td style="text-align:center">单元格</td><td style="text-align:right">单元格</td></tr><tr><td style="text-align:left">单元格</td><td style="text-align:center">单元格</td><td style="text-align:right">单元格</td></tr></tbody></table></div></blockquote><h2 id="Markdown-高级技巧"><a href="#Markdown-高级技巧" class="headerlink" title="Markdown 高级技巧"></a>Markdown 高级技巧</h2><h3 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h3><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有：<code>&lt;kbd&gt;</code> <code>&lt;b&gt;</code> <code>&lt;i&gt;</code> <code>&lt;em&gt;</code> <code>&lt;sup&gt;</code> <code>&lt;sub&gt;</code> <code>&lt;br&gt;</code> 等 ，如：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">普通文本：使用 Ctrl+Alt+Del 重启电脑</span><br><span class="line">HTML 文本：使用 <span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Ctrl<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Alt<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Del<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span> 重启电脑</span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><p>普通文本：使用 Ctrl+Alt+Del 重启电脑<br>HTML 文本：使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p></blockquote><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**文本加粗**</span> </span><br><span class="line">\<span class="emphasis">*\*</span> 正常显示星号 \<span class="emphasis">*\*</span></span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><p><strong>文本加粗</strong><br>** 正常显示星号 **</p></blockquote><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line"><span class="bullet">*</span>   星号</span><br><span class="line">_   下划线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line"><span class="section">#   井字号</span></span><br><span class="line"><span class="bullet">+</span>   加号</span><br><span class="line"><span class="bullet">-</span>   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></table></figure></p><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符号$$$$包裹 <code>TeX</code> 或 <code>LaTeX</code> 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 <code>Mathjax</code> 对数学公式进行渲染。如：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;<span class="emphasis">_1 \times \mathbf&#123;V&#125;_</span>2 =  \begin&#123;vmatrix&#125; </span><br><span class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$&#123;$tep1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><blockquote><script type="math/tex; mode=display">\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix} \mathbf{i} & \mathbf{j} & \mathbf{k} \\\frac{\partial X}{\partial u} &  \frac{\partial Y}{\partial u} & 0 \\\frac{\partial X}{\partial v} &  \frac{\partial Y}{\partial v} & 0 \\\end{vmatrix}${$tep1}{\style{visibility:hidden}{(x+1)(x+1)}}</script></blockquote><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><ol><li>横向流程图源码格式：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">```</span>][<span class="symbol">mermaid</span>]</span><br><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line"><span class="code">    B --&gt; C&#123;条件 a&#125;</span></span><br><span class="line"><span class="code">    C --&gt;|a=1| D[结果 1]</span></span><br><span class="line"><span class="code">    C --&gt;|a=2| E[结果 2]</span></span><br><span class="line"><span class="code">    F[横向流程图]</span></span><br><span class="line"><span class="code">[```]</span></span><br></pre></td></tr></table></figure>显示效果如下所示：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  graph LR</span><br><span class="line">A[方形] --&amp;gt;B(圆角)</span><br><span class="line">   B --&amp;gt; C&#123;条件 a&#125;</span><br><span class="line">   C --&amp;gt;|a=1| D[结果 1]</span><br><span class="line">   C --&amp;gt;|a=2| E[结果 2]</span><br><span class="line">   F[横向流程图]</span><br></pre></td></tr></table></figure><ol><li>竖向流程图源码格式：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">```</span>][<span class="symbol">mermaid</span>]</span><br><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line"><span class="code">    B --&gt; C&#123;条件 a&#125;</span></span><br><span class="line"><span class="code">    C --&gt; |a=1| D[结果 1]</span></span><br><span class="line"><span class="code">    C --&gt; |a=2| E[结果 2]</span></span><br><span class="line"><span class="code">    F[竖向流程图]</span></span><br><span class="line"><span class="code">[```]</span></span><br></pre></td></tr></table></figure>显示效果如下所示：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  graph TD</span><br><span class="line">A[方形] --&amp;gt; B(圆角)</span><br><span class="line">   B --&amp;gt; C&#123;条件 a&#125;</span><br><span class="line">   C --&amp;gt; |a=1| D[结果 1]</span><br><span class="line">   C --&amp;gt; |a=2| E[结果 2]</span><br><span class="line">   F[竖向流程图]</span><br></pre></td></tr></table></figure><ol><li>标准流程图源码格式：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">```</span>][<span class="symbol">flow</span>]</span><br><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br><span class="line">[<span class="code">```]</span></span><br></pre></td></tr></table></figure>显示效果如下所示：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure></li><li>标准流程图源码格式（横向）：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">```</span>][<span class="symbol">flow</span>]</span><br><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br><span class="line">[<span class="code">```]</span></span><br></pre></td></tr></table></figure>显示效果如下所示：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure></li></ol><h3 id="时序图-顺序图"><a href="#时序图-顺序图" class="headerlink" title="时序图(顺序图)"></a>时序图(顺序图)</h3><ol><li>UML 时序图源码样例：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">```</span>][<span class="symbol">sequence</span>]</span><br><span class="line">对象 A-&gt;对象 B: 对象 B 你好吗?（请求）</span><br><span class="line">Note right of 对象 B: 对象 B 的描述</span><br><span class="line">Note left of 对象 A: 对象 A 的描述(提示)</span><br><span class="line">对象 B--&gt;对象 A: 我很好(响应)</span><br><span class="line">对象 A-&gt;对象 B: 你真的好吗？</span><br><span class="line">[<span class="code">```]</span></span><br></pre></td></tr></table></figure>显示效果如下所示：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对象 A-&gt;对象 B: 对象 B 你好吗?（请求）</span><br><span class="line">Note right of 对象 B: 对象 B 的描述</span><br><span class="line">Note left of 对象 A: 对象 A 的描述(提示)</span><br><span class="line">对象 B--&gt;对象 A: 我很好(响应)</span><br><span class="line">对象 A-&gt;对象 B: 你真的好吗？</span><br></pre></td></tr></table></figure></li><li><p>UML 时序图源码复杂样例：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">```</span>][<span class="symbol">sequence</span>]</span><br><span class="line">Title: 标题：复杂使用</span><br><span class="line">对象 A-&gt;对象 B: 对象 B 你好吗?（请求）</span><br><span class="line">Note right of 对象 B: 对象 B 的描述</span><br><span class="line">Note left of 对象 A: 对象 A 的描述(提示)</span><br><span class="line">对象 B--&gt;对象 A: 我很好(响应)</span><br><span class="line">对象 B-&gt;小三: 你好吗</span><br><span class="line">小三--&gt;&gt;对象 A: 对象 B 找我了</span><br><span class="line">对象 A-&gt;对象 B: 你真的好吗？</span><br><span class="line">Note over 小三, 对象 B: 我们是朋友</span><br><span class="line">participant C</span><br><span class="line">Note right of C: 没人陪我玩</span><br><span class="line">[<span class="code">```]</span></span><br></pre></td></tr></table></figure><p>显示效果如下所示：</p></li><li><p>UML 标准时序图样例：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">```</span>][<span class="symbol">mermaid</span>]</span><br><span class="line">%% 时序图例子，-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line">  sequenceDiagram</span><br><span class="line"><span class="code">    participant 张三</span></span><br><span class="line"><span class="code">    participant 李四</span></span><br><span class="line"><span class="code">    张三-&gt;王五: 王五你好吗？</span></span><br><span class="line"><span class="code">    loop 健康检查</span></span><br><span class="line"><span class="code">        王五-&gt;王五: 与疾病战斗</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code">    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span></span><br><span class="line"><span class="code">    李四--&gt;&gt;张三: 很好!</span></span><br><span class="line"><span class="code">    王五-&gt;李四: 你怎么样?</span></span><br><span class="line"><span class="code">    李四--&gt;王五: 很好!</span></span><br><span class="line"><span class="code">[```]</span></span><br></pre></td></tr></table></figure><p>显示效果如下所示：</p></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> %% 时序图例子，-&amp;gt; 直线，--&amp;gt;虚线，-&amp;gt;&amp;gt;实线箭头</span><br><span class="line">sequenceDiagram</span><br><span class="line">  participant 张三</span><br><span class="line">  participant 李四</span><br><span class="line">  张三-&amp;gt;王五: 王五你好吗？</span><br><span class="line">  loop 健康检查</span><br><span class="line">  王五-&amp;gt;王五: 与疾病战斗</span><br><span class="line">  end</span><br><span class="line">  Note right of 王五: 合理 食物 &lt;br&gt;看医生...</span><br><span class="line">  李四--&amp;gt;&amp;gt;张三: 很好!</span><br><span class="line">  王五-&amp;gt;李四: 你怎么样?</span><br><span class="line">  李四--&amp;gt;王五: 很好!</span><br></pre></td></tr></table></figure><h3 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h3><p>甘特图样例：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">```</span>][<span class="symbol">mermaid</span>]</span><br><span class="line">%% 语法示例</span><br><span class="line">  gantt</span><br><span class="line">  dateFormat YYYY-MM-DD</span><br><span class="line">  title 软件开发甘特图</span><br><span class="line">  section 设计</span><br><span class="line"><span class="code">    需求: done, des1, 2014-01-06, 2014-01-08</span></span><br><span class="line"><span class="code">    原型: active, des2, 2014-01-09, 3d</span></span><br><span class="line"><span class="code">    UI 设计: des3, after des2, 5d</span></span><br><span class="line"><span class="code">    未来任务: des4, after des3, 5d</span></span><br><span class="line"><span class="code">  section 开发</span></span><br><span class="line"><span class="code">    理解需求: crit, done, 2014-01-06, 24h</span></span><br><span class="line"><span class="code">    设计框架: crit, done, after des2, 2d</span></span><br><span class="line"><span class="code">    开发: crit, active, 3d</span></span><br><span class="line"><span class="code">    未来任务: crit, 5d</span></span><br><span class="line"><span class="code">    玩耍: 2d</span></span><br><span class="line"><span class="code">  section 测试</span></span><br><span class="line"><span class="code">    功能测试: active, a1, after des3, 3d</span></span><br><span class="line"><span class="code">    压力测试: after a1, 20h</span></span><br><span class="line"><span class="code">    测试报告: 48h</span></span><br><span class="line"><span class="code">[```]</span></span><br></pre></td></tr></table></figure><br>显示效果如下所示：</p><p>%% 语法示例<br>  gantt<br>  dateFormat YYYY-MM-DD<br>  title 软件开发甘特图<br>  section 设计<br>    需求: done, des1, 2014-01-06, 2014-01-08<br>    原型: active, des2, 2014-01-09, 3d<br>    UI 设计: des3, after des2, 5d<br>    未来任务: des4, after des3, 5d<br>  section 开发<br>    理解需求: crit, done, 2014-01-06, 24h<br>    设计框架: crit, done, after des2, 2d<br>    开发: crit, active, 3d<br>    未来任务: crit, 5d<br>    玩耍: 2d<br>  section 测试<br>    功能测试: active, a1, after des3, 3d<br>    压力测试: after a1, 20h<br>    测试报告: 48h</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Front-matter介绍</title>
      <link href="/post/200517.html"/>
      <url>/post/200517.html</url>
      
        <content type="html"><![CDATA[<p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><h2 id="Page-Front-matter-选项详解"><a href="#Page-Front-matter-选项详解" class="headerlink" title="Page Front-matter 选项详解"></a>Page Front-matter 选项详解</h2><div class="table-container"><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块 (默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开 (true/false) (默认为设置中 highlight_shrink 的配置)</td></tr></tbody></table></div><h2 id="Post-Front-matter-选项详解"><a href="#Post-Front-matter-选项详解" class="headerlink" title="Post Front-matter 选项详解"></a>Post Front-matter 选项详解</h2><div class="table-container"><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标签</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图 (如果没有设置 top_img，文章页顶部将显示缩略图，可设为 false/图片地址/留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块 (默认 true)</td></tr><tr><td>toc</td><td>【可选】显示文章 TOC (默认为设置中 toc 的 enable 配置)</td></tr><tr><td>toc_number</td><td>【可选】显示 toc_number (默认为设置中 toc 的 number 配置)</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块 (默认为设置中 post_copyright 的 enable 配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的文章作者</td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的文章作者链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的文章版权链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的版权声明文字</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开 (true/false) (默认为设置中 highlight_shrink 的配置)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr></tbody></table></div><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h2 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#%E6%9C%80%E7%AE%80%E7%A4%BA%E4%BE%8B" title="最简示例"></a>最简示例</h2><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--- title: typora-vue-theme主题介绍 date: 2018-09-07 09:25:00 ---</span><br></pre></td></tr></table></figure><h2 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#%E6%9C%80%E5%85%A8%E7%A4%BA%E4%BE%8B" title="最全示例"></a>最全示例</h2><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--- title: typora-vue-theme主题介绍 date: 2018-09-07 09:25:00 author: 赵奇 img: /source/images/xxx.jpg top: true cover: true coverImg: /images/1.jpg password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92 toc: false mathjax: false summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 categories: Markdown tags: - Typora - Markdown ---</span><br></pre></td></tr></table></figure><h2 id="Hexo-指令"><a href="#Hexo-指令" class="headerlink" title="Hexo 指令"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#Hexo-%E6%8C%87%E4%BB%A4" title="Hexo 指令"></a>Hexo 指令</h2><h2 id="init"><a href="#init" class="headerlink" title="init"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#init" title="init"></a>init</h2><p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p><h2 id="new"><a href="#new" class="headerlink" title="new"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#new" title="new"></a>new</h2><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo new &quot;post title with whitespace&quot;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-p</code>, <code>--path</code></td><td>自定义新文章的路径</td></tr><tr><td><code>-r</code>, <code>--replace</code></td><td>如果存在同名文章，将其替换</td></tr><tr><td><code>-s</code>, <code>--slug</code></td><td>文章的 Slug，作为新文章的文件名和发布后的 URL</td></tr></tbody></table></div><p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page --path about/me &quot;About me&quot;</span><br></pre></td></tr></table></figure><p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p><p>注意！title 是必须指定的！如果你这么做并不能达到你的目的：</p><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page --path about/me</span><br></pre></td></tr></table></figure><p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>&quot;page&quot;</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#generate" title="generate"></a>generate</h2><p>生成静态文件。</p><div class="table-container"><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td><code>-d</code>, <code>--deploy</code></td><td>文件生成后立即部署网站</td></tr><tr><td><code>-w</code>, <code>--watch</code></td><td>监视文件变动</td></tr><tr><td><code>-b</code>, <code>--bail</code></td><td>生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td><code>-f</code>, <code>--force</code></td><td>强制重新生成文件 Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。 使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td></tr><tr><td><code>-c</code>, <code>--concurrency</code></td><td>最大同时生成文件的数量，默认无限制</td></tr></tbody></table></div><p>该命令可以简写为</p><h2 id="publish"><a href="#publish" class="headerlink" title="publish"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#publish" title="publish"></a>publish</h2><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>发表草稿。</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#server" title="server"></a>server</h2><p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><div class="table-container"><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td><code>-p</code>, <code>--port</code></td><td>重设端口</td></tr><tr><td><code>-s</code>, <code>--static</code></td><td>只使用静态文件</td></tr><tr><td><code>-l</code>, <code>--log</code></td><td>启动日记记录，使用覆盖记录格式</td></tr></tbody></table></div><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#deploy" title="deploy"></a>deploy</h2><p>部署网站。</p><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-g</code>, <code>--generate</code></td><td>部署之前预先生成静态文件</td></tr></tbody></table></div><p>该命令可以简写为：</p><h2 id="render"><a href="#render" class="headerlink" title="render"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#render" title="render"></a>render</h2><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure><p>渲染文件。</p><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-o</code>, <code>--output</code></td><td>设置输出路径</td></tr></tbody></table></div><h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#migrate" title="migrate"></a>migrate</h2><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure><p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration">迁移内容</a>。</p><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#clean" title="clean"></a>clean</h2><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h2 id="list"><a href="#list" class="headerlink" title="list"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#list" title="list"></a>list</h2><p>列出网站资料。</p><h2 id="version"><a href="#version" class="headerlink" title="version"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#version" title="version"></a>version</h2><p>显示 Hexo 版本。</p><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#%E9%80%89%E9%A1%B9" title="选项"></a>选项</h2><h3 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#%E5%AE%89%E5%85%A8%E6%A8%A1%E5%BC%8F" title="安全模式"></a>安全模式</h3><p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p><h3 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#%E8%B0%83%E8%AF%95%E6%A8%A1%E5%BC%8F" title="调试模式"></a>调试模式</h3><p>在终端中显示调试信息并记录到 <code>debug.log</code>。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <a href="https://github.com/hexojs/hexo/issues/new">提交调试信息到 GitHub</a>。</p><h3 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#%E7%AE%80%E6%B4%81%E6%A8%A1%E5%BC%8F" title="简洁模式"></a>简洁模式</h3><p>隐藏终端信息。</p><h3 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E8%B7%AF%E5%BE%84" title="自定义配置文件的路径"></a>自定义配置文件的路径</h3><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 使用 custom.yml 代替默认的 _config.yml $ hexo server --config custom.yml # 使用 custom.yml 和 custom2.json，其中 custom2.json 优先级更高 $ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure><p>自定义配置文件的路径，指定这个参数后将不再使用默认的 <code>_config.yml</code>。<br>你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：</p><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 使用 custom.yml 代替默认的 _config.yml $ hexo server --config custom.yml # 使用 custom.yml, custom2.json 和 custom3.yml，其中 custom3.yml 优先级最高，其次是 custom2.json $ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure><p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 <code>_multiconfig.yml</code>。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。</p><h3 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#%E6%98%BE%E7%A4%BA%E8%8D%89%E7%A8%BF" title="显示草稿"></a>显示草稿</h3><p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p><h3 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a><a href="https://iknow.fun/2020/06/02/hexo-front-matter-jie-shao/#%E8%87%AA%E5%AE%9A%E4%B9%89-CWD" title="自定义 CWD"></a>自定义 CWD</h3><p>none</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure><p>自定义当前工作目录（Current working directory）的路径。</p>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-butterfly主题安装</title>
      <link href="/post/200515.html"/>
      <url>/post/200515.html</url>
      
        <content type="html"><![CDATA[<h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>本文转载自 <a href="https://ciweigg2.github.io/">Ciwei大佬的博客</a> <a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#toc-heading-10">hexo-theme-butterfly主题安装</a></p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B" title="快速开始"></a>快速开始</h2><p><code>hexo-theme-butterfly</code>是基于<a href="https://github.com/Molunerfinn">Molunerfinn</a>的<a href="https://github.com/Molunerfinn/hexo-theme-melody">hexo-theme-melody</a>的基础上进行开发的。<br>文档也是在<a href="https://molunerfinn.com/hexo-theme-melody-doc/">hexo-theme-melody</a>的文档基础上修改。因为一些配置变更导致与原主题配置上有部分区别。故如果安装<code>hexo-theme-butterfly</code>主题，请参考这篇文档。</p><h2 id="主题安装和升级"><a href="#主题安装和升级" class="headerlink" title="主题安装和升级"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%92%8C%E5%8D%87%E7%BA%A7" title="主题安装和升级"></a>主题安装和升级</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%AE%89%E8%A3%85" title="安装"></a>安装</h3><p>在你的博客根目录里</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure><p>如果想要安装比较新的dev分支，可以</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%BA%94%E7%94%A8%E4%B8%BB%E9%A2%98" title="应用主题"></a>应用主题</h3><p>修改站点配置文件<code>_config.yml</code>，把主题改为<code>Butterfly</code></p><blockquote><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装： <code>npm install hexo-renderer-jade hexo-renderer-stylus --save</code> or <code>yarn add hexo-renderer-jade hexo-renderer-stylus</code></p></blockquote><h3 id="平滑升级"><a href="#平滑升级" class="headerlink" title="平滑升级"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7" title="平滑升级"></a>平滑升级</h3><p>为了主题的平滑升级, <code>Butterfly</code> 使用了 <a href="https://hexo.io/docs/data-files.html">data files</a>特性。</p><p>推荐把主题默认的配置文件<code>_config.yml</code>复制到 Hexo 工作目录下的<code>source/_data/butterfly.yml</code>，如果<code>source/_data</code>的目录不存在那就创建一个。</p><blockquote><p>注意，如果你创建了<code>butterfly.yml</code>, 它将会替换主题默认配置文件<code>_config.yml</code>里的配置项 (<strong>不是合并而是替换</strong>), 之后你就只需要通过<code>git pull</code>的方式就可以平滑地升级 <code>theme-melody</code>了。</p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E9%85%8D%E7%BD%AE" title="配置"></a>配置</h2><h2 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E" title="配置文件说明"></a>配置文件说明</h2><ul><li>站点配置文件<code>_config.yml</code>是 hexo 工作目录下的主配置文件</li><li><code>butterfly.yml</code> 是 <code>Butterfly</code> 的配置文件。它需要你手动将主题目录下的<code>_config.yml</code>文件复制到 hexo 工作目录的<code>source/_data/butterfly.yml</code>中。如果文件或者文件夹不存在，需要手动创建。</li></ul><h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E8%AF%AD%E8%A8%80" title="语言"></a>语言</h2><p>修改站点配置文件 <code>_config.yml</code></p><p>默认语言是 en</p><p>主题支持三种语言</p><ul><li>default(en)</li><li>zh-CN (简体中文)</li><li>zh-TW (繁体中文)</li></ul><h2 id="自定义主题色"><a href="#自定义主题色" class="headerlink" title="自定义主题色"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E8%89%B2" title="自定义主题色"></a>自定义主题色</h2><p>可以修改大部分UI颜色</p><p>配置<code>butterfly.yml</code>，比如：</p><blockquote><p>颜色值必须被双引号包裹，就像<code>&quot;#000&quot;</code>而不是<code>#000</code>。否则将会在构建的时候报错！</p></blockquote><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme_color:</span> </span><br><span class="line">   <span class="attr">enable:</span> <span class="literal">true</span> </span><br><span class="line">   <span class="attr">main:</span> <span class="string">&quot;#9370DB&quot;</span> </span><br><span class="line">   <span class="attr">paginator:</span> <span class="string">&quot;#7A7FF1&quot;</span> </span><br><span class="line">   <span class="attr">button_hover:</span> <span class="string">&quot;#FF7242&quot;</span> </span><br><span class="line">   <span class="attr">text_selection:</span> <span class="string">&quot;#69c46d&quot;</span> </span><br><span class="line">   <span class="attr">link_color:</span> <span class="string">&quot;#858585&quot;</span> </span><br><span class="line">   <span class="attr">hr_color:</span> <span class="string">&quot;#A4D8FA&quot;</span> </span><br><span class="line">   <span class="attr">read-mode-bg_color:</span> <span class="string">&#x27;#FAF9DE&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-color_1.png" alt=""></p><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-color_2.png" alt=""></p><h2 id="代码高亮主题"><a href="#代码高亮主题" class="headerlink" title="代码高亮主题"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E4%B8%BB%E9%A2%98" title="代码高亮主题"></a>代码高亮主题</h2><p><code>Butterfly</code> 支持了 <a href="https://github.com/equinusocio/material-theme">Material Theme</a>全部 5 种代码高亮样式：</p><ul><li>default</li><li>darker</li><li>pale night</li><li>light</li><li>ocean</li></ul><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">highlight_c-code-default.png)</span></span><br><span class="line"></span><br><span class="line"><span class="string">&gt;</span> <span class="string">darker</span></span><br><span class="line"></span><br><span class="line"><span class="type">![](/images/hexo</span><span class="string">-theme-butterfly-doc-code-darker.png)</span></span><br><span class="line"></span><br><span class="line"><span class="string">&gt;</span> <span class="string">pale</span> <span class="string">night</span></span><br><span class="line"></span><br><span class="line"><span class="type">![](/images/hexo</span><span class="string">-theme-butterfly-doc-code-pale-night.png)</span></span><br><span class="line"></span><br><span class="line"><span class="string">&gt;</span> <span class="string">light</span></span><br><span class="line"></span><br><span class="line"><span class="type">![](/images/hexo</span><span class="string">-theme-butterfly-doc-code-light.png)</span></span><br><span class="line"></span><br><span class="line"><span class="string">&gt;</span> <span class="string">ocean</span></span><br><span class="line"></span><br><span class="line"><span class="type">![](/images/hexo</span><span class="string">-theme-butterfly-doc-highlight-ocean.png)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 代码复制</span></span><br><span class="line"></span><br><span class="line"><span class="string">主题支持代码复制功能</span></span><br><span class="line"></span><br><span class="line"><span class="string">配置`butterfly.yml`</span></span><br><span class="line"></span><br><span class="line"><span class="string">```yaml</span></span><br><span class="line"><span class="attr">highlight_copy:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-code-copy.png" alt=""></p><h2 id="代码换行"><a href="#代码换行" class="headerlink" title="代码换行"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E4%BB%A3%E7%A0%81%E6%8D%A2%E8%A1%8C" title="代码换行"></a>代码换行</h2><p>在默认情况下，<code>hexo-highlight</code>在编译的时候不会实现代码自动换行。如果你不希望在代码块的区域里有横向滚动条的话，那么你可以考虑开启这个功能。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">code_word_wrap:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后找到你站点的 Hexo 配置文件<code>_config.yml</code>，将<code>line_number</code>改成<code>false</code>:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">tab_replace:</span></span><br></pre></td></tr></table></figure><blockquote><p>设置<code>code_word_wrap</code>之前:</p></blockquote><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-code-word-wrap-before.png" alt=""></p><blockquote><p>设置<code>code_word_wrap</code>之后:</p></blockquote><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-code-word-wrap-after.png" alt=""></p><h2 id="社交图标"><a href="#社交图标" class="headerlink" title="社交图标"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E7%A4%BE%E4%BA%A4%E5%9B%BE%E6%A0%87" title="社交图标"></a>社交图标</h2><p>Butterfly支持 <a href="https://fontawesome.com/v4.7.0/">font-awesome v4</a>和 <a href="https://fontawesome.com/icons?from=io">font-awesome v5</a>. 如需开启<a href="https://fontawesome.com/icons?from=io">font-awesome v5</a>,需要在<code>Butterfly.yml</code>上开启</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">cdn:some@latest/css/font-awesome.min.css</span> </span><br><span class="line">     <span class="attr">fontawesomeV5:</span> <span class="string">https://use.fontawesome.com/releases/v5.8.1/css/all.css</span></span><br></pre></td></tr></table></figure><p>无论V4还是V5,书写格式都是一样的<code>图标名：url</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span> </span><br><span class="line">  <span class="attr">fa fa-github:</span> <span class="string">https://github.com/jerryc127</span> </span><br><span class="line">  <span class="attr">fa fa-rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure><p>图标可以去网上寻找哟</p><h2 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%AF%BC%E8%88%AA%E8%8F%9C%E5%8D%95" title="导航菜单"></a>导航菜单</h2><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/||fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">时间轴:</span> <span class="string">/archives/||fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/||fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories/||fa</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">留言板:</span> <span class="string">/messageboard/||fa</span> <span class="string">fa-coffee</span></span><br><span class="line">  <span class="string">友链:</span> <span class="string">/link/||fa</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="string">关于:</span> <span class="string">/about/||fa</span> <span class="string">fa-heart</span></span><br></pre></td></tr></table></figure><blockquote><p>必须是 <code>/xxx/</code>，后面<code>||</code>分开，然后写图标名。菜单名称可自己修改。</p></blockquote><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-menu.png" alt=""></p><h2 id="主页文章节选-自动节选和文章页description"><a href="#主页文章节选-自动节选和文章页description" class="headerlink" title="主页文章节选(自动节选和文章页description)"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E4%B8%BB%E9%A1%B5%E6%96%87%E7%AB%A0%E8%8A%82%E9%80%89-%E8%87%AA%E5%8A%A8%E8%8A%82%E9%80%89%E5%92%8C%E6%96%87%E7%AB%A0%E9%A1%B5description" title="主页文章节选(自动节选和文章页description)"></a>主页文章节选(自动节选和文章页description)</h2><p>因为主题UI的关系，<code>主页文章节选</code>只支持<code>自动节选</code>和<code>文章页description</code>。优先选择<code>自动节选</code>。</p><p>在<code>butterfly.yml</code>里可以开启<code>auto_excerpt</code>的选项，你的文章将会在自动截取部分显示在主页。（默认显示150个字）。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure><p>如果没有开启<code>自动节选</code>，则会显示文章页front-matter里面设置的<code>description</code>。</p><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-post-description.png" alt=""></p><blockquote><p>注意：如果开启了自动节选功能，代码块的显示将有可能不正常。</p></blockquote><h2 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E9%A1%B6%E9%83%A8%E5%9B%BE" title="顶部图"></a>顶部图</h2><p><code>顶部图</code>有2种配置：具体url 和（留空，true和false，三个效果一样）</p><h3 id="page页"><a href="#page页" class="headerlink" title="page页"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#page%E9%A1%B5" title="page页"></a>page页</h3><h4 id="当具体url时"><a href="#当具体url时" class="headerlink" title="当具体url时"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%BD%93%E5%85%B7%E4%BD%93url%E6%97%B6" title="当具体url时"></a>当具体url时</h4><p>主页的顶部图可以在<code>Butterfly.yml</code>设置<code>top_img</code></p><p>archives页的顶部图可以在<code>Butterfly.yml</code>设置<code>archive_img</code></p><p>其他<code>page</code>页的顶部图可以在各自的md页面设置<code>front-matter</code>中的<code>top_img</code></p><blockquote><p>除<code>主页</code>外，其他页面如果没有设置各自的<code>top_img</code>，则会显示与主页同样的<code>top_img</code>图片</p></blockquote><h4 id="当顶部图留空，true和false"><a href="#当顶部图留空，true和false" class="headerlink" title="当顶部图留空，true和false"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%BD%93%E9%A1%B6%E9%83%A8%E5%9B%BE%E7%95%99%E7%A9%BA%EF%BC%8Ctrue%E5%92%8Cfalse" title="当顶部图留空，true和false"></a>当顶部图留空，true和false</h4><p>主页会显示纯颜色的顶部图</p><p>其他page的顶部图没有设置时，也会显示纯颜色的顶部图</p><h3 id="post页"><a href="#post页" class="headerlink" title="post页"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#post%E9%A1%B5" title="post页"></a>post页</h3><p><code>post</code>页的顶部图会优先显示各自<code>front-matter</code>中的<code>top_img</code>,如果没有设置，则会缩略图（即各自``front-matter<code>中的</code>cover<code>)，如果没有则会显示默认的post顶部图,可在</code>Butterfly.yml<code>设置</code>post_img`</p><h2 id="文章相关项"><a href="#文章相关项" class="headerlink" title="文章相关项"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E6%96%87%E7%AB%A0%E7%9B%B8%E5%85%B3%E9%A1%B9" title="文章相关项"></a>文章相关项</h2><p>这个选项是用来显示文章的相关信息的。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">date_type:</span> <span class="string">both</span> <span class="comment">#or created or updated 文章日期是创建日或者更新日或都显示</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span> <span class="comment"># or false 是否显示分类</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="literal">true</span> <span class="comment"># or false 是否显示标签</span></span><br></pre></td></tr></table></figure><p>在文章顶部的资料，</p><p><code>date_type</code>: 可设置文章日期显示创建日期(<code>created</code>)或者更新日期(<code>updated</code>)或者两种都显示(<code>both</code>)</p><p><code>categories</code> 是否显示分类</p><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-post-info.png" alt=""></p><p><code>tags</code>是否显示标签</p><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-post-tag.png" alt=""></p><h2 id="文章版权"><a href="#文章版权" class="headerlink" title="文章版权"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E6%96%87%E7%AB%A0%E7%89%88%E6%9D%83" title="文章版权"></a>文章版权</h2><p>为你的博客文章展示文章版权和许可协议。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-post-copyright.png" alt=""></p><h2 id="文章打赏"><a href="#文章打赏" class="headerlink" title="文章打赏"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E6%96%87%E7%AB%A0%E6%89%93%E8%B5%8F" title="文章打赏"></a>文章打赏</h2><p>在你每篇文章的结尾，可以添加打赏按钮。相关二维码可以自行配置</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">itemlist:</span></span><br><span class="line">        <span class="attr">img:</span> <span class="string">/img/wechat.jpg</span></span><br><span class="line">        <span class="attr">text:</span> <span class="string">微信</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">itemlist:</span></span><br><span class="line">        <span class="attr">img:</span> <span class="string">/img/alipay.jpg</span></span><br><span class="line">        <span class="attr">text:</span> <span class="string">支付宝</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-post-donate.png" alt=""></p><h2 id="头像"><a href="#头像" class="headerlink" title="头像"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%A4%B4%E5%83%8F" title="头像"></a>头像</h2><p>配置`butterages/hexo-theme-butterfly-doc-post-donate.png)</p><h2 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E6%96%87%E7%AB%A0%E5%B0%81%E9%9D%A2" title="文章封面"></a>文章封面</h2><p>文章的markdown文档上,在Front-matter添加cover,并填上要显示的图片地址。<br>如果不配置cover,可以设置显示默认的cover</p><p>配置butterfly.yml</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">default_cover:</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png</span></span><br></pre></td></tr></table></figure><p>当配置多张图片时,会随机选择一张作爲cover.此时写法应爲</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">default_cover:</span><br><span class="line">  - https:<span class="comment">//cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png</span></span><br><span class="line">  - https:<span class="comment">//cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg2.png</span></span><br><span class="line">  - https:<span class="comment">//cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg3.png</span></span><br></pre></td></tr></table></figure><p>随机图片配置哟</p><h2 id="头像-1"><a href="#头像-1" class="headerlink" title="头像"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%A4%B4%E5%83%8F-1" title="头像"></a>头像</h2><p>配置<code>butterfly.yml</code>l````yaml<br>avatar: <a href="https://xxxx/avat">https://xxxx/avat</a> TOC</p><p>在文章页，会有一个目录，用于显示TOC</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span>   <span class="comment">#显示章节数字</span></span><br></pre></td></tr></table></figure><h3 id="为特定的文章配置是否显示TOC和特定的目录章节数字"><a href="#为特定的文章配置是否显示TOC和特定的目录章节数字" class="headerlink" title="为特定的文章配置是否显示TOC和特定的目录章节数字"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E4%B8%BA%E7%89%B9%E5%AE%9A%E7%9A%84%E6%96%87%E7%AB%A0%E9%85%8D%E7%BD%AE%E6%98%AF%E5%90%A6%E6%98%BE%E7%A4%BATOC%E5%92%8C%E7%89%B9%E5%AE%9A%E7%9A%84%E7%9B%AE%E5%BD%95%E7%AB%A0%E8%8A%82%E6%95%B0%E5%AD%97" title="为特定的文章配置是否显示TOC和特定的目录章节数字"></a>为特定的文章配置是否显示TOC和特定的目录章节数字</h3><p>在你的文章<code>md</code>文件的头部，加入<code>toc_number</code>和<code>toc</code>项，并配置<code>true</code>或者<code>false</code>即可。</p><p><code>toc</code>是否显示文章TOC</p><p><code>toc_number</code> 是否显示章节数</p><p>配置之后你的特定的文章将会拥有它自己的目录数字的显示与否，而不会受全局的配置影响。</p><blockquote><p><code>enable: true</code></p></blockquote><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-toc-true.png" alt=""></p><blockquote><p><code>number: false</code></p></blockquote><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-toc-number-false.png" alt=""></p><h3 id="设置是否自动打开TOC"><a href="#设置是否自动打开TOC" class="headerlink" title="设置是否自动打开TOC"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E8%AE%BE%E7%BD%AE%E6%98%AF%E5%90%A6%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80TOC" title="设置是否自动打开TOC"></a>设置是否自动打开TOC</h3><p>可选择进入文章页面时，是否自动打开sidebar显示TOC</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto_open_sidebar:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h2 id="博客年份"><a href="#博客年份" class="headerlink" title="博客年份"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%8D%9A%E5%AE%A2%E5%B9%B4%E4%BB%BD" title="博客年份"></a>博客年份</h2><p><code>since</code>是一个来展示你站点起始时间的选项。它位于页面的最底部。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">since: 2018</span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-since.png" alt=""></p><h2 id="页脚自定义文本"><a href="#页脚自定义文本" class="headerlink" title="页脚自定义文本"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E9%A1%B5%E8%84%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E6%9C%AC" title="页脚自定义文本"></a>页脚自定义文本</h2><p><code>footer_custom_text</code>是一个给你用来在页脚自定义文本的选项。通常你可以在这里写声明文本等。支持 HTML。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer_custom_text:</span> <span class="string">Hi,</span> <span class="string">welcome</span> <span class="string">to</span> <span class="string">my</span> <span class="string">&lt;a</span> <span class="string">hrefmy</span> <span class="string">&lt;a</span> <span class="string">href&quot;https://jerryc.me/&quot;&gt;blog&lt;/a&gt;!</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-eerfly-doc-footer-text.png" alt=""></p><h2 id="ICP"><a href="#ICP" class="headerlink" title="ICP"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#ICP" title="ICP"></a>ICP</h2><p>对于部分有备案的域名，可以在ICP配置显示。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">ICP:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">http://www.beian.miit.gov.cn/state/outPortal/loginPortal.action</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">粤ICP备xxxx</span></span><br></pre></td></tr></table></figure><h2 id="夜间模式"><a href="#夜间模式" class="headerlink" title="夜间模式"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F" title="夜间模式"></a>夜间模式</h2><p>右下角会有夜间模式按钮</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nightshift:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-dark-mode.png" alt=""></p><h2 id="阅读模式"><a href="#阅读模式" class="headerlink" title="阅读模式"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E9%98%85%E8%AF%BB%E6%A8%A1%E5%BC%8F" title="阅读模式"></a>阅读模式</h2><p>阅读模式下会去掉除文章外的内容，避免干扰阅读。</p><p>只会出现在文章页面，右下角会有阅读模式按钮。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">readmode:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-read-mode.png" alt=""></p><h2 id="简繁转换"><a href="#简繁转换" class="headerlink" title="简繁转换"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E7%AE%80%E7%B9%81%E8%BD%AC%E6%8D%A2" title="简繁转换"></a>简繁转换</h2><p>简体繁体互换</p><p>右下角会有简繁转换按钮。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">translate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 默认按钮显示文字(网站是简体，应设置为&#x27;default: 繁&#x27;)</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">简</span></span><br><span class="line">  <span class="comment">#网站默认语言，1: 繁体中文, 2: 简体中文</span></span><br><span class="line">  <span class="attr">defaultEncoding:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment">#延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0</span></span><br><span class="line">  <span class="attr">translateDelay:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment">#博客网址</span></span><br><span class="line">  <span class="attr">cookieDomain:</span> <span class="string">&quot;https://jerryc.me/&quot;</span></span><br><span class="line">  <span class="comment">#当文字是简体时，按钮显示的文字</span></span><br><span class="line">  <span class="attr">msgToTraditionalChinese:</span> <span class="string">&quot;繁&quot;</span></span><br><span class="line">  <span class="comment">#当文字是繁体时，按钮显示的文字</span></span><br><span class="line">  <span class="attr">msgToSimplifiedChinese:</span> <span class="string">&quot;简&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>简体</p></blockquote><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-simp.png" alt=""></p><blockquote><p>繁体</p></blockquote><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-tranditional.png" alt=""></p><h2 id="运行时间"><a href="#运行时间" class="headerlink" title="运行时间"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4" title="运行时间"></a>运行时间</h2><p>网页已运行时间</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">runtimeshow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">start_date:</span> <span class="number">6</span><span class="string">/7/2018</span> <span class="number">00</span><span class="string">:00:00</span>  </span><br><span class="line">  <span class="comment">##网页开通时间</span></span><br><span class="line">  <span class="comment">#格式: 月/日/年 时间</span></span><br><span class="line">  <span class="comment">#也可以写成 年/月/日 时间</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-runtime.png" alt=""></p><h2 id="侧边排版"><a href="#侧边排版" class="headerlink" title="侧边排版"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E4%BE%A7%E8%BE%B9%E6%8E%92%E7%89%88" title="侧边排版"></a>侧边排版</h2><p>可自行决定哪个项目需要显示</p><blockquote><p>至少需要显示一个</p></blockquote><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">card_author:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_announcement:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_recent_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_categories:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_tags:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_archives:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_webinfo:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0" title="相关文章"></a>相关文章</h2><p>相关文章推荐的原理是根据文章tags的比重来推荐</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">related_post:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span> <span class="comment"># 显示推荐文章数目</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-relatedpost.png" alt=""></p><h2 id="自定义字体"><a href="#自定义字体" class="headerlink" title="自定义字体"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E4%BD%93" title="自定义字体"></a>自定义字体</h2><p>可自行设置字体的<code>font-family</code></p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">Lato,</span> <span class="string">Helvetica</span> <span class="string">Neue</span> <span class="string">For</span> <span class="string">Number,</span> <span class="string">-apple-system,</span> <span class="string">BlinkMacSystemFont,</span> <span class="string">Segoe</span> <span class="string">UI,</span> <span class="string">Roboto,</span> <span class="string">PingFang</span> <span class="string">SC,</span> <span class="string">Hiragino</span> <span class="string">Sans</span> <span class="string">GB,&quot;Microsoft</span> <span class="string">JhengHei&quot;,</span> <span class="string">&quot;MicrMicrosoft YaHei&quot;</span><span class="string">,</span> <span class="string">Helvetica</span> <span class="string">Neue,</span> <span class="string">Helvetica,</span> <span class="string">Arial,</span> <span class="string">sans-serif</span></span><br><span class="line">  <span class="attr">code-font:</span> <span class="string">consolas,</span> <span class="string">Menlo,</span> <span class="string">&quot;PingFang SC&quot;</span><span class="string">,</span> <span class="string">&quot;Microsoft JhegHei&quot;</span><span class="string">,&quot;Microsoft</span> <span class="string">YaHei&quot;,</span> <span class="string">monospace,</span> <span class="string">Helvetica</span> <span class="string">Neue</span> <span class="string">For</span> <span class="string">Number</span></span><br></pre></td></tr></table></figure><h2 id="网站副标题"><a href="#网站副标题" class="headerlink" title="网站副标题"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E7%BD%91%E7%AB%99%E5%89%AF%E6%A0%87%E9%A2%98" title="网站副标题"></a>网站副标题</h2><p>可设置主页中显示的网站副标题或者喜欢的座右铭。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">subtitle:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sub1:</span> <span class="string">今日事,今日毕</span></span><br><span class="line">  <span class="attr">sub2:</span> <span class="string">Nevr</span> <span class="string">put</span> <span class="string">off</span> <span class="string">till</span> <span class="string">tomorrow</span> <span class="string">what</span> <span class="string">you</span> <span class="string">can</span> <span class="string">do</span> <span class="string">today</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hhexo-theme-butterfly-doc-index-subtitle.gif" alt=""></p><h2 id="主题页面"><a href="#主题页面" class="headerlink" title="主题页面"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E4%B8%BB%E9%A2%98%E9%A1%B5%E9%9D%A2" title="主题页面"></a>主题页面</h2><h2 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#Page-Front-matter" title="Page Front-matter"></a>Page Front-matter</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">type: （tags,link,categories这三个页面需要配置）</span><br><span class="line">comments: (是否需要显示评论，默认true)</span><br><span class="line">description:</span><br><span class="line"><span class="section">top<span class="emphasis">_img: (设置顶部图)</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br></pre></td></tr></table></figure><h2 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#Post-Front-matter" title="Post Front-matter"></a>Post Front-matter</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img: （除非特定需要，可以不写）</span></span><br><span class="line"><span class="emphasis">comments  是否显示评论（除非设置false,可以不写）</span></span><br><span class="line"><span class="emphasis">cover:  缩略图</span></span><br><span class="line"><span class="emphasis">toc:  是否显示toc （除非特定文章设置，可以不写）</span></span><br><span class="line"><span class="emphasis">toc_</span>number: 是否显示toc数字 （除非特定文章设置，可以不写）</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E6%A0%87%E7%AD%BE%E9%A1%B5" title="标签页"></a>标签页</h2><ol><li><p>前往你的 Hexo 博客的根目录</p></li><li><p>输入<code>hexo new page tags</code></p></li><li><p>你会找到<code>source/tags/index.md</code>这个文件</p></li><li><p>修改这个文件：</p></li></ol><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line"><span class="section">type: &quot;tags&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%88%86%E7%B1%BB%E9%A1%B5" title="分类页"></a>分类页</h2><ol><li><p>前往你的 Hexo 博客的根目录</p></li><li><p>输入<code>hexo new page categories</code></p></li><li><p>你会找到<code>source/categories/index.md</code>这个文件</p></li><li><p>修改这个文件：</p></li></ol><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line"><span class="section">type: &quot;categories&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="相册"><a href="#相册" class="headerlink" title="相册"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E7%9B%B8%E5%86%8C" title="相册"></a>相册</h2><p>为你的博客创建一个相册页！</p><h3 id="创建相册页"><a href="#创建相册页" class="headerlink" title="创建相册页"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%88%9B%E5%BB%BA%E7%9B%B8%E5%86%8C%E9%A1%B5" title="创建相册页"></a>创建相册页</h3><ol><li><p>前往你的 Hexo 博客的根目录</p></li><li><p>输入<code>hexo new page gallery</code></p></li><li><p>你会找到<code>source/gallery/index.md</code>这个文件</p></li><li><p>修改这个文件：</p></li></ol><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Gallery</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line"><span class="section">type: &quot;gallery&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="创建音乐页"><a href="#创建音乐页" class="headerlink" title="创建音乐页"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%88%9B%E5%BB%BA%E9%9F%B3%E4%B9%90%E9%A1%B5" title="创建音乐页"></a>创建音乐页</h2><ol><li><p>前往你的 Hexo 博客的根目录</p></li><li><p>输入<code>hexo new page music</code></p></li><li><p>你会找到<code>source/music/index.md</code>这个文件</p></li><li><p>修改这个文件：</p></li></ol><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 时光不必趁早 东川不会迟到 一切都刚刚好</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line"><span class="section">type: &quot;music&quot;</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line"><span class="code">        &quot;narrow&quot;: false,</span></span><br><span class="line"><span class="code">        &quot;autoplay&quot;: true,</span></span><br><span class="line"><span class="code">        &quot;mode&quot;: &quot;random&quot;,</span></span><br><span class="line"><span class="code">        &quot;showlrc&quot;: 3,</span></span><br><span class="line"><span class="code">        &quot;mutex&quot;: true,</span></span><br><span class="line"><span class="code">        &quot;theme&quot;: &quot;#e6d0b2&quot;,</span></span><br><span class="line"><span class="code">        &quot;preload&quot;: &quot;metadata&quot;,</span></span><br><span class="line"><span class="code">        &quot;listmaxheight&quot;: &quot;513px&quot;,</span></span><br><span class="line"><span class="code">        &quot;music&quot;: [&#123;</span></span><br><span class="line"><span class="code">                        &quot;title&quot;: &quot;那女孩对我说&quot;,</span></span><br><span class="line"><span class="code">                        &quot;author&quot;: &quot;Uu&quot;,</span></span><br><span class="line"><span class="code">                        &quot;url&quot;: &quot;https://m10.music.126.net/20190707210814/bffc91aa364dfe8dfe2b5e456c6220a3/yyaac/055a/055c/0209/20d5474d36261e8d96635c2425e0ec7a.m4a&quot;,</span></span><br><span class="line"><span class="code">                        &quot;pic&quot;: &quot;http://p2.music.126.net/tXo6kGSy27gXlQzOI2O5BA==/109951164161042589.jpg?param=130y130&quot;</span></span><br><span class="line"><span class="code">                &#125;,</span></span><br><span class="line"><span class="code">                &#123;</span></span><br><span class="line"><span class="code">                        &quot;title&quot;: &quot;生活该有的样子&quot;,</span></span><br><span class="line"><span class="code">                        &quot;author&quot;: &quot;A-Lin/王晰&quot;,</span></span><br><span class="line"><span class="code">                        &quot;url&quot;: &quot;https://m10.music.126.net/20190707212419/9474289a91cf7e02e136cd4613720c1c/yyaac/040f/535d/045b/3e0e53eaf1d7830082c2310dc8ab6072.m4a&quot;,</span></span><br><span class="line"><span class="code">                        &quot;pic&quot;: &quot;https://gss1.bdstatic.com/-vo3dSag_xI4khGkpoWK1HF6hhy/baike/w%3D268%3Bg%3D0/sign=01cd9f8855b5c9ea62f304e5ed02d13d/5366d0160924ab18a27d48b43bfae6cd7a890bcd.jpg&quot;</span></span><br><span class="line"><span class="code">                &#125;,</span></span><br><span class="line"><span class="code">                &#123;</span></span><br><span class="line"><span class="code">                        &quot;title&quot;: &quot;再一次拥抱&quot;,</span></span><br><span class="line"><span class="code">                        &quot;author&quot;: &quot;崔子格&quot;,</span></span><br><span class="line"><span class="code">                        &quot;url&quot;: &quot;https://m801.music.126.net/20190707213302/295e2bd322f3c925221674847442f549/jdyyaac/030c/515c/065d/4fd5bafd4af6a2ed29a0176f8c89f8e3.m4a&quot;,</span></span><br><span class="line"><span class="code">                        &quot;pic&quot;: &quot;http://p2.music.126.net/LWZZX5fFAiD-TC13fMfrlA==/109951163424899850.jpg?param=130y130&quot;</span></span><br><span class="line"><span class="code">                &#125;</span></span><br><span class="line"><span class="code">        ]</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#123;% endaplayerlist %&#125;</span></span><br></pre></td></tr></table></figure><p>Butterfly 提供了一个叫做<code>gallery</code>的标签，让你能够在 markdown 文件里生成<code>gallery-item</code>。</p><p>修改你刚刚创建的<code>source/gallery/index.md</code>，并加上<code>gallery</code> 标签。</p><p><code>gallery img-url [title]</code></p><p>例子:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Gallery</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line"><span class="section">type: &quot;gallery&quot;</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">&#123;% gallery https://ws1.sinaimg.cn/large/8700af19gy1fp5i6o2vghj20ea0eajse melody %</span><br><span class="line">&#123;% gallery https://user-images.githubusercontent.com/126213423337325500-23e8f77c-26c9-11e8-8e24-eb4346f1fff5.png background %&#125;</span><br><span class="line">&#123;% gallery https://ws1.sinaimg.cn/large/8700af19gy1fp5i64zaxqj20b40b474b demo1 %&#125;</span><br><span class="line">&#123;% gallery https://ws1.sinaimg.cn/large/8700af19ly1fn2h26q32uj21120kudqq demo2 %&#125;</span><br><span class="line">&#123;% gallery https://ws1.sinaimg.cn/large/8700af19ly1fnhdaimi40j218g0p0dic demo3 %&#125;</span><br><span class="line">&#123;% gallery https://ws1.sinaimg.cn/large/8700af19ly1fn2i5kjh2pj21120kuncd %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>gallery-item 也拥有 fancybox 的效果!</p></blockquote><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-gallery.png" alt=""></p><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5" title="友情链接"></a>友情链接</h2><p>为你的博客创建一个友情链接！</p><h3 id="创建友情链接页面"><a href="#创建友情链接页面" class="headerlink" title="创建友情链接页面"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%88%9B%E5%BB%BA%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5%E9%A1%B5%E9%9D%A2" title="创建友情链接页面"></a>创建友情链接页面</h3><ol><li>前往你的 Hexo 博客的根目录</li><li>输入 <code>hexo new page link</code></li><li>你会找到<code>source/link/index.md</code>这个文件</li><li>修改这个文件：</li></ol><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2018-06-07 22:17:49</span><br><span class="line"><span class="section">type: &quot;link&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h3 id="友情链接添加"><a href="#友情链接添加" class="headerlink" title="友情链接添加"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5%E6%B7%BB%E5%8A%A0" title="友情链接添加"></a>友情链接添加</h3><p>在Hexo博客目录中的<code>source/_data</code>，创建一个文件<code>link.yml</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">class:</span></span><br><span class="line">  <span class="attr">class_name:</span> <span class="string">友情链接</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="attr">1:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">xxx</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://blog.xxx.com</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://cdn.xxxxx.top/avatar.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">xxxxxxx</span></span><br><span class="line">    <span class="attr">2:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">xxxxxx</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.xxxxxxcn/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://xxxxx/avatar.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">xxxxxxx</span>  </span><br><span class="line"></span><br><span class="line"> <span class="attr">class2:</span></span><br><span class="line">   <span class="attr">class_name:</span> <span class="string">链接无效</span></span><br><span class="line">   <span class="attr">link_list:</span></span><br><span class="line">     <span class="attr">1:</span></span><br><span class="line">       <span class="attr">name:</span> <span class="string">梦xxx</span></span><br><span class="line">       <span class="attr">link:</span> <span class="string">https://blog.xxx.com</span></span><br><span class="line">       <span class="attr">avatar:</span> <span class="string">https://xxxx/avatar.png</span></span><br><span class="line">       <span class="attr">descr:</span> <span class="string">xxxx</span></span><br><span class="line">     <span class="attr">2:</span></span><br><span class="line">       <span class="attr">name:</span> <span class="string">xx</span></span><br><span class="line">       <span class="attr">link:</span> <span class="string">https://www.axxxx.cn/</span></span><br><span class="line">       <span class="attr">avatar:</span> <span class="string">https://x</span></span><br><span class="line">       <span class="attr">descr:</span> <span class="string">xx</span></span><br></pre></td></tr></table></figure><h3 id="友情链接界面设置"><a href="#友情链接界面设置" class="headerlink" title="友情链接界面设置"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5%E7%95%8C%E9%9D%A2%E8%AE%BE%E7%BD%AE" title="友情链接界面设置"></a>友情链接界面设置</h3><p>需要添加友情链接，可以在<code>Butterfly.yml</code>配置<br>可在友情链接上写上自己的个人资料，方便其他人添加。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">Flink:</span></span><br><span class="line">  <span class="attr">headline:</span> <span class="string">友情链接</span></span><br><span class="line">  <span class="attr">info_headline:</span> <span class="string">我的Blog资料</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">Blog</span> <span class="string">名字：</span> <span class="string">JerryC</span></span><br><span class="line">  <span class="attr">address:</span> <span class="string">Blog</span> <span class="string">地址：</span> <span class="string">https://jerryc.me/</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">Blog</span> <span class="string">头像：</span> <span class="string">https://jerryc.me/img/avatar.png</span></span><br><span class="line">  <span class="attr">info:</span> <span class="string">Blog</span> <span class="string">简介：</span> <span class="string">今日事,今日毕</span></span><br><span class="line">  <span class="attr">comment:</span> <span class="string">如果需要交换友链,请留言</span></span><br></pre></td></tr></table></figure><h2 id="第三方支持"><a href="#第三方支持" class="headerlink" title="第三方支持"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E7%AC%AC%E4%B8%89%E6%96%B9%E6%94%AF%E6%8C%81" title="第三方支持"></a>第三方支持</h2><h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E8%AF%84%E8%AE%BA" title="评论"></a>评论</h2><blockquote><p>只能选择一个评论服务商</p></blockquote><h3 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#Disqus" title="Disqus"></a>Disqus</h3><p>注册 <a href="https://disqus.com/">disqus</a>，配置你自己的 disqus，然后在<code>Butterfly</code>里开启它。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># or false</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="string">你的disqus的</span> <span class="string">short-name</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-disqus.png" alt=""></p><h3 id="Laibili（来必力）"><a href="#Laibili（来必力）" class="headerlink" title="Laibili（来必力）"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#Laibili%EF%BC%88%E6%9D%A5%E5%BF%85%E5%8A%9B%EF%BC%89" title="Laibili（来必力）"></a>Laibili（来必力）</h3><p>注册<a href="http://www.laibili.com.cn/">来必力</a>，配置你自己的来必力设置，然后在<code>Butterfly</code>里开启它。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">laibili:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># or false</span></span><br><span class="line">  <span class="attr">uid:</span> <span class="string">你的laibili的uid</span></span><br></pre></td></tr></table></figure><p>laibili 的 uid 你能在这里找到:</p><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-laibili.jpg" alt=""></p><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-laibili_2.png" alt=""></p><h3 id="Gitment"><a href="#Gitment" class="headerlink" title="Gitment"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#Gitment" title="Gitment"></a>Gitment</h3><p>遵循 <a href="https://github.com/imsun/gitment">gitment</a>的指示去获取你的 github Oauth 应用的 client id 和 secret 值。</p><p>然后配置<code>butterfly.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">gitment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># or false</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="string">你的github用户名</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">你的github仓库</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="string">你的client</span> <span class="string">id</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="string">你的client</span> <span class="string">secret</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-gitment.png" alt=""></p><h3 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#Gitalk" title="Gitalk"></a>Gitalk</h3><p>遵循 <a href="https://github.com/gitalk/gitalk">gitalk</a>的指示去获取你的 github Oauth 应用的 client id 和 secret 值。以及查看它的相关配置说明。</p><p>然后配置<code>butterfly.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="string">你的client</span> <span class="string">id</span> </span><br><span class="line">  <span class="attr">client_secret:</span> <span class="string">你的client</span> <span class="string">secret</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">你的github仓库</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="string">你的github用户名</span></span><br><span class="line">  <span class="attr">admin:</span> <span class="string">该仓库的拥有者或协作者</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-gitalk.png" alt=""></p><h3 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#Valine" title="Valine"></a>Valine</h3><p>遵循 <a href="https://github.com/xCss/Valine">Valine</a>的指示去配置你的 LeanCloud 应用。以及查看相应的配置说明。</p><p>然后配置<code>butterfly.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># if you want use valine,please set this value is true</span></span><br><span class="line">  <span class="attr">appId:</span>   <span class="comment"># leancloud application app id</span></span><br><span class="line">  <span class="attr">appKey:</span>   <span class="comment"># leancloud application app key</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># valine mail notify (true/false) https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># valine verify code (true/false)</span></span><br><span class="line">  <span class="string">pageSize:ent</span> <span class="string">list</span> <span class="string">page</span> <span class="string">size</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style htte heee https://valine.js.org/#/avatar</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">en</span> <span class="comment"># i18n: zh-cn/en/tw</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Please</span> <span class="string">leave</span> <span class="string">your</span> <span class="string">footprints</span> <span class="comment"># valine comment input placeholder(like: Please leave your footprints )</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment">#valine comment header inf</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-valine.png" alt=""></p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%88%86%E4%BA%AB" title="分享"></a>分享</h2><blockquote><p>只能选择一个分享服务商</p></blockquote><h3 id="AddThis"><a href="#AddThis" class="headerlink" title="AddThis"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#AddThis" title="AddThis"></a>AddThis</h3><blockquote><p>找到你的 pub-id</p></blockquote><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-addthis.jpg" alt=""></p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">addThis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># or false</span></span><br><span class="line">  <span class="attr">pubid:</span> <span class="string">你的pub-id</span></span><br></pre></td></tr></table></figure><h3 id="Sharejs"><a href="#Sharejs" class="headerlink" title="Sharejs"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#Sharejs" title="Sharejs"></a>Sharejs</h3><p>如果你不知道 <a href="https://github.com/overtrue/share.js/">sharejs</a>，看看它的说明。</p><p>配置<code>utterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sharejs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sites:</span> <span class="string">facebookk,twitter,wechat,weibo,qq</span>  <span class="comment">#想要显示的内容</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-sharejs.png" alt=""></p><h3 id="Addtoany"><a href="#Addtoany" class="headerlink" title="Addtoany"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#Addtoany" title="Addtoany"></a>Addtoany</h3><p>可以到<a href="https://www.addtoany.com/">addtoany</a>查看使用说明</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">addtoany:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">item:</span>   <span class="comment"># 显示的内容</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">facebook</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">twitter</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wechat</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sina_weibo</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">facebook_messenger</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">email</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">copy_link</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-addtoany.png" alt=""></p><h2 id="搜索系统"><a href="#搜索系统" class="headerlink" title="搜索系统"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E6%90%9C%E7%B4%A2%E7%B3%BB%E7%BB%9F" title="搜索系统"></a>搜索系统</h2><h3 id="Algolia"><a href="#Algolia" class="headerlink" title="Algolia"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#Algolia" title="Algolia"></a>Algolia</h3><ol><li><p>你需要安装 <a href="https://github.com/oncletom/hexo-algolia">hexo-algolia</a>或 <a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch">hexo-algoliasearch</a>. 根据它们的说明文档去做相应的配置。</p></li><li><p>配置<code>butterfly.yml</code></p></li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">algolia_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hits:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">&quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot;</span> <span class="comment"># if there are no result</span></span><br><span class="line">    <span class="attr">hits_stats:</span> <span class="string">&quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot;</span></span><br></pre></td></tr></table></figure><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2" title="本地搜索"></a>本地搜索</h3><ol><li><p>你需要安装 <a href="https://github.com/PaicHyperionDev/hexo-generator-search">hexo-generator-search</a>. 根据它的文档去做相应配置。<strong>注意格式只支持 xml</strong>。</p></li><li><p>配置<code>butterfly.yml</code></p></li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">algolia_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hits:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">&quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot;</span> <span class="comment"># if there are no result</span></span><br><span class="line">    <span class="attr">hits_stats:</span> <span class="string">&quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot;</span></span><br></pre></td></tr></table></figure><h2 id="网站验证"><a href="#网站验证" class="headerlink" title="网站验证"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E7%BD%91%E7%AB%99%E9%AA%8C%E8%AF%81" title="网站验证"></a>网站验证</h2><p>如果需要搜索引擎收录网站，可能需要登录对应搜索引擎的管理平台进行提交。<br>各自的验证码可从各自管理平台拿到</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Google Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://www.google.com/webmasters/</span></span><br><span class="line"><span class="attr">google_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bing Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://www.bing.com/webmaster/</span></span><br><span class="line"><span class="attr">bing_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Yandex Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://webmaster.yandex.ru/</span></span><br><span class="line"><span class="attr">yandex_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Baidu Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://ziyuan.baidu.com/site/</span></span><br><span class="line"><span class="attr">baidu_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 360 Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># see http://zhanzhang.so.com/</span></span><br><span class="line"><span class="attr">qihu_site_verification:</span></span><br></pre></td></tr></table></figure><h2 id="分析统计"><a href="#分析统计" class="headerlink" title="分析统计"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%88%86%E6%9E%90%E7%BB%9F%E8%AE%A1" title="分析统计"></a>分析统计</h2><h3 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1" title="百度统计"></a>百度统计</h3><ol><li><p>登录百度统计的<a href="https://tongji.baidu.com/web/welcome/login">官方网站</a></p></li><li><p>找到你百度统计的统计代码</p></li></ol><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-baidu-tongji.jpg" alt=""></p><p>3. 配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">你的代码</span></span><br></pre></td></tr></table></figure><h3 id="谷歌分析"><a href="#谷歌分析" class="headerlink" title="谷歌分析"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E8%B0%B7%E6%AD%8C%E5%88%86%E6%9E%90" title="谷歌分析"></a>谷歌分析</h3><ol><li><p>登录谷歌分析的<a href="https://www.google.com/analytics/">官方网站</a></p></li><li><p>找到你的谷歌分析的跟踪 ID</p></li></ol><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-google-analytics.jpg" alt=""></p><ol><li>配置<code>butterfly.yml</code></li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">google_analytics:</span> <span class="string">你的代码</span> <span class="comment"># 通常以`UA-`打头</span></span><br></pre></td></tr></table></figure><h2 id="访问人数-UV-和-PV"><a href="#访问人数-UV-和-PV" class="headerlink" title="访问人数 (UV 和 PV)"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E8%AE%BF%E9%97%AE%E4%BA%BA%E6%95%B0-UV-%E5%92%8C-PV" title="访问人数 (UV 和 PV)"></a>访问人数 (UV 和 PV)</h2><h3 id="busuanzi"><a href="#busuanzi" class="headerlink" title="busuanzi"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#busuanzi" title="busuanzi"></a>busuanzi</h3><p>访问 busuanzi 的<a href="http://busuanzi.ibruce.info/">官方网站</a>查看更多的介绍。</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">site_uv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">site_pv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page_pv:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-busuanzi-site-pv.png" alt=""></p><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-pv.png" alt=""></p><h2 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#MathJax" title="MathJax"></a>MathJax</h2><blockquote><p>建议使用 KaTex 获得更好的效果，下文有介绍！</p></blockquote><p>配置<code>butterfly.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># or false</span></span><br><span class="line">  <span class="attr">cdn:</span> <span class="string">https://cdn.bootcss.com/mathjax/2.7.2/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span> <span class="comment"># required</span></span><br></pre></td></tr></table></figure><p>然后你需要修改一下默认的<code>markdown</code>渲染引擎来实现 MathJax 的效果。</p><p>查看: <a href="https://www.npmjs.com/package/hexo-renderer-kramed">hexo-renderer-kramed</a></p><p>以下操作在你 hexo 博客的目录下 (<strong>不是 Butterfly 的目录!</strong>):</p><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-mathjax.png" alt=""></p><p>效果：</p><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-mathjax-2.jpg" alt=""></p><h2 id="KaTeX"><a href="#KaTeX" class="headerlink" title="KaTeX"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#KaTeX" title="KaTeX"></a>KaTeX</h2><p>首先禁用<code>MathJax</code>（如果你配置过 MathJax 的话），然后修改你的<code>butterfly.yml</code>以便加载<code>katex.min.css</code>:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">katex:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cdn:</span></span><br><span class="line">    <span class="attr">css:</span> <span class="string">https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css</span></span><br></pre></td></tr></table></figure><p>你不需要添加<code>katex.min.js</code>来渲染数学方程。相应的你需要卸载你之前的 hexo 的 markdown 渲染器以及<code>hexo-math</code>，然后安装新的<code>hexo-renderer-markdown-it-plus</code>:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 替换 `hexo-renderer-kramed` 或者 `hexo-renderer-marked` 等hexo的markdown渲染器</span></span><br><span class="line"><span class="comment"># 你可以在你的package.json里找到hexo的markdwon渲染器，并将其卸载</span></span><br><span class="line"><span class="string">npm</span> <span class="string">un</span> <span class="string">hexo-renderer-marked</span> <span class="string">--save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"></span><br><span class="line"><span class="string">npm</span> <span class="string">un</span> <span class="string">hexo-renderer-kramed</span> <span class="string">--save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载 `hexo-math`</span></span><br><span class="line"><span class="string">npm</span> <span class="string">un</span> <span class="string">hexo-math</span> <span class="string">--save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后安装 `hexo-renderer-markdown-it-plus`</span></span><br><span class="line"><span class="string">npm</span> <span class="string">i</span> <span class="string">@upupming/hexo-renderer-markdown-it-plus</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure><p>注意到 <a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus"><code>hexo-renderer-markdown-it-plus</code></a>已经无人持续维护, 所以我们使用 <a href="https://github.com/upupming/hexo-renderer-markdown-it-plus"><code>@upupming/hexo-renderer-markdown-it-plus</code></a>。 这份 fork 的代码使用了 <a href="https://github.com/yzhang-gh/markdown-it-katex"><code>@neilsustc/markdown-it-katex</code></a>同时它也是 VSCode 的插件 <a href="https://github.com/yzhang-gh/vscode-markdown">Markdown All in One</a>所使用的, 所以我们可以获得最新的 KaTex 功能例如 <code>\tag&#123;&#125;</code>。</p><p>你还可以通过 <a href="https://github.com/yzhang-gh/markdown-it-katex"><code>@neilsustc/markdown-it-katex</code></a>控制 KaTeX 的设置，所有可配置的选项参见 <a href="https://katex.org/docs/options.html%E3%80%82">https://katex.org/docs/options.html。</a> 比如你想要禁用掉 KaTeX 在命令行上输出的冗长的警告信息，你可以在根目录的 <code>_config.yml</code> 中使用下面的配置将 <code>strict</code> 设置为 false:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">markdown_it_plus:</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">plugin:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">&#x27;@neilsustc/markdown-it-katex&#x27;</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">strict:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>当然，你还可以利用这个特性来定义一些自己常用的 <code>macros</code>。</p><p>因为 KaTeX 更快更轻量，因此没有 MathJax 的功能多（比如右键菜单）。为那些使用 MathJax 的用户，我们也为 KaTeX 默认添加了 <a href="https://github.com/upupming/katex-copytex">_Copy As TeX Code_</a>的功能。</p><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-katex.gif" alt=""></p><h2 id="特效"><a href="#特效" class="headerlink" title="特效"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E7%89%B9%E6%95%88" title="特效"></a>特效</h2><h3 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E6%89%93%E5%AD%97%E6%95%88%E6%9E%9C" title="打字效果"></a>打字效果</h3><p>打字效果<a href="https://github.com/disjukr/activate-power-mode">activate-power-mode</a></p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-type-animation.gif" alt=""></p><h3 id="静止彩带"><a href="#静止彩带" class="headerlink" title="静止彩带"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E9%9D%99%E6%AD%A2%E5%BD%A9%E5%B8%A6" title="静止彩带"></a>静止彩带</h3><p>好看的彩带背景，可设置每次刷新更换彩带，或者每次点击更换彩带</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">150</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">click_to_change:</span> <span class="literal">false</span>  <span class="comment">#设置是否每次点击都更换彩带</span></span><br></pre></td></tr></table></figure><p>相关配置可查看<a href="https://github.com/hustcc/ribbon.js">canvas_ribbon</a></p><h3 id="动态彩带"><a href="#动态彩带" class="headerlink" title="动态彩带"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%8A%A8%E6%80%81%E5%BD%A9%E5%B8%A6" title="动态彩带"></a>动态彩带</h3><p>好看的彩带背景，会飘动</p><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_ribbon_piao:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-canvas-ribbon-piao.gif" alt=""></p><h3 id="烟花效果"><a href="#烟花效果" class="headerlink" title="烟花效果"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E7%83%9F%E8%8A%B1%E6%95%88%E6%9E%9C" title="烟花效果"></a>烟花效果</h3><p>配置<code>butterfly.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fireworks:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-firewall.gif" alt=""></p><h2 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#PWA" title="PWA"></a>PWA</h2><p>要为<code>Butterfly</code>配上 PWA 特性, 你需要如下几个步骤:</p><ol><li><p>打开 hexo 工作目录</p></li><li><p><code>npm install hexo-offline --save</code> 或者 <code>yarn add hexo-offline</code></p></li><li><p>修改<code>_config.yml</code> 在站点<code>_config.yml</code>中增加以下内容。</p></li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># offline config passed to sw-precache.</span></span><br><span class="line"><span class="attr">offline:</span></span><br><span class="line">  <span class="attr">maximumFileSizeToCacheInBytes:</span> <span class="number">10485760</span> <span class="comment"># 缓存的最大文件大小，以字节为单位</span></span><br><span class="line">  <span class="attr">staticFileGlobs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">public/**/*.&#123;js,html,css,png,jpg,gif,svg,webp,eot,ttf,woff,woff2&#125;</span></span><br><span class="line">  <span class="comment"># 静态文件合集，如果你的站点使用了例如webp格式的文件，请将文件类型添加进去。</span></span><br><span class="line">  <span class="attr">stripPrefix:</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">verbose:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">runtimeCaching:</span></span><br><span class="line">    <span class="comment"># CDNs - should be cacheFirst, since they should be used specific versions so should not change</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">urlPattern:</span> <span class="string">/*</span> <span class="comment"># 如果你需要加载CDN资源，请配置该选项，如果没有，可以不配置。</span></span><br><span class="line">      <span class="attr">handler:</span> <span class="string">cacheFirst</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">origin:</span> <span class="string">your_websie_url</span> <span class="comment"># 可替换成你的 url</span></span><br></pre></td></tr></table></figure><p>更多内容请查看 <a href="https://github.com/JLHwung/hexo-offline">hexo-offline</a>的官方文档</p><ol><li>在<code>butterfly.yml</code>中开启 pwa 选项。</li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pwa:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">manifest:</span> <span class="string">/img/pwa/manifest.json</span></span><br><span class="line">  <span class="attr">theme_color:</span> <span class="string">&quot;#fff&quot;</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/img/pwa/apple-touch-icon.png</span></span><br><span class="line">  <span class="attr">favicon_32_32:</span> <span class="string">/img/pwa/32.png</span></span><br><span class="line">  <span class="attr">favicon_16_16:</span> <span class="string">/img/pwa/16.png</span></span><br><span class="line">  <span class="attr">mask_icon:</span> <span class="string">/img/pwa/safari-pinned-tab.svg</span></span><br></pre></td></tr></table></figure><ol><li>在创建<code>source/</code>目录中创建<code>manifest.json</code>文件。</li></ol><p>Json</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">,</span> <span class="comment">//应用全称</span></span><br><span class="line">    <span class="attr">&quot;short_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Junzhou&quot;</span><span class="punctuation">,</span> <span class="comment">//应用简称</span></span><br><span class="line">    <span class="attr">&quot;theme_color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#49b1f5&quot;</span><span class="punctuation">,</span> <span class="comment">//匹配浏览器的地址栏颜色</span></span><br><span class="line">    <span class="attr">&quot;background_color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#49b1f5&quot;</span><span class="punctuation">,</span><span class="comment">//加载应用时的背景色</span></span><br><span class="line">    <span class="attr">&quot;display&quot;</span><span class="punctuation">:</span> <span class="string">&quot;standalone&quot;</span><span class="punctuation">,</span><span class="comment">//首选显示模式 其他选项有：fullscreen,minimal-ui,browser</span></span><br><span class="line">    <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;start_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;icons&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="comment">//该数组指定icons图标参数，用来时适配不同设备（需为png，至少包含一个192px*192px的图标）</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/pwaicons/36.png&quot;</span><span class="punctuation">,</span> <span class="comment">//图标文件的目录，需在source/目录下自行创建。</span></span><br><span class="line">          <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;36x36&quot;</span>     <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/pwaicons/48.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;48x48    &quot;</span>src<span class="string">&quot;: &quot;</span>images/pwaicons/<span class="number">72.</span>png<span class="string">&quot;,</span></span><br><span class="line"><span class="string">          &quot;</span>sizes<span class="string">&quot;: &quot;</span><span class="number">72</span>x72<span class="string">&quot;,</span></span><br><span class="line"><span class="string">          &quot;</span>type<span class="string">&quot;: &quot;</span>image/png<span class="string">&quot;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">          &quot;</span>src<span class="string">&quot;: &quot;</span>images/pwaicons/<span class="number">96.</span>png<span class="string">&quot;,</span></span><br><span class="line"><span class="string">          &quot;</span>sizes<span class="string">&quot;: &quot;</span><span class="number">96</span>x96<span class="string">&quot;,</span></span><br><span class="line"><span class="string">          &quot;</span>type<span class="string">&quot;: &quot;</span>image/png<span class="string">&quot;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">          &quot;</span>src<span class="string">&quot;: &quot;</span>images/pwaicons/<span class="number">144.</span>png<span class="string">&quot;,</span></span><br><span class="line"><span class="string">          &quot;</span>sizes<span class="string">&quot;: &quot;</span><span class="number">144</span>x144<span class="string">&quot;,</span></span><br><span class="line"><span class="string">          &quot;</span>type<span class="string">&quot;: &quot;</span>image/png<span class="string">&quot;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">          &quot;</span>src<span class="string">&quot;: &quot;</span>images/pwaicons/<span class="number">192.</span>png<span class="string">&quot;,</span></span><br><span class="line"><span class="string">          &quot;</span>sizes<span class="string">&quot;: &quot;</span><span class="number">192</span>x192<span class="string">&quot;,</span></span><br><span class="line"><span class="string">          &quot;</span>type<span class="string">&quot;: &quot;</span>image/png<span class="string">&quot;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            &quot;</span>src<span class="string">&quot;: &quot;</span>images/pwaicons/<span class="number">512.</span>png<span class="string">&quot;,</span></span><br><span class="line"><span class="string">            &quot;</span>sizes<span class="string">&quot;: &quot;</span><span class="number">512</span>x512<span class="string">&quot;,</span></span><br><span class="line"><span class="string">            &quot;</span>type<span class="string">&quot;: &quot;</span>image/png<span class="string">&quot;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">      ],</span></span><br><span class="line"><span class="string">      &quot;</span>splash_pages<span class="string">&quot;: null //配置自定义启动动画。</span></span><br><span class="line"><span class="string">  &#125;</span></span><br></pre></td></tr></table></figure><p>你也可以通过 <a href="https://app-manifest.firebaseapp.com/">Web App Manifest</a>快速创建<code>manifest.json</code>。（Web App Manifest 要求至少包含一个 512*512 像素的图标）</p><ol><li>可以通过<code>Chrome</code>插件<code>Lighthouse</code>检查 PWA 配置是否生效以及配置是否正确。</li></ol><ul><li>打开博客页面</li><li>启动<code>Lighthouse</code>插件 (<code>Lighthouse</code>插件要求至少包含一个 512*512 像素的图标)</li></ul><p>关于 PWA（渐进式增强 Web 应用）的更多内容请参阅 <a href="https://developers.google.com/web/tools/lighthouse/audits/address-bar">Google Tools for Web Developers</a></p><h2 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1" title="字数统计"></a>字数统计</h2><p>要为<code>Butterfly</code>配上字数统计特性, 你需要如下几个步骤:</p><ol><li><p>打开 hexo 工作目录</p></li><li><p><code>npm install hexo-wordcount --save</code> or <code>yarn add hexo-wordcount</code></p></li><li><p>配置<code>butterfly.yml</code>:</p></li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://ciweigg2.github.io/images/hexo-theme-butterfly-doc-word-count.png" alt=""></p><h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a><a href="https://ciweigg2.github.io/2019/07/04/hexo-theme-butterfly-zhu-ti-an-zhuang-ya/#%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6" title="文章置顶"></a>文章置顶</h2><p>要为你一些文章置顶，你需要如下步骤:</p><ol><li>打开 hexo 工作目录</li><li><code>npm uninstall hexo-generator-index --save</code> 然后 <code>npm install hexo-generator-index-pin-top --save</code></li><li>你要在文章的<code>front-matter</code>区域里添加<code>top: True</code>属性来把这篇文章置顶。</li><li>你可以参考 <a href="https://github.com/netcan/hexo-generator-index-pin-top">hexo-generator-index-pin-top</a>这个仓库来了解更多细节。</li></ol><p>举个例子:</p><p>你的某篇文章开头如下：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: xxxx</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> xxx</span><br><span class="line"><span class="section">date: 2018-08-08 08:08:08</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">// ....</span><br></pre></td></tr></table></figure><p>现在把<code>top: True</code>加进去：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: xxxx</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> xxx</span><br><span class="line">date: 2018-08-08 08:08:08</span><br><span class="line"><span class="section">top: True</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">// ....</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 简介及利用GitHub搭建博客</title>
      <link href="/post/a66fd0fd.html"/>
      <url>/post/a66fd0fd.html</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo-是什么"><a href="#Hexo-是什么" class="headerlink" title="Hexo 是什么"></a>Hexo 是什么</h2><p><a href="https://hexo.io/zh-cn/">Hexo (中文官方网站)</a> 是一个快速，简洁且高效的博客框架，让上百个页面在几秒内瞬间完成渲染。Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件，只需一条指令即可部署到 GitHub Pages, Heroku 或其他平台，而且 Hexo 自己也拥有强大的插件系统：强大的 API 带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成。</p><h2 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h2><p>Hexo 是基于 node.js 的，所以我们在安装它之前需要用到 <code>npm</code> 安装工具，这个工具是 node.js 安装包的工具；另外我们还会用到 git 工具，所以请先确保已经安装下列应用程序：</p><ul><li><a href="http://nodejs.org/">Node.js</a></li><li><a href="http://git-scm.com/">Git</a></li></ul><p>安装完成后，在 cmd 下输入以下命令查看版本号，可以此判断是否安装成功：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure></p><h2 id="创建-并初始化Blog"><a href="#创建-并初始化Blog" class="headerlink" title="创建 并初始化Blog"></a>创建 并初始化Blog</h2><p>现在我们已经完成 <code>hexo</code> 的安装，那么现在我们来创建一个 Blog：</p><ol><li><p>创建一个名称为 blog 博客</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>如果不写 _<strong>blog</strong>_，就会在当前目录进行初始化。如果后面跟了名称就会创建目录并在指定目录下进行初始化操作，以这个名字为目录名。</p></li><li><p>我们进入创建的 blog 目录里。并运行该服务</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></li><li><p>打开浏览器，在地址栏输入 <a href="http://localhost:4000/">http://localhost:4000/</a> 可以看到我们刚刚创建的 blog 首页</p></li><li><p>安装部署使用到的 git 插件<br>我们使用的是 git 源码管理工具，所以安装这个插件才能使用 git 进行自动部署：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>安装 Hexo</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>初始化并安装所需组件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init       <span class="comment"># 初始化</span></span><br><span class="line">npm install     <span class="comment"># 安装组件</span></span><br></pre></td></tr></table></figure></li><li><p>完成后依次输入下面命令，启动本地服务器进行预览：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean      <span class="comment"># 如果生成也没有问题，可以先清理之前生成的文件</span></span><br><span class="line">hexo g          <span class="comment"># 生成页面</span></span><br><span class="line">hexo s          <span class="comment"># 启动预览</span></span><br></pre></td></tr></table></figure><p>访问 <a href="http://localhost:4000/">http://localhost:4000</a>，出现 Hexo 默认页面，本地博客安装成功！</p></li><li><p>博客目录结构  </p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">├── .  </span><br><span class="line">├── \_config.landscape.yml  </span><br><span class="line">├── \_config.yml  </span><br><span class="line">├── node\_modules  </span><br><span class="line">├── package-lock.json  </span><br><span class="line">├── package.json  </span><br><span class="line">├── scaffolds  </span><br><span class="line">├── source  </span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><ul><li><code>config.yml</code> ：全局配置文件，比如网站名称，副标题，秒速，作者，语言等等。具体可以参考官方文档：<a href="https://hexo.io/zh-cn/docs/configuration.html%E3%80%82">https://hexo.io/zh-cn/docs/configuration.html。</a></li><li><code>package.json</code> : 应用程序的信息，以及需要安装的模块信息。</li><li><code>scaffolds</code> ：模版文件夹。新建文章时，Hexo 会根据scaffold 中的模板文件来建立新的文件。Hexo的模板是指在新建的 markdown文件中默认填充的内容。例如，如果修改scaffold/post.md 中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。也就是说，通过hexo命令每新建一个文章，都会包含指定模板文件中的内容。</li><li><code>source</code> ： 这个文件夹下面存放的是存放用户资源的地方，如markdown文章。Markdown和HTML文件会被解析并放到public文件夹，而其他文件会被拷贝过去。注意:除_posts文件夹之外，开头命名为_(下划线)的文件/文件夹和隐藏的文件将会被忽略。默认有一个 hello-world.md 文件。</li><li><code>themes</code> ：网站主题目录，hexo 有非常丰富的主题支持，主题目录会存放在这个目录下面。更多的主题参见：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></li></ul></li><li><p>手动部署网站</p><blockquote><p>注意：部署前需要重新生成网站，每一次修改后都需要重新生成网站并进行部署，生成网站请看第 7 步。</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><blockquote><p>如果在部署出现如下错误信息请参考第 4 步，需要提前安装 git 部署插件</p></blockquote><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure></li></ol><h2 id="连接-GitHub"><a href="#连接-GitHub" class="headerlink" title="连接 GitHub"></a>连接 GitHub</h2><p>打开 git bash，输入命令设置用户名和邮箱：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;自己注册的Github用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;自己注册的Github邮箱&quot;</span></span><br></pre></td></tr></table></figure><br>创建 SSH 密钥：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的Github邮箱&quot;</span></span><br></pre></td></tr></table></figure><br>所生成文件在 [C:\\Users\ 用户名 \.ssh] 目录，查看 id_rsa.pub 公钥内容并复制文件的内容。</p><p>添加公钥至 Github： Setting -&gt; SSH and GPG keys -&gt; New SSH key</p><p>验证连接：<br>打开 GitBash，输入： <strong>ssh -T <a href="mailto:git@Github.com">git@Github.com</a></strong><br>显示 “Hi xxx! You’ve successfully……” 即连接成功。</p><h2 id="创建-Github-Pages-仓库"><a href="#创建-Github-Pages-仓库" class="headerlink" title="创建 Github Pages 仓库"></a>创建 Github Pages 仓库</h2><ol><li>Github 主页右上角加号 -&gt; New repository</li><li>Repository name 中输入 用户名.Github.io</li><li>勾选 “Initialize this repository with a README”</li><li>Description 选填</li><li>填好后点击 Create repository 创建</li></ol><h2 id="部署-Hexo-到-GithubPages"><a href="#部署-Hexo-到-GithubPages" class="headerlink" title="部署 Hexo 到 GithubPages"></a>部署 Hexo 到 GithubPages</h2><p>安装 hexo-deployer-git： 前面已经安装过了，可以不用重复安装<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><br>修改 _config.yml 文件末尾的 Deployment 部分，修改成如下：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@Github.com:用户名/用户名.Github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><br>完成后运行 <code>hexo d</code> 将网站上传部署到 Github Pages。</p><p>如果上面的步骤都已经顺利完成了，恭喜你，你已成功完成了第一个网站的部署和搭建</p><p>打开浏览器输入网址：<a href="https://xn--eqr924avxo.github.io/">https:// 用户名.github.io</a> 欣赏一下你的成果：）</p><h2 id="发布第一篇文章"><a href="#发布第一篇文章" class="headerlink" title="发布第一篇文章"></a>发布第一篇文章</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;First post&quot;</span></span><br></pre></td></tr></table></figure><p>其中 source 文件夹中会出现一个 First post.md 文件，就可以使用 Markdown 编辑器在该文件中撰写文章了。</p><p>写完后运行下面代码将文章渲染并部署到 Github Pages 上完成发布，以后每次发布文章都是这两条命令！</p><p>可以在命令中指定文章的布局（layout），不指定默认为 post，也可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。创建的新文章会自动加上指定布局对应的模板文件中的内容。</p><h3 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h3><p>Hexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。</p><p>布局路径 postsource/_postspagesourcedraftsource/_drafts</p><p>如果你不想你的文章被处理，你可以将 Front-Matter 中的 layout: 设为 false 。</p><h3 id="模版（Scaffold）"><a href="#模版（Scaffold）" class="headerlink" title="模版（Scaffold）"></a>模版（Scaffold）</h3><p>在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new photo <span class="string">&quot;My Gallery&quot;</span></span><br></pre></td></tr></table></figure><p>在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md，并根据其内容建立文章，以下是您可以在模版中使用的变量：<br>变量描述 layout 布局 title 标题 date 文件建立日期</p><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>Front-matter 是文件最上方以 — 分隔的区域，用于指定个别文件的变量，举例来说：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line"><span class="section">date: 2013/7/13 20:46:25</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><br>注意：一般 Front-matter 使用的 yaml 语法，yaml 语法需要注意空格，如 title: Hello World 冒号需要有一个空格，当然除 YAML 外，你也可以使用 JSON 来编写 Front-matter。<br>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><p>参数描述默认值 layout 布局 title 标题 date 建立日期文件建立日 updated 更新日期文件更新日期 comments 开启文章的评论功能 truetags 标签（不适用于分页）categories 分类（不适用于分页）permalink 覆盖文章网址</p><p><strong>分类和标签</strong><br>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性而标签没有顺序和层次。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> Diary</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> PS3</span><br><span class="line"><span class="bullet">-</span> Games</span><br></pre></td></tr></table></figure><p>WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法： categories:<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> Diary</span><br><span class="line"><span class="bullet">-</span> Life</span><br></pre></td></tr></table></figure><br>会使分类 Life 成为 Diary 的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类.</p><h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>设置文章摘要，我们只需在想显示为摘要的内容之后添 即可。像下面这样：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hello hexo markdown</span><br><span class="line">date: 2016-11-16 18:11:25</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> hello</span><br><span class="line"><span class="bullet">-</span> hexo</span><br><span class="line"><span class="section">- markdown</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line">我是短小精悍的文章摘要(๑•̀ㅂ•́) ✧</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">紧接着文章摘要的正文内容</span><br></pre></td></tr></table></figure><br>这样， 之前、文档配置参数之后中的内容便会被渲染为站点中的文章摘要。</p><blockquote><p>注意！文章摘要在文章详情页是正文中最前面的内容。</p></blockquote><h3 id="资源引用"><a href="#资源引用" class="headerlink" title="资源引用"></a>资源引用</h3><p>写个博客，有时候会想添加个图片或者其他形式的资源等等。有以下两种方式进行解决：</p><ul><li>使用绝对路径引用资源，在 Web 世界中就是资源的 URL</li><li>使用相对路径引用资源<br>对于使用相对路径引用资源的，我们可以使用 Hexo 提供的资源文件夹功能。</li></ul><p>使用文本编辑器打开站点根目录下的 _ config.yml 文件，将 post_asset_folder 值设置为 true。</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>修改之后会开启 Hexo 的文章资源文件管理功能。Hexo 将会在我们每一次通过 <code>hexo new</code></p><h3 id="清理缓存"><a href="#清理缓存" class="headerlink" title="清理缓存"></a>清理缓存</h3><p>如果在发布后，出现一些莫名的错误，可以在生成静态网页之前，先尝试清理缓存文件，再重新生成静态网页文件。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>上述命令会清除本地站点文件夹下的缓存文件（db.json）和已有的静态文件（public）。</p><p>生成页面<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></p><p>部署发布<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><br>也可以不使用命令自己创建 .md 文件，只需在文件开头手动加入如下格式 Front-matter 即可，写完后运行 <code>hexo g</code> 和 <code>hexo d</code> 发布。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo 简介及利用GitHub搭建博客</span><br><span class="line">author: Terry Dai</span><br><span class="line">comments: <span class="literal">true</span></span><br><span class="line">toc: <span class="literal">true</span></span><br><span class="line">abbrlink: a66fd0fd</span><br><span class="line">tags:</span><br><span class="line">  - hexo</span><br><span class="line">categories:</span><br><span class="line">  - 网站建设</span><br><span class="line">  - hexo</span><br><span class="line"><span class="built_in">date</span>: 2020-05-10 00:00:00</span><br><span class="line">updated:</span><br><span class="line">summary:</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">正文</span><br></pre></td></tr></table></figure></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://hexo.io/zh-cn/">hexo 官方网站 (中文)</a><br><a href="https://hexo.io/">hexo 官方网站 (英文)</a><br><a href="https://hexo.io/zh-cn/api/">Hexo 官方 API (中文)</a><br><a href="https://hexo.io/zh-cn/docs/">Hexo 官方文档 (中文)</a><br><a href="https://github.com/">Github 官方网站</a><br><a href="https://nodejs.org/en/">Node.js 官方文档</a><br><a href="https://nodejs.org/en/download/package-manager/">Node.js 安装文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
